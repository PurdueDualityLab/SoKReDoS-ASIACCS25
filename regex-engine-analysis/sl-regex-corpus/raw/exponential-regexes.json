[
  {
    "regex": "^\"(?:[^\\n\\f\\r\"\\\\]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\S\\s])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\x0c"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\n",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\"\\\r\\\ri"
        ],
        "suffix": "\\\r\\\r\\\r\\\r\\\r\\\r\\\r\\\r\n\\\ri\\\r\\\r\\\r\\\rgzwftbpwi",
        "pump": [
          "\\\r\\\r\\\r\\\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!-- @@(?:(?:\\n?.)*?)-->)",
    "inputs": [
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "",
        "pump": [
          "\\x0a."
        ]
      },
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "->-",
        "pump": [
          "\na"
        ]
      },
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "",
        "pump": [
          "\\x0a."
        ]
      },
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "- ",
        "pump": [
          "\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(superator_(definition|alias_for))?((_?\\d{2,3})+)((__\\d{2,3})+)$",
    "inputs": [
      {
        "prefix": [
          "superator_definition_00"
        ],
        "suffix": "",
        "pump": [
          "_00000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "u",
        "pump": [
          "_00000"
        ]
      },
      {
        "prefix": [
          "dddd"
        ],
        "suffix": "",
        "pump": [
          "ddddd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "66636666366666666666366666663__",
        "pump": [
          "66636666"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "_0"
        ],
        "suffix": "or_",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "_"
        ],
        "suffix": "06170617645830030",
        "pump": [
          "0617"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[(.+\\|?)+\\]$",
    "inputs": [
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "}|"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "]a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "t[0et[0eLdwo8kPd~qW9",
        "pump": [
          "t[0e"
        ]
      },
      {
        "prefix": [
          "[\\"
        ],
        "suffix": "",
        "pump": [
          "}|"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "][",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[g=/[g=/$vTx(KL@u~k",
        "pump": [
          "[g=/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((/|..)?[-a-zA-Z0-9:_]+)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "$$a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "\u0000",
        "pump": [
          "0---"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\?\\>)(\\n|\\s)*(\\]\\]\\>)",
    "inputs": [
      {
        "prefix": [
          "?>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "?>"
        ],
        "suffix": ">>",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "?>?>]?>\n\r \t\n\t\t   \r\n\n \t\n\r\n\r\t\n \r\r\t "
        ],
        "suffix": "\n\n\n\r\t\n\n\n\n\r\t\n\r ",
        "pump": [
          "\n\n\n\r\t\n"
        ]
      },
      {
        "prefix": [
          "?>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "?>"
        ],
        "suffix": "]?>",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "?>"
        ],
        "suffix": "\n\n \n \n\n\n \n \n\t\n\n\n\r\n\t \t\t\t\n\t\n \n\n",
        "pump": [
          "\n\n \n \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*(/\\*(.*?\\s*?)*\\*/)*)*",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/*",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\n/*\t\n/*\\s*bJ2h}AY4>",
        "pump": [
          "\t\n/*"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/**P/**PkqUqUNkTLaV",
        "pump": [
          "/**P"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((https?:\\/\\/)?([\\da-z\\.\\*-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.\\*-]*)*\\/?)\\s?(\\d{3})*",
    "inputs": [
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": ".\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "*d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": ".aAh0https",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "",
        "pump": [
          "d*"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "ps.00",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "*a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\w+):(\\w+\\pL.))+\\s?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a::",
        "pump": [
          "a:aaaa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:$",
        "pump": [
          "a:aaaaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?i)\\bstats_(s(ta(ndard_deviation|t_(noncentral_t|correlation|in(nerproduct|dependent_t)|p(owersum|ercentile|aired_t)|gennch|binomial_coef))|kew)|harmonic_mean|c(ovariance|df_(n(oncentral_(chisquare|f)|egative_binomial)|c(hisquare|auchy)|t|uniform|poisson|exponential|f|weibull|l(ogistic|aplace)|gamma|b(inomial|eta)))|den(s_(n(ormal|egative_binomial)|c(hisquare|auchy)|t|pmf_(hypergeometric|poisson|binomial)|exponential|f|weibull|l(ogistic|aplace)|gamma|beta)|_uniform)|variance|kurtosis|absolute_deviation|rand_(setall|phrase_to_seeds|ranf|ge(n_(no(ncen(tral_(t|f)|ral_chisquare)|rmal)|chisquare|t|i(nt|uniform|poisson|binomial(_negative)?)|exponential|f(uniform)?|gamma|beta)|t_seeds)))\\b",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "((::){0,1}[A-Z][\\w]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a:a",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:a",
        "pump": [
          "::AA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^[0-9]+([\\\\.]+|[0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0."
        ],
        "suffix": "#",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "0."
        ],
        "suffix": "\u0000",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "283428344498284733n",
        "pump": [
          "2834"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([[:alnum:]]+(-?\\w*)*('?\\w+)?) ?){1,}",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "-A'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "::n"
        ],
        "suffix": "\u0000",
        "pump": [
          "w:n"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-A'",
        "pump": [
          "'aaa"
        ]
      },
      {
        "prefix": [
          ":m"
        ],
        "suffix": "\u0000",
        "pump": [
          "wm"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-A':",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "::n"
        ],
        "suffix": "\u0000",
        "pump": [
          "w:n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\"((?:\\\\\\\\|\\\\\\\"|.)+?)\\\")",
    "inputs": [
      {
        "prefix": [
          "\"]"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\"\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\"|"
        ],
        "suffix": "\\\\\\\\\\?\\\\\\\\\\\\\\?\\\\?\\\\\\\\?\\\\?\\|\\?\\||?\\||?bc0daD9FfeaB36FaA\\|\\?275CdcEEAa2d3cEEAah7SCAT1\\<]%R!",
        "pump": [
          "\\\\\\\\\\?\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\/\\/.*\\n)* *(?:else )?if *\\(freeExports\\) *{\\s*}\\n",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\-[a-z][= ]\\S+\\s*)+)?(?:@?(\\w+))?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "-aa\t$",
        "pump": [
          "-a a-a a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "-a a-a a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "NAME SERVER INFORMATION:\\n((.+\\n)+)\\s+\\n",
    "inputs": [
      {
        "prefix": [
          "NAME SERVER INFORMATION:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "NAME SERVER INFORMATION:\n"
        ],
        "suffix": "I",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "NAME SERVER INFORMATION:\\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "NAME SERVER INFORMATION:\n"
        ],
        "suffix": "ATI",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " ( (?:\\\\.|[^\\[]*)* ) \\[ \\@ (\\d+ | [a-zA-Z]\\w* ) (?: \\( (.*) \\) )? \\] }\n     ",
    "inputs": [
      {
        "prefix": [
          "  "
        ],
        "suffix": "  [ @  a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "%  u%  uF*<d0EEQ4BEY",
        "pump": [
          "%  u"
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": ")   ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "  qz  qzw9JF(`\tG; 0",
        "pump": [
          "  qz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([/][*])|([/][/][^\\n]*)|('[^'\\\\]*(?:\\.[^'\\\\]*)*')|(\"[^\"\\\\]*(?:\\.[^\"\\\\]*)*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'\"\n",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'/\"/\n",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "..\n\b\n\t\r\t....\n\b\n\t\r\t...\n\b\n\t\r\t\b..\n\b\n\t\r.3EC81AAA0413c84Cef7b0e3b4BbB34a64Aae64Aae8CD9C1AAA",
        "pump": [
          "..\n\b\n\t\r\t.."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r|\\n|\\r\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*(?:\\t|\\s)*(?:\\-|to)(?:\\t|\\s)*(\\d+)\\w*,*(?:\\t|\\s)*(\\d*)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "toa.\n",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\nt\n0ato",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([\\w:]+)((?:\\s+[\\w\\-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<:s-=s"
        ],
        "suffix": "",
        "pump": [
          "\"\"s-=s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"([^\\\\\\\"\\n]|\\\\[\\\\\"\\'nrbtfav\\?]|\\\\[0-7]{1,3}|\\\\x[0-9a-fA-F]+|\\\\[uU]([0-9a-fA-F]{4})([0-9a-fA-F]{4})?)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!\\00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\x",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!\\00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\Uaaaa",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!\\00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\Ua",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "\"\\\"\\\"1\\\"\\\""
        ],
        "suffix": "\\x1F90CBfaFC\\x1F90CBfaFC6F1d6Fe96dWEwU'_sz\\\"W1}W\\\"1}WE\\x1F90CBfaFC6F",
        "pump": [
          "\\x1F90CBfaFC"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s+|\\d+\\.\\s*)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "0..",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "sd\u0000s"
        ],
        "suffix": "\u0000",
        "pump": [
          "sd\u0000s"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "0",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "sd\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "sd\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\'(?:[^\\']+|\\'\\')*\\')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a'a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "y'"
        ],
        "suffix": "g\t\nyg\t\ny0ll4$aVE[5",
        "pump": [
          "g\t\ny"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "v*5!v*5! xY>q\t~S\r ",
        "pump": [
          "v*5!"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s*<[NS]>\\s*,\\s*){100,})",
    "inputs": [
      {
        "prefix": [
          "<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,"
        ],
        "suffix": ",<N>,<N>,<N>,<N>,<N>",
        "pump": [
          "\t<N>,\t"
        ]
      },
      {
        "prefix": [
          "<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<N>,s"
        ]
      },
      {
        "prefix": [
          "\n\r\r\n\n\r\t\n\n\r "
        ],
        "suffix": "\t\r \t\r\t\t\r\r <N>,\t\r \t\r\t\t\r\r <N>,\t \t\r \t\t \r  \t  \n\r\r\r\t\t\t \r  \t  \n\r\r\r\t\t \r\t \r \r \n\r\n\r\r\n\r\t\n ",
        "pump": [
          "\t\r \t\r\t\t\r\r <N>,"
        ]
      },
      {
        "prefix": [
          "<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,<N>,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<N>,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<S>,\t\t\r \r\r\n\r<S>,\t\t\r \r\r\n\r \t \n\t<S>, \t\n  \n\t  \n\r\n\t\r\n\n\n\r\t \t\t\t\t \n \r\r\n\r \t \n\t<S>, \t\n  ",
        "pump": [
          "<S>,\t\t\r \r\r\n\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<N>>",
        "pump": [
          "\t<N>,\t"
        ]
      },
      {
        "prefix": [
          "<N>,<N>,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<N>,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(BEGIN:VEVENT(.*\\n)*?END:VEVENT\\r?\\n)",
    "inputs": [
      {
        "prefix": [
          "BEGIN:VEVENT"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "BEGIN:VEVENT"
        ],
        "suffix": "D:VEVEN",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "BEGIN:VEVENT"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "BEGIN:VEVENT"
        ],
        "suffix": "IN:V",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "package (?:\\w+(?:::)?)+;",
    "inputs": [
      {
        "prefix": [
          "package 0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "package a"
        ],
        "suffix": "ac",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "package ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "package "
        ],
        "suffix": "packpackpacacckpack",
        "pump": [
          "pack"
        ]
      },
      {
        "prefix": [
          "package q"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "package a"
        ],
        "suffix": "ac:pac",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "package www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "package "
        ],
        "suffix": "packpacka551466392",
        "pump": [
          "pack"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\t)*\\n+(\\s|\\t)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\r\r\r"
        ],
        "suffix": "\r\t\n\t\n\t\r\t\n\t\n\t\r\t\t\r\t\t\r\t\b",
        "pump": [
          "\r\t\n\t\n\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\u000ba",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t\n\r\n"
        ],
        "suffix": "\t\n\n\r\t\n\r\t\t\n\n\r\t\n\r\t\r\r  \n  \t\n\n\n\t\n\t \b",
        "pump": [
          "\t\n\n\r\t\n\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Nameservers\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Nameservers\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Nameservers\n"
        ],
        "suffix": "erv",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Nameservers\\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Nameservers\n"
        ],
        "suffix": "v",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*\\\\( *([^\\\\)]*) *\\\\))*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "]",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "()\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\\\G\\\\\\\\\\G\\\\\\\\8\\\\\\ \\\\8i8BVXohzCamKS9w4S7vhzCamKS9w4S7vSMt6K5fq",
        "pump": [
          "\\\\\\G\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#define\\s+(\\S+)+\\s+(\\S+)",
    "inputs": [
      {
        "prefix": [
          "#define !"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "#define\ta"
        ],
        "suffix": "ef\ta\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#definesSS"
        ],
        "suffix": "",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "#define\t"
        ],
        "suffix": "KDYSKDYSNPFAFLBPMQ",
        "pump": [
          "KDYS"
        ]
      },
      {
        "prefix": [
          "#define $"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "#define\ta"
        ],
        "suffix": "in\ta#\t#defin",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#definesSS"
        ],
        "suffix": "",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "#define\n"
        ],
        "suffix": "ne#dne#d#de!t#;sU#",
        "pump": [
          "ne#d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\d\\s\\p{L}:,\\.]{3,})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          ",,,,,,,"
        ],
        "suffix": "\u0000",
        "pump": [
          "},,,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a$",
        "pump": [
          "aaaaaaa"
        ]
      },
      {
        "prefix": [
          ",,,,,{"
        ],
        "suffix": "\u0000",
        "pump": [
          "},,,,{"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ",:"
        ],
        "suffix": "\u0000",
        "pump": [
          "}:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n2 OBJE(?:\\n[3-9].+)+",
    "inputs": [
      {
        "prefix": [
          "\n2 OBJE"
        ],
        "suffix": "a",
        "pump": [
          "\n3a\n3a"
        ]
      },
      {
        "prefix": [
          "\n2 OBJE"
        ],
        "suffix": "a",
        "pump": [
          "\n3a\n3a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\])",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]\\a][",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "SamsungBrowser\t0._0"
        ],
        "suffix": "s",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "SamsungBrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "SamsungBrowser\t0._0"
        ],
        "suffix": "\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "SamsungBrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "mail#((\\d)+)+",
    "inputs": [
      {
        "prefix": [
          "mail#0"
        ],
        "suffix": "mail#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "mail#dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "mail#0"
        ],
        "suffix": "mail#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "mail#ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+\\.?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\.|(\\\\\\\")|[^\\\"\"\\n])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": ".\\\"\".",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "./.?.(._./.?.(._|]nvbdxrtexqswcgd.?.(._^](+.\\.(|=<!#,.t.",
        "pump": [
          "./.?.(._"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": ".\\",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]*[-_]?[\\w.]+)*@([a-zA-Z0-9]*[-_]?[a-zA-Z0-9]+)+[\\\\.][A-Za-z]{2,3}([\\\\.][A-Za-z]{2})?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "_."
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "a@a-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "w0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "gwxEgwxExr_Et4",
        "pump": [
          "gwxE"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "_."
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "a@a-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3d1E3d1ER927as",
        "pump": [
          "3d1E"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* First integer indicates how much room we have *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "W-qDW-qDk)p< \t&ib.",
        "pump": [
          "W-qD"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([^+#]*|\\+)(/([^+#]*|\\+))*(/#)?|#)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "$#",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "a/##",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//k^/d\\))[|||cZ///k^/d\\))[|||cZ/t(XPN^^q/)?|pFYLug/;p$Q$2\t5XxY/sYUXG:$=(T0\t{1/\b\rY`N\b\to=\njRDG#",
        "pump": [
          "//k^/d\\))[|||cZ/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<version>)((\\d|\\w|[-]|\\S)*)</version>",
    "inputs": [
      {
        "prefix": [
          "<version>"
        ],
        "suffix": "",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          "<version>"
        ],
        "suffix": "<ve",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "<versi"
        ],
        "suffix": "on>6on>679UsJ49*?u",
        "pump": [
          "on>6"
        ]
      },
      {
        "prefix": [
          "<version>"
        ],
        "suffix": "",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          "<version>"
        ],
        "suffix": "s",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "<versi"
        ],
        "suffix": "on>0on>0b1P5A7vR]'",
        "pump": [
          "on>0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<blockquote class=\"([^\"]+)\">((.|\\n)*?)<\\/blockquote>",
    "inputs": [
      {
        "prefix": [
          "<blockquote class=\"#\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<blockquote class=\"a\">"
        ],
        "suffix": "</blockquot",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<blockquote class=\"<blockquote class=!\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<blockquote class=\"a\">"
        ],
        "suffix": "l\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "=\\sVersion\\s((\\d+\\.?)+).+?=",
    "inputs": [
      {
        "prefix": [
          "= Version 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "=\tVersion\t0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "=sVersionsdd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "= Version 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "=\tVersion\t0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "=sVersionsdd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "==\tVersion\t"
        ],
        "suffix": "04680468831458546",
        "pump": [
          "0468"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*(.|\\n)*\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*[-_:+ ])*(lon|lng)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ln",
        "pump": [
          "a "
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "  -_  -_:+ J^-Q}K2q>j:.`2S|a}6)N fPVe)58+(^vPR",
        "pump": [
          "  -_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:url\\((\"(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^\"\\\\])*\"|'(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^'\\\\])*'|[^)]*)\\))",
    "inputs": [
      {
        "prefix": [
          "url('"
        ],
        "suffix": "",
        "pump": [
          "\\\\x09"
        ]
      },
      {
        "prefix": [
          "url(\""
        ],
        "suffix": "l",
        "pump": [
          "\\\t"
        ]
      },
      {
        "prefix": [
          "url('"
        ],
        "suffix": "\\ \\ \\ \\ \\ \\ \\ \n\\ \\ \\ \\\t\t\r\r\n\t\n\t\t\t\r\r \\\"\\\t \n\t\t\r\r \\ n\\\\\r\n\n\n\t\t\r\r\n",
        "pump": [
          "\\ \\ \\ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(((((true|false):\\d+)\\s{0,1})+,{0,1})+;{0,1})+\\s+\\+\\-(.+)$",
    "inputs": [
      {
        "prefix": [
          "true:0"
        ],
        "suffix": "",
        "pump": [
          "true:0,true:0"
        ]
      },
      {
        "prefix": [
          "true:0"
        ],
        "suffix": "false:0,;",
        "pump": [
          "false:00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "true:0true:0true:0true:00true:0true:0true:0true:0true:0,true:0",
        "pump": [
          "true:0true:0"
        ]
      },
      {
        "prefix": [
          "true:0"
        ],
        "suffix": "",
        "pump": [
          "true:0,true:0"
        ]
      },
      {
        "prefix": [
          "true:0"
        ],
        "suffix": "false:0,",
        "pump": [
          "false:00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\.?\\w+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ".a"
        ],
        "suffix": "..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "6jyi6jyiwDwgbPvdtT|",
        "pump": [
          "6jyi"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "*.pm>, <lib",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ip",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "* {Z* {Z%FLcmYcH/U",
        "pump": [
          "* {Z"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([.]{2,})|/|\\\\)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/./",
        "pump": [
          "..../"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "#",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:<!--.*?-->\\s*?)*?<([a-z]+)[\\s>]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "<!----><!---->"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-",
        "pump": [
          "<!----><!---->"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "--><!----><!--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\.|.)*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\l\\\\\\\\\\\\\\\\\\.",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\"^\\^"
        ],
        "suffix": "\\\\.\\\\\\\\\\.\\\\\\^|:;|@?}\\.\\\\.|:;|@?}\b<;~:}<:{?|@:qFaanemZJKCYpR^\\\\.|.ylpdti",
        "pump": [
          "\\\\.\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<input (?:\"[^\"]*\"|'[^']*'|[^'\"<>]*)*>",
    "inputs": [
      {
        "prefix": [
          "<input "
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<input "
        ],
        "suffix": "<i\"<",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<input \"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "<in"
        ],
        "suffix": "put put ^{nm8n*%3p\t1o",
        "pump": [
          "put "
        ]
      },
      {
        "prefix": [
          "<input "
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<input "
        ],
        "suffix": "u\"<ia\"<",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<input \""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "<in"
        ],
        "suffix": "put put _%#OoSBYZB:&g",
        "pump": [
          "put "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "extension_config do \\|config\\|((\\n|\\s*.*\\n)*)\\s+\\# end",
    "inputs": [
      {
        "prefix": [
          "extension_config do |config|"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "extension_config do |config|"
        ],
        "suffix": " |config",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "extension_config do |config|\r\t\t\t\n\r\n\b\n\n\t\r\t\r\r\r\t\b\n\b"
        ],
        "suffix": "\n\n\t\t\n\n\t\t\t\b\t\bension_config do |confi\n\r\r\t",
        "pump": [
          "\n\n\t\t"
        ]
      },
      {
        "prefix": [
          "extension_config do |config|"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "extension_config do |config|"
        ],
        "suffix": "|\ne",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "#extension_config do |confi"
        ],
        "suffix": "g|\n\ng|\n\n\t \n\n\n\t\t\t\n\t\n  \n",
        "pump": [
          "g|\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*XExtData;\\n",
    "inputs": [
      {
        "prefix": [
          "typedef struct {\\x0a"
        ],
        "suffix": "",
        "pump": [
          "~\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "typedef struct{\n"
        ],
        "suffix": ";\n{a",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/((?:\\\\.|\\[(?:\\\\.|[^\\]])*\\]|[^\\/])+)\\/([gimy]*)",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "/]/[",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "/:"
        ],
        "suffix": "\\:\\\\.\\.|\\[\b\\\\:?\\.|\\[\\.\b\b\r\r\\:",
        "pump": [
          "\\:\\\\.\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:((\"(([^\\\"\\\\\\n\\r]+)|(\\\\((([\\'\\\"\\\\bfnrtv])|([^\\'\\\"\\\\bfnrtv0-9xu]))|((?:[1-7][0-7]{0,2}|[0-7]{2,3}))|([x]([0-9a-fA-F]){2})|([u]([0-9a-fA-F]){4})))|(\\\\(\\r\\n|\\r|\\n)))*\")|('(([^\\'\\\\\\n\\r]+)|(\\\\((([\\'\\\"\\\\bfnrtv])|([^\\'\\\"\\\\bfnrtv0-9xu]))|((?:[1-7][0-7]{0,2}|[0-7]{2,3}))|([x]([0-9a-fA-F]){2})|([u]([0-9a-fA-F]){4})))|(\\\\(\\r\\n|\\r|\\n)))*')))",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "ua\"a\\\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "Y:t4Y:t4{8}5O4T;8",
        "pump": [
          "Y:t4"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "ua\\uaaa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "@/Ob@/ObXf&s7V{d5",
        "pump": [
          "@/Ob"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[(.*?(?:\\[.*?\\].*?)*)\\]\\((.*?)\\)",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "[]]"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]",
        "pump": [
          "[]]"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "[]]"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]",
        "pump": [
          "[]]"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "[][[[][][[[]b?[[[]b?2e[\\*36Dd\\((CBf)*7(\\).f\\c.*f*:.1E*..6c:A(:.\\b?2e[\\(.(^?0:*.)\\c\\.)5?2C2",
        "pump": [
          "[][[[]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "# (\\w+ = .+)\\n(?:#.*\\n)*\\n*",
    "inputs": [
      {
        "prefix": [
          "# a = a\n"
        ],
        "suffix": " a ",
        "pump": [
          "#\n#\n"
        ]
      },
      {
        "prefix": [
          "# a = a\n"
        ],
        "suffix": " $",
        "pump": [
          "#\n#\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:<>|<|>|\\=|[()]+)+)",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "#",
        "pump": [
          "(("
        ]
      },
      {
        "prefix": [
          "((("
        ],
        "suffix": "\u0000",
        "pump": [
          "(("
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "a",
        "pump": [
          "(("
        ]
      },
      {
        "prefix": [
          "(="
        ],
        "suffix": "\u0000",
        "pump": [
          "<>="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z0-9_.-][a-z0-9_.-]*(?:\\[(?:\\d*|[a-z0-9_.-]+)\\])*$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "!",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0[[",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "-_"
        ],
        "suffix": "\u0000",
        "pump": [
          "d_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(doku\\.php\\?id=)?:?((((\\w)(\\w|_)*)*:)*(\\w(\\w|_)*)*)$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "!",
        "pump": [
          "e_"
        ]
      },
      {
        "prefix": [
          "/:"
        ],
        "suffix": "p?",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "/ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "XvuDXvuDWTNcZDWlU",
        "pump": [
          "XvuD"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "!",
        "pump": [
          "e_"
        ]
      },
      {
        "prefix": [
          "/:"
        ],
        "suffix": "i$",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "/w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "K/"
        ],
        "suffix": "M60vM60vVNNZjwd5K",
        "pump": [
          "M60v"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<key>CFBundleDevelopmentRegion<\\/key>(\\s|\\n)*<string>(\\w*)<\\/string>",
    "inputs": [
      {
        "prefix": [
          "<key>CFBundleDevelopmentRegion</key>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<key>CFBundleDevelopmentRegion</key>"
        ],
        "suffix": "y",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<key>CFBundleDevelopmentRegion</key>\n\n \t\r\r \r\r\n  \t\r\r"
        ],
        "suffix": "\r\n\r\n\n \r\n\r\n\r\n\n \r\n \r\t \n \r\t  \t\t \n \n \n\r\r",
        "pump": [
          "\r\n\r\n\n \r\n"
        ]
      },
      {
        "prefix": [
          "<key>CFBundleDevelopmentRegion</key>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<key>CFBundleDevelopmentRegion</key>"
        ],
        "suffix": "y>CFBundleDevelopmen",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "string><d<key>CFBundleDevelopmentRegion</key>\t \t\n\r\n\n \n\t   \t \t\n \t"
        ],
        "suffix": "\n\n\n\n\n\n\n\n \r\r \n\t\t\r \r \r\t",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�]|[�-�][�-�])([A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�.0-9·̀-ͯ‿-⁀\\-]|[�-�][�-�])*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "\\xff\\xff"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "��"
        ]
      },
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "ï¿½ï¿½a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Note: no need for aTHX_ because Newx and Safefree do not need\n\t * them. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " f",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " Not Note: no need",
        "pump": [
          " Not"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([\\w\\-.]+)\\s+([\\w\\-.]+)\\s+([\\w\\-.]+)(?:\\s+(.+))*$",
    "inputs": [
      {
        "prefix": [
          "a\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "T J\na 5"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\b\t\t\b\t\t\b\t\r\t\n\r",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*(re|aw):\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\taw:\t"
        ]
      },
      {
        "prefix": [
          "aw:aw:s"
        ],
        "suffix": "\u0000",
        "pump": [
          "saw:s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(\"\"|[^\"])*\")|('(''|[^'])*')|(--[^\\n\\r]*)|(#.*)|(/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*/a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*\t\r\r\t"
        ],
        "suffix": "\n\n\r\n\n\n\r\n\n \r \r\r\t\r\r",
        "pump": [
          "\n\n\r\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*/a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*\n\r\n\b"
        ],
        "suffix": "\r\n\n\n\r\n\n\n\n/\n\r\n\b\t",
        "pump": [
          "\r\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w+ Name Server\\n((?:.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "a Name Server\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "a Name Server\n"
        ],
        "suffix": "Se",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(pagespeed(?:.|\\s)+)url:[^,]+",
    "inputs": [
      {
        "prefix": [
          "pagespeed!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "pagespeed"
        ],
        "suffix": "pa,ur",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "pagespeed\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "pagespee"
        ],
        "suffix": "d  \td  \t \r\t\n \r \n \t\n\t\t\t ",
        "pump": [
          "d  \t"
        ]
      },
      {
        "prefix": [
          "pagespeedq"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "pagespeed"
        ],
        "suffix": "l,upages",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "pagespeed\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "url:pagespeed^:|E\r\n\r\t\b\n\r\b\r\b\t\b\n\b"
        ],
        "suffix": "\t\t\r\b\n\n\t\r\b\t\t\t\r\b\n\n\t\r\b\t\n\t\rGIHNdb?=Ruv@3m5b{IQhu?x@Qw\t\n\t\rGIHNdb?=Ruv",
        "pump": [
          "\t\t\r\b\n\n\t\r\b\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/a/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AAw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AAw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\s*,\\s*)+|\\s+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\!\\-\\-(.|\\n)*?\\-\\-\\>",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*(\\!\\S*|\\&\\S+))*\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " \\x00",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "&\ta",
        "pump": [
          "\t!!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "!&q&&T!&q&&T3!&)&!(&T3!&)^(&!\tS",
        "pump": [
          "!&q&&T"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\/\\*\\*(.|\\r?\\n)*?\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/*",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\?(([\\w%\\-\\+]|(%\\p{XDigit}{2}))+(=([\\w%\\-\\+]|(%\\p{XDigit}{2}))+)?(&|;))*(([\\w%\\-\\+]|(%\\p{XDigit}{2}))+(=([\\w%\\-\\+]|(%\\p{XDigit}{2}))+)?)?",
    "inputs": [
      {
        "prefix": [
          "?%"
        ],
        "suffix": "",
        "pump": [
          "%00"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "a+&%0",
        "pump": [
          "%aa&"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "2%222%22%22%222%222%22%22%222%2EzSfHm9BLG5jT%22222%2EzSfHm9BLG5jTvPRXzG7wlJXu%222%2Ez",
        "pump": [
          "2%222%22%22%22"
        ]
      },
      {
        "prefix": [
          "?%"
        ],
        "suffix": "",
        "pump": [
          "%00"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "%0",
        "pump": [
          "%aa&"
        ]
      },
      {
        "prefix": [
          "q?"
        ],
        "suffix": "3b%33y%99t%32b%63b%33y%99t%32b%62dAFfFC4C58487%3bPy%3b%33bPy%3b14bmpzakammercuaoawq",
        "pump": [
          "3b%33y%99t%32b%6"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " (\\w+) (?: \\( (.*?) \\) )*",
    "inputs": [
      {
        "prefix": [
          " a "
        ],
        "suffix": " $ ",
        "pump": [
          " (  )  (  ) "
        ]
      },
      {
        "prefix": [
          " w   \u0000"
        ],
        "suffix": "",
        "pump": [
          "    \u0000"
        ]
      },
      {
        "prefix": [
          " a "
        ],
        "suffix": "(",
        "pump": [
          " (  )  (  ) "
        ]
      },
      {
        "prefix": [
          " w   "
        ],
        "suffix": "",
        "pump": [
          "        "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r?\\n|\\r)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\t\r\n\r\n\n\n\n\n\n"
        ],
        "suffix": "\n\r\n\r\r\n\r\n\n\r\n\r\n\r\r\n\r\n\n\r\n\n\n\r\n\r\r\n\r\n\n\t",
        "pump": [
          "\n\r\n\r\r\n\r\n\n\r"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+) +in +(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)",
    "inputs": [
      {
        "prefix": [
          ":0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":0x"
        ],
        "suffix": "inn",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0x in 0xF"
        ],
        "suffix": "\u0000",
        "pump": [
          "cF"
        ]
      },
      {
        "prefix": [
          "0x"
        ],
        "suffix": "0abc0abcdefA00abcdefA",
        "pump": [
          "0abc"
        ]
      },
      {
        "prefix": [
          ":0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":0x"
        ],
        "suffix": "in0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0x in 0xAD"
        ],
        "suffix": "\u0000",
        "pump": [
          "dD"
        ]
      },
      {
        "prefix": [
          "0x"
        ],
        "suffix": "606860681477006654716",
        "pump": [
          "6068"
        ]
      },
      {
        "prefix": [
          ":0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":0x"
        ],
        "suffix": "inn",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0xE"
        ],
        "suffix": "",
        "pump": [
          "dE"
        ]
      },
      {
        "prefix": [
          "0x"
        ],
        "suffix": "abcdabcdefABCDEFb",
        "pump": [
          "abcd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<!-- Start:AutoDoc((.*?(\\n))+.*?)End:AutoDoc -->$",
    "inputs": [
      {
        "prefix": [
          "<!-- Start:AutoDoc\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- Start:AutoDoc"
        ],
        "suffix": "t:Auto",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*ZOPFLILIB_SRC\\s*=\\s*((?:.*(?:\\\\\\r?\\n))*.*)",
    "inputs": [
      {
        "prefix": [
          "ZOPFLILIB_SRC="
        ],
        "suffix": "a",
        "pump": [
          "a\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d\\-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[\\-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=\\-]*)?(\\#[\\-a-z\\d_]*)?$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "httphttpttttpttphttp:",
        "pump": [
          "http"
        ]
      },
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "6716671626193000743",
        "pump": [
          "6716"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,3}\\=\\-\\-+\\s*(\\{([^{}]*?|\".*?\"|'.*?')*\\})?\\s*\\-*\\s*$",
    "inputs": [
      {
        "prefix": [
          "   =--{"
        ],
        "suffix": "",
        "pump": [
          "("
        ]
      },
      {
        "prefix": [
          "=--{"
        ],
        "suffix": "=-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "=--{"
        ],
        "suffix": "'\t\r\t'\t\r\t\r\b\r\n\r\r\b\n\n",
        "pump": [
          "'\t\r\t"
        ]
      },
      {
        "prefix": [
          "=--{"
        ],
        "suffix": "",
        "pump": [
          "("
        ]
      },
      {
        "prefix": [
          "=--{"
        ],
        "suffix": "=-{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "=--{"
        ],
        "suffix": "'.56'.56343839248",
        "pump": [
          "'.56"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(gethash (\"(?:\\\\\\\\|\\\\\"|[^\\\\\"])*\\\"|'(?:\\\\.|.)*?) (.*)\\)$",
    "inputs": [
      {
        "prefix": [
          "(gethash '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "(gethash '"
        ],
        "suffix": "(g\\ )\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "gethash '."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "(gethash 'gethsh ' hsahteg('(geath:7\\\\|8|\\\\]\\\"|*|"
        ],
        "suffix": "4\\^\\^\\9\\4\\^\\^\\9\\\"(3\"|) 4?$.32'.\\^)\\^",
        "pump": [
          "4\\^\\^\\9\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:from ccxt\\.[^\\.]+ import [^\\s]+\\s+\\# noqa\\: F401[\\r]?[\\n])+[\\r]?[\\n]exchanges",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "im",
        "pump": [
          "from ccxt.a import import a\t# noqa: F401\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e\t",
        "pump": [
          "from ccxt.a import import a\t# noqa: F401\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:.+\\r?\\n)*)(\\r?\\n(?:.*\\s+)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "\r\n\t"
        ],
        "suffix": "\r\ta",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^%\\{(.|\\n)*?%\\}",
    "inputs": [
      {
        "prefix": [
          "%{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "%{"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\\"(.+)*\\\"$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"1d3\"1d30hX3l_:x5r:",
        "pump": [
          "\"1d3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([^=]+=.+),?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a=a,"
        ]
      },
      {
        "prefix": [
          "\u0000=\u0000\u0000=\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000=\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "\u0000=\u0000\u0000=\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000=\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[ \\t]*[\\r\\n]+[ \\t]*)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\na",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^call\\s+(\\w+)\\s*\\((([^\"\\)]*|\"([^\\\\\"]|\\\\.)*\")*)\\)",
    "inputs": [
      {
        "prefix": [
          "call a("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "call\ta("
        ],
        "suffix": "all",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "callsw\u0000"
        ],
        "suffix": ")",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          "call"
        ],
        "suffix": "\tca(\tca(ca\r\t\r\n\n\r \r\t\r ",
        "pump": [
          "\tca("
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:> *)(.+)(?: *<)(\\n.+)*",
    "inputs": [
      {
        "prefix": [
          ">a<"
        ],
        "suffix": "a",
        "pump": [
          "\na\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *([^ ]+) +\\'((\\\\.|[^\\'])*)\\' *",
    "inputs": [
      {
        "prefix": [
          "\\x00 '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a '"
        ],
        "suffix": " \\' \\'a''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000 '."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\\x00 '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a '"
        ],
        "suffix": " \\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000 '\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:.|\\n)*?>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{image[1-9](\\|\\|(.+))*}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z]:[\\/\\\\\\\\]+(?:[^:*?\\\"<>|;]+[\\/\\\\\\\\]*)*)",
    "inputs": [
      {
        "prefix": [
          "a:/a"
        ],
        "suffix": "a::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A:/\u0000"
        ],
        "suffix": "*",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "a:/a"
        ],
        "suffix": "/a$\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A:/\u0000\u0000"
        ],
        "suffix": "*",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\.|[^\\.])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\..",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^macro\\s+([a-zA-Z0-9_]+)\\s*\\(\\s*((?:[a-zA-Z0-9_]+(?:\\s*=\\s*([\\s\\S]+))?(?:,\\s*)?)*)\\s*\\)$",
    "inputs": [
      {
        "prefix": [
          "macro a("
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "macro\ta(a"
        ],
        "suffix": "o\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "macros0A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          "macro\nm("
        ],
        "suffix": "orcaorcarcamacro,",
        "pump": [
          "orca"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\"\"\"((\\\\\"|[^\"])*)\"\"\")|(\"(\\\\\"|[^\"]|)*\")|(<(\\\\>|[^>])*>)|\\S)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\t>\"\\\"\t",
        "pump": [
          "\"\"\"\"\"\"\"\"\"\"\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\t>\\\t",
        "pump": [
          "\"\"\"\"\"\"\"\"\"\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^data:(\\w*\\/\\w*);(charset=[\\w=-]*)*;*base64,([\\w\\/+=]*)$",
    "inputs": [
      {
        "prefix": [
          "data:/;"
        ],
        "suffix": "",
        "pump": [
          "charset=charset="
        ]
      },
      {
        "prefix": [
          "data:/;"
        ],
        "suffix": "-c",
        "pump": [
          "charset=charset="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n1 CHAN(\\n[2-9].*)*",
    "inputs": [
      {
        "prefix": [
          "\n1 CHAN"
        ],
        "suffix": "a",
        "pump": [
          "\n2\n2"
        ]
      },
      {
        "prefix": [
          "\n1 CHAN"
        ],
        "suffix": "a",
        "pump": [
          "\n2\n2"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(styled(\\.\\w+|\\([^)]*\\))(\\.\\w+(\\([^)]*\\))*)*|css|injectGlobal|keyframes|css={)`(?:\\$\\{[^}]+\\}|\\\\\\\\|\\\\?[^\\\\])*?`",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^# yamllint enable( rule:\\S+)*\\s*$",
    "inputs": [
      {
        "prefix": [
          "# yamllint enable"
        ],
        "suffix": "n\t:",
        "pump": [
          " rule:a rule:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[([^\\]\\\\]+|\\\\{2}|\\\\.)*\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "\\a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x[{_x[{_GD7V-(\rz=_~",
        "pump": [
          "x[{_"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "\\a]a[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "9[(=9[(=N*Dp`.V>[XD",
        "pump": [
          "9[(="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9]+[.,-]?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ",,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ">Children<(.|\\n)*?<td>\\\\s*([0-9]*)",
    "inputs": [
      {
        "prefix": [
          ">Children<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">Children<"
        ],
        "suffix": "hi",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ">Children<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">Children<"
        ],
        "suffix": "C",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|#.*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\t\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\u0000",
        "pump": [
          "s#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ## \t\t ## \t\t\r# \t\t\n\n\r \n\n\n\r\r\t\n#\t  \t\n\r\r\t\n \n\t\r\n  \t  \t\n\r\r\t\n \n\r\n\r \n\n\r \n\n\n\n  \n\n\r\r\r \n\n\n\r \r\n\r\t\t\n  \n\n\r\r\r\n\r\t\t  \r\n\n\n\t8",
        "pump": [
          " ## \t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "jig browser(?: web)?(?:\\D+([\\d.]+))*",
    "inputs": [
      {
        "prefix": [
          "jig browser"
        ],
        "suffix": "er ",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "jig browser"
        ],
        "suffix": "ow",
        "pump": [
          "a."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".* start=(?:\"((?:\\\\.|[^\\\"])*)\"|([^;\\s]*))",
    "inputs": [
      {
        "prefix": [
          " start=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " start=\""
        ],
        "suffix": "ar\" \t st",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          " start=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " start=\""
        ],
        "suffix": "ar\" \t ",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^module\\:((?:(?:[_$.\\-a-zA-Z][_$.\\-a-zA-Z0-9]*)\\/?)*)$",
    "inputs": [
      {
        "prefix": [
          "module:"
        ],
        "suffix": "!",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "module:"
        ],
        "suffix": "mo/:",
        "pump": [
          "aa/"
        ]
      },
      {
        "prefix": [
          "module:"
        ],
        "suffix": "_$.$_$.$._$.module:",
        "pump": [
          "_$.$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n?|\\n\\r?)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\r\n\r\n\n\n\r\n\r\n\n\r\r\n\r\n\n\n\r\n\r\r\n\r\t",
        "pump": [
          "\n\n\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "\n\r\n\n"
        ],
        "suffix": "\r\n\n\r\n\r\r\n\n\r\n\r\n\n\n\r\r\n\r\n\r\n\n\n\n*",
        "pump": [
          "\r\n\n\r\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z]+(.[a-zA-Z]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "{",
        "pump": [
          "aAAA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$$",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "A\u0000A"
        ],
        "suffix": "\u0000",
        "pump": [
          "aA\u0000A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AQWRAQWRJKUXMXVDOLMEPGDC-",
        "pump": [
          "AQWR"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z\\d\\._\\+-]+@([a-z\\d-]+\\.?[a-z\\d-]+)+\\.[a-z]{2,4}$",
    "inputs": [
      {
        "prefix": [
          "a@a-"
        ],
        "suffix": "",
        "pump": [
          "0-0"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a-.-.a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+@-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          ".@"
        ],
        "suffix": "2uur2uuruxaxukaguwx",
        "pump": [
          "2uur"
        ]
      },
      {
        "prefix": [
          "a@a-"
        ],
        "suffix": "",
        "pump": [
          "0-0"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a@aa.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+@----"
        ],
        "suffix": "",
        "pump": [
          "a--"
        ]
      },
      {
        "prefix": [
          ".@"
        ],
        "suffix": "a--aa--a-z98851155",
        "pump": [
          "a--a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\|?(\\s*:?-[\\-\\s]*:?\\s*\\|?)*\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "-\\x09-"
        ]
      },
      {
        "prefix": [
          "|"
        ],
        "suffix": "-||",
        "pump": [
          "\t:-\t"
        ]
      },
      {
        "prefix": [
          "---:"
        ],
        "suffix": "-------------|:",
        "pump": [
          "----"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/head(\\s[^>]*)*>.*$",
    "inputs": [
      {
        "prefix": [
          "</head"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "</head"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "</heads"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "</head\t\r\b"
        ],
        "suffix": "\n\n\t\r\n\n\t\r\r\b\r\b\n\t\n\b\n\t\t",
        "pump": [
          "\n\n\t\r"
        ]
      },
      {
        "prefix": [
          "</head"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "</head"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "</heads"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "</head\rF"
        ],
        "suffix": "\r \t\r\r \t\r\r\n\n  \r\n \t",
        "pump": [
          "\r \t\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "subroutine (?:\\s|.)*?end subroutine.*",
    "inputs": [
      {
        "prefix": [
          "subroutine "
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "subroutine "
        ],
        "suffix": "end s",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "subroutine \u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "subroutine "
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "subroutine "
        ],
        "suffix": "end subroutin",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "subroutine \u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!--.+-->)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "<",
        "pump": [
          "<!--a--><!--a-->"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "--><!--\u0000--><!--\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<!--a--><!--a-->"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "--><!--\u0000--><!--\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4})*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "a@-.AA.AA.@-.AA.AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a@",
        "pump": [
          "a@a.aa.aa"
        ]
      },
      {
        "prefix": [
          "%@-\u0000AAA"
        ],
        "suffix": "\u0000",
        "pump": [
          "a%@-\u0000AAA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "a@-.A.A.@-.A.A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "@",
        "pump": [
          "a@a.a.a"
        ]
      },
      {
        "prefix": [
          "%@A"
        ],
        "suffix": "",
        "pump": [
          "0AA%@A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s\\((\\\\\\\\|\\\\\\)|[^\\)])*\\)\\s*",
    "inputs": [
      {
        "prefix": [
          "s("
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s("
        ],
        "suffix": "s)s",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "\\\u0000"
        ]
      },
      {
        "prefix": [
          "s("
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s("
        ],
        "suffix": "\ta",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s\\"
        ],
        "suffix": "\u0000",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s(s(s(s\\\\\\(s("
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\WJUFDJULRYZDKHBIZV",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:\\*/)?\\s*(?:/\\*.*?\\*/)*\\s*(\\*\\s*=\\s*require((?:_directory|_tree)?)\\s+(.+))",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "/**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/**/*\t",
        "pump": [
          "/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[tcomb\\] Invalid argument name function (.|\\n)* supplied to declare\\(\\[name\\]\\) \\(expected a string\\)",
    "inputs": [
      {
        "prefix": [
          "[tcomb] Invalid argument name function "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[tcomb] Invalid argument name function "
        ],
        "suffix": "clar",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "[tcomb] Invalid argument name function "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[tcomb] Invalid argument name function "
        ],
        "suffix": "([nam",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\\\?[\\s\\S])*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\\\""
        ],
        "suffix": "\\s\\S*eA\\S\\\\s\\S*eA\\S\\QSsmS.\\COyM?bHG9Xa\\s\\Ss\\S*?s\\S*?^DRXZATCXKNRXHCDLGWM",
        "pump": [
          "\\s\\S*eA\\S\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(5)(\\t.+?){7,}",
    "inputs": [
      {
        "prefix": [
          "5\ta\ta\ta\ta\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "5\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\t\u0000"
        ]
      },
      {
        "prefix": [
          "5\ta\ta\ta\ta\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "5\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\t\u0000"
        ]
      },
      {
        "prefix": [
          "5"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "5\t\u0000\t\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<$\"",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s-=s"
        ],
        "suffix": "",
        "pump": [
          "\"\"s-=s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*[-_:+ ])*lat",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ata ",
        "pump": [
          "a "
        ]
      },
      {
        "prefix": [
          "_"
        ],
        "suffix": "",
        "pump": [
          ":_"
        ]
      },
      {
        "prefix": [
          ":p+D::F"
        ],
        "suffix": "-_:+-_:+ *cYMx68_~]aS\t7r&z[7 CW/B<^",
        "pump": [
          "-_:+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(\\w+)(\\s[^>]*)+>(.*)((<[^>]+>)?[^>]*)$",
    "inputs": [
      {
        "prefix": [
          "<a\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<wss"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<a\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<wss\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<Xj\t.\tZ"
        ],
        "suffix": "\n\t\t\t\n\t\t\t\n\r\n\r\n\n\t\t",
        "pump": [
          "\n\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9_\\.\\-])+\\@(([a-z0-9\\-])+\\.)+([a-z0-9]{2,4})+$",
    "inputs": [
      {
        "prefix": [
          "a@a.a0"
        ],
        "suffix": "!",
        "pump": [
          "a0000"
        ]
      },
      {
        "prefix": [
          "a@a."
        ],
        "suffix": "a.",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "-@-\u0000000a"
        ],
        "suffix": "\u0000",
        "pump": [
          "000a"
        ]
      },
      {
        "prefix": [
          ".@2."
        ],
        "suffix": "z04952z049521709428574zz217094.",
        "pump": [
          "z04952"
        ]
      },
      {
        "prefix": [
          "a@a.0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a.a"
        ],
        "suffix": "-@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-@-\u0000a"
        ],
        "suffix": "",
        "pump": [
          "0-\u0000a"
        ]
      },
      {
        "prefix": [
          ".@a."
        ],
        "suffix": "xtyyxtyywryuhxdqhy.",
        "pump": [
          "xtyy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z][a-zA-Z0-9_-]*(?:\\[(?:\\d*|[a-zA-Z0-9_-]+)\\])*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0[[",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "da"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([/]?[\\w-+.]+|[/]\\*\\*)+",
    "inputs": [
      {
        "prefix": [
          "/a"
        ],
        "suffix": "a//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "a/$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(:|\\s)\\+(\\d+)+\\.(\\d+)",
    "inputs": [
      {
        "prefix": [
          ":+0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\t+0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ":dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "\t+"
        ],
        "suffix": "5504550491378557642",
        "pump": [
          "5504"
        ]
      },
      {
        "prefix": [
          ":+0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\t+0"
        ],
        "suffix": "+a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ":dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ":+"
        ],
        "suffix": "336833685632302669",
        "pump": [
          "3368"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:<p><superfences>.*?</superfences></p>\\s*)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "p><",
        "pump": [
          "<p><superfences></superfences></p><p><superfences></superfences></p>"
        ]
      },
      {
        "prefix": [
          "<p><superfences></superfences></p><p><superfences>"
        ],
        "suffix": "",
        "pump": [
          "</superfences></p><p><superfences></superfences></p><p><superfences>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "er",
        "pump": [
          "<p><superfences></superfences></p><p><superfences></superfences></p>"
        ]
      },
      {
        "prefix": [
          "<p><superfences></superfences></p><p><superfences>\u0000"
        ],
        "suffix": "",
        "pump": [
          "</superfences></p><p><superfences>\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(?:[^\\\\\\\"]*(?:\\\\.)?)*\"?)|[^\\s{}\\[\\],:]+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\t\\",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$(?:\\\\?[\\w\\W])*?\\$|\\\\\\((?:\\\\?[\\w\\W])*?\\\\\\)|\\\\\\[(?:\\\\?[\\w\\W])*?\\\\\\]",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\[\\w\\\\\\[\\w\\\\\\[\\w\\\\FCPGFULXAQQJINVJGLTNHWLHARKHWXMWIPQFNMMRXJIBVXUQDQJMZGGGQSAOTANNSTLPAJNDWJC",
        "pump": [
          "\\[\\w\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\\["
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "$\\["
        ],
        "suffix": "\\(\\[\\\\\\(\\[\\\\[\\\\[\\(\\[\\\\[\\(\\",
        "pump": [
          "\\(\\[\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(class)\\s+((?:(?:::)?[A-Z]\\w*)+)(?:\\s+&lt;\\s+((?:(?:::)?[A-Z]\\w*)+))?",
    "inputs": [
      {
        "prefix": [
          "class\t"
        ],
        "suffix": "\tclass\t",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "class\t"
        ],
        "suffix": "ass\tA:",
        "pump": [
          "::AA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "# yamllint disable-line(( rule:\\S+)*)\\s*$",
    "inputs": [
      {
        "prefix": [
          "# yamllint disable-line"
        ],
        "suffix": "n\t:",
        "pump": [
          " rule:a rule:a"
        ]
      },
      {
        "prefix": [
          "# yamllint disable-line"
        ],
        "suffix": "s\ta# yamllint disable-line rule",
        "pump": [
          " rule:a rule:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[A-Za-z_-]+,?)+$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ",,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-_"
        ],
        "suffix": "\u0000",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "A-Z-A-Z-XETrDBysuL9",
        "pump": [
          "A-Z-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* ponto de referencia   *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "gD/ gD/ j>(t-I&|@A",
        "pump": [
          "gD/ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "f\\s+((([\\d]{1,}\\/\\/[\\d]{1,}[\\s]?){3,})+)",
    "inputs": [
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "\t\t0//00//00",
        "pump": [
          "0//000//00//0"
        ]
      },
      {
        "prefix": [
          "fsd//dd//dd//dd//d"
        ],
        "suffix": "",
        "pump": [
          "dd//dd//dd//d"
        ]
      },
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "\t\t0/",
        "pump": [
          "0//000//00//0"
        ]
      },
      {
        "prefix": [
          "fsd//dd//dd//dd//dd//dd"
        ],
        "suffix": "",
        "pump": [
          "dd//dd//dd//dd"
        ]
      },
      {
        "prefix": [
          "f\t0//0"
        ],
        "suffix": "\tf",
        "pump": [
          "0//00"
        ]
      },
      {
        "prefix": [
          "fsd//dd//dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd//dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " (?:[\\w]*) *= *\"(?:(?:(?:(?:(?:\\\\W)*\\\\W)*[^\"]*)\\\\W)*[^\"]*\")",
    "inputs": [
      {
        "prefix": [
          "  =\""
        ],
        "suffix": "",
        "pump": [
          "\\W\\W"
        ]
      },
      {
        "prefix": [
          " =\""
        ],
        "suffix": " a\\\"\"",
        "pump": [
          "\\W\\W"
        ]
      },
      {
        "prefix": [
          " =\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "  =\""
        ],
        "suffix": "",
        "pump": [
          "\\W\\W"
        ]
      },
      {
        "prefix": [
          " =\""
        ],
        "suffix": "= ",
        "pump": [
          "\\W\\W"
        ]
      },
      {
        "prefix": [
          " =\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ">([0-9.]+?)% <\\/span>(.|\\n)+?Statements",
    "inputs": [
      {
        "prefix": [
          ">0% </span>!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">.% </span>"
        ],
        "suffix": "sSta",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ">0% </span>?"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">.% </span>"
        ],
        "suffix": "eme",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*)*\\s*lodash\\.prototype.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "yl",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          "//\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000"
        ]
      },
      {
        "prefix": [
          "#////^"
        ],
        "suffix": "////////////<':#>+0666047025525@//)orp.hsadoltasdl\\SyQmVth\\d*?7n?F7CsF)3b(.0aCp.\\\\ado<\\T[slnto&@(..&@T[",
        "pump": [
          "//////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(index(\\..+)*)",
    "inputs": [
      {
        "prefix": [
          "index"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "index\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(r?\\\"(?:\\\\\\\"|.)*?\\\")|((\\$\\||\\$ |\\$:|[^ :|\\n])+)",
    "inputs": [
      {
        "prefix": [
          "r\""
        ],
        "suffix": "r\n\\",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "r\""
        ],
        "suffix": "\"$\\\n",
        "pump": [
          "\\\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s(\\/)+(.*?)*php\\s",
    "inputs": [
      {
        "prefix": [
          " /"
        ],
        "suffix": "",
        "pump": [
          "q"
        ]
      },
      {
        "prefix": [
          "\t/"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "/ &y/ &y%0@A/^mD)q|",
        "pump": [
          "/ &y"
        ]
      },
      {
        "prefix": [
          " /"
        ],
        "suffix": "",
        "pump": [
          "q"
        ]
      },
      {
        "prefix": [
          "\t/"
        ],
        "suffix": "/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "x\r"
        ],
        "suffix": "/DJQ/DJQ|1r)=oJ+{3w",
        "pump": [
          "/DJQ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#{([^.]+)\\.([^}]+?)(\\((.+)\\))*}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{verbatim\\}\\}((.|\\n)*?)\\{\\{\\/verbatim\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{verbatim}}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{verbatim}}"
        ],
        "suffix": "{/ve",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "{{verbatim}}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{verbatim}}"
        ],
        "suffix": "{/verbati",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\n)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\t\n\t\n\n\n\t\n\t\n \n \n\n\n\t\n\t\n \t \r\t \t\n ",
        "pump": [
          "\n\n\n\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<a(\\s+[\\w:-]+=[\"'].*?[\"'])*>(.*?)</a>",
    "inputs": [
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          " a=\"\"\\x09-=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<as-=\""
        ],
        "suffix": "",
        "pump": [
          "\"s-=\"\"s-=\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          " a=\"\"\\x09-=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "aa",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<as-=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"s-=\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^//\\s*(Copyright|This file is part of).*?\\n(?://.*?\\n)*\\n*",
    "inputs": [
      {
        "prefix": [
          "//Copyright\n"
        ],
        "suffix": "h",
        "pump": [
          "//\n//\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title>Title &quot; &#39; &amp; &lt; &gt; \\$ \\$\\$ \\$&#39; \\$` \\$&amp; \\$3<\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": ">Ti",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "$&a",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\s'\":;]+)\\s*:\\s*(\"(?:\\\\.|[^\"])*\"|[^\"\\s;]+?)[\\s;]*-\\*-",
    "inputs": [
      {
        "prefix": [
          "<\\x09:\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a:\""
        ],
        "suffix": "-\\a:",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "<\\x09:\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a:\""
        ],
        "suffix": "\t-\"-a:a'-\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((.|[\\n\\r])+?)\\*\\*Signature",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ig",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ea",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.*:\\d{1,6}){1,}$",
    "inputs": [
      {
        "prefix": [
          ":0"
        ],
        "suffix": ";",
        "pump": [
          ":0:0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0:",
        "pump": [
          "a:0"
        ]
      },
      {
        "prefix": [
          ":d:d"
        ],
        "suffix": "\u0000",
        "pump": [
          ":d:d"
        ]
      },
      {
        "prefix": [
          ":5<{:1;:=.\\)d(.?}>@}439"
        ],
        "suffix": "56604:6:56604:6::6(\b|.~|:({)}{{^>:,:1;:5004930765425782894021:307654257828940211",
        "pump": [
          "56604:6:"
        ]
      },
      {
        "prefix": [
          ":0"
        ],
        "suffix": ";",
        "pump": [
          ":0:0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":",
        "pump": [
          "a:0"
        ]
      },
      {
        "prefix": [
          ":d:dd"
        ],
        "suffix": "\u0000",
        "pump": [
          ":d:dd"
        ]
      },
      {
        "prefix": [
          ":5335"
        ],
        "suffix": "60:537F:60:537F:55794211793286:075urJp|>LAh;f7Fw",
        "pump": [
          "60:537F:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*?)\\|(\\S+)\\{((?:\\\\.|[^}])+)\\}",
    "inputs": [
      {
        "prefix": [
          "||{|"
        ],
        "suffix": "",
        "pump": [
          "\\~"
        ]
      },
      {
        "prefix": [
          "|a{"
        ],
        "suffix": "}{}a\t|",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "||{|"
        ],
        "suffix": "",
        "pump": [
          "\\~"
        ]
      },
      {
        "prefix": [
          "|a{"
        ],
        "suffix": "}{\\",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[^\\{]*{((.*\\n*)*)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gimyu]{0,5}",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[[[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\/\n",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[[[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "/\u0000."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[[[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "/\u0000+"
        ],
        "suffix": "",
        "pump": [
          ".+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.com.com)|(:\\/\\/.*){2,}",
    "inputs": [
      {
        "prefix": [
          "://"
        ],
        "suffix": "a",
        "pump": [
          "://://"
        ]
      },
      {
        "prefix": [
          "://"
        ],
        "suffix": "a",
        "pump": [
          "://://"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "://://"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^SESSION\\s+ACCOUNT\\s+TO\\s+(((:\\$+)?\\w+))(\\s+FOR\\s+ALL)\\s+WHERE\\s+VERSION\\s*=\\s*(\\$*\\w+)(\\s+AND\\s+(HOSTID|SESSIONNO|)\\s*=\\s*(.+))*$",
    "inputs": [
      {
        "prefix": [
          "SESSION\tACCOUNT\tTO\ta\tFOR\tALL\tWHERE\tVERSION=a"
        ],
        "suffix": "\t",
        "pump": [
          "\tAND\tHOSTID=\ta"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AzAzAzAzZ0zAzAzZ0AzZaAz-",
        "pump": [
          "AzAz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\d+,?)+)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ",,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "000000000000000000=",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n([ ]*)+(\\*|\\d+\\.) ",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          " "
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "  *.",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "                 ",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          " "
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": " 0\n",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "                 ",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[.#]?|:*)(?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "::",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": ":$",
        "pump": [
          "a\\aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[(\\d+;)?(\\d+)*m",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "0;;",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "111911191392662096",
        "pump": [
          "1119"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "0[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "P["
        ],
        "suffix": "077207726385440220",
        "pump": [
          "0772"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-z]|[a-z][a-z0-9-]*[a-z0-9]).)*([a-z]|[a-z][a-z0-9-]*[a-z0-9])(:[0-9]*)?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "a0a-0{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0::",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "",
        "pump": [
          "0-a-"
        ]
      },
      {
        "prefix": [
          "sasab6"
        ],
        "suffix": "aasbbsaasab60T",
        "pump": [
          "aasb"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[^-].+[\\r\\n]+)+|-.+-|[\\r\\n]| ",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " \na",
        "pump": [
          "aa\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<a\\s[^>]+>(?:.|\\s)*?</a>",
    "inputs": [
      {
        "prefix": [
          "<a ?>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<a\ta>"
        ],
        "suffix": "</<",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<as\u0000>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<a ?>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<a\ta>"
        ],
        "suffix": "a",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<as\u0000>\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "><a\tm><a\tM>`[G*mm2LF*Z<\t\t)uW)A3We\n\t\n%\tX^QP_:PA"
        ],
        "suffix": "\t\t\n\n \t\t\t\n\n \t\r \nF%k4",
        "pump": [
          "\t\t\n\n \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*CSOURCES\\s*=\\s*((?:.*(?:\\\\\\r?\\n))*.*)",
    "inputs": [
      {
        "prefix": [
          "CSOURCES="
        ],
        "suffix": "a",
        "pump": [
          "a\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^{% apibody %}((.*\\n)*?){% endapibody %}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:\\r\\n)?[ \\t]+)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\r\n\n",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t\t "
        ],
        "suffix": "\u0000",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\r\n",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t\t\t"
        ],
        "suffix": "\u0000",
        "pump": [
          " \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d{1,4}(\\.)?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dddd"
        ]
      },
      {
        "prefix": [
          ".111.111.144."
        ],
        "suffix": "11111111.1.14,",
        "pump": [
          "1111"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dddd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "551155118711811873a",
        "pump": [
          "5511"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "25042504413836437N",
        "pump": [
          "2504"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-z]*://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "inputs": [
      {
        "prefix": [
          "://"
        ],
        "suffix": "#",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "://"
        ],
        "suffix": "(%\u0000://",
        "pump": [
          "aA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\+([A-Za-z_-]+\\w*)(\\((.+(,\\s)?)*\\))?$",
    "inputs": [
      {
        "prefix": [
          "+a("
        ],
        "suffix": "",
        "pump": [
          "*,\\x09"
        ]
      },
      {
        "prefix": [
          "+a(a"
        ],
        "suffix": "+",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "+A-(+A-(+A-Za-z_-(+A-Z",
        "pump": [
          "+A-("
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "style=\"([^\"]+)*\"",
    "inputs": [
      {
        "prefix": [
          "style=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "style=\"a"
        ],
        "suffix": "=\"\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "style=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "style=\""
        ],
        "suffix": "|#\nw|#\nwHe/M7JnTW,",
        "pump": [
          "|#\nw"
        ]
      },
      {
        "prefix": [
          "style=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "style=\"a"
        ],
        "suffix": "t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "style=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "style=\""
        ],
        "suffix": "nbdanbdamwnbdamwtv",
        "pump": [
          "nbda"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a+|b)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z0-9]+[A-Z]+[a-z0-9]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aAa"
        ]
      },
      {
        "prefix": [
          "0A0Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "00Aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "A$",
        "pump": [
          "aAa"
        ]
      },
      {
        "prefix": [
          "0A0A"
        ],
        "suffix": "\u0000",
        "pump": [
          "00A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "rm\\s+(-?\\w?\\ ?)*\"?(%{buildroot}|\\$b)\"?$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(রবিবার|সোমবার|মঙ্গলবার|বুধবার|বৃহস্পতিবার |শুক্রবার|শনিবার)+",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\w]+)(\\(([\\d]+)*(,([\\d]+))*\\))*(.+)*$",
    "inputs": [
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a(0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "zs))zs))c0H',}3`}\b7\nT",
        "pump": [
          "zs))"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(gobrowser)\\/?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "gobrowser/a"
        ],
        "suffix": "ob/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "gobrowserw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "gobrowser/a"
        ],
        "suffix": "r$gobrowse",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "gobrowser.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "selagi( *|\\n*)*?\\(",
    "inputs": [
      {
        "prefix": [
          "selagi"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "selagi"
        ],
        "suffix": "el",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "selagi"
        ],
        "suffix": "                 ",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "selagi"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "selagi"
        ],
        "suffix": "e",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "^selagi"
        ],
        "suffix": "\n\n\n\n\n\n\n\n    \n\n\n\n\n   ",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<[a-z0-9:-]+((s+[a-z0-9:-]+=\"[^\"]+\")*)?>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "sss=\"!\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<",
        "pump": [
          "ssa=\"a\""
        ]
      },
      {
        "prefix": [
          "<-s"
        ],
        "suffix": "",
        "pump": [
          "s-=\"\"\"s"
        ]
      },
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "sss=\"!\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=\"ss",
        "pump": [
          "ssa=\"a\""
        ]
      },
      {
        "prefix": [
          "<-ss"
        ],
        "suffix": "",
        "pump": [
          "s-=\"\"\"ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*::)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a:",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "::::"
        ],
        "suffix": "\u0000",
        "pump": [
          "::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\([^)]*\\)|[^\\s>+~])*).*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "((([)([(*4b)((([)([(*4b):YA;3A71dA76^\\([(FF{P;^_\\`wymg[a6By\"I=^[$(((3A71dA76^\\([(]++)3\n\r",
        "pump": [
          "((([)([(*4b)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n "
        ],
        "suffix": "\n\n\n\n\n\n\n\n \n\t\n \n \n\t \t \n\r   \n\n)",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "2\n\t"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n \n \n\r\r\r\r\n\r   \n \n  \t\\",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\n)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0b"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nj",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(Content-Length: (\\d*)\\\\r\\\\n\\\\r\\\\n([[:alnum:]]|[[:ascii:]]|[[:blank:]]|[[:punct:]]|[[:space:]])*\\\\r\\\\n)",
    "inputs": [
      {
        "prefix": [
          "Content-Length: \\r\\n\\r\\n"
        ],
        "suffix": "e",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "Content-Length: \\r\\n\\r\\n"
        ],
        "suffix": "\\r",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "\\Content-Length: \\r\\n\\r\\"
        ],
        "suffix": "n:ann:an:asc",
        "pump": [
          "n:an"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\x00\\x21\\xF9\\x04.{4}\\x00\\x2C.*){2,}",
    "inputs": [
      {
        "prefix": [
          "\u0000!ù\u0004aaaa\u0000,"
        ],
        "suffix": "\u0000!ù\u0004aaa",
        "pump": [
          "\u0000!ù\u0004aaaa\u0000,\u0000!ù\u0004\u0000!ù\u0004\u0000,aa\u0000,"
        ]
      },
      {
        "prefix": [
          "\u0000!ù\u0004aaaa\u0000,"
        ],
        "suffix": "\u0000!ù\u0004aaa",
        "pump": [
          "\u0000!ù\u0004aaaa\u0000,\u0000!ù\u0004\u0000!ù\u0004\u0000,aa\u0000,"
        ]
      },
      {
        "prefix": [
          "u0000u0021xF9u0004\u0000\u0000\u0000\u0000u0000x2Cu0000u0021xF9u0004\u0000\u0000\u0000\u0000u0000x2Cu0000u0021xF9u0004\u0000\u0000\u0000\u0000u0000x2C"
        ],
        "suffix": "",
        "pump": [
          "u0000u0021xF9u0004\u0000\u0000\u0000\u0000u0000x2Cu0000u0021xF9u0004\u0000\u0000\u0000\u0000u0000x2C"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\u0000!ù\u0004",
        "pump": [
          "\u0000!ù\u0004aaaa\u0000,\u0000!ù\u0004aaaa\u0000,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9A-Z]+[-|_|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ddC3ddC3FDW3FDW3FD",
        "pump": [
          "ddC3"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Au52Au52SsmjwX0R49",
        "pump": [
          "Au52"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*?)(\\[(.*?)\\])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\w+(?:::)?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a:::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xFwDxFwDVXQtPjTqSP:",
        "pump": [
          "xFwD"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*?<H5>(<a.*a>)*[\\d\\.\\s]*(.*?)</H5>",
    "inputs": [
      {
        "prefix": [
          "<H5>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H5>"
        ],
        "suffix": "<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H5><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      },
      {
        "prefix": [
          "<H5>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H5>"
        ],
        "suffix": "</<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H5><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\\\\\|\\\\\"|[^\"])*\"[cwd]?",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "p",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "pe",
        "pump": [
          "@escapes"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*=\\s*((\"[^\\\"]*\")|(\\'.\\')|(([-\\w:~]*)\\s*([<>\\|\\+-]*\\s*\\w*\\s*)*(\\([^(]*\\))?))",
    "inputs": [
      {
        "prefix": [
          "="
        ],
        "suffix": "\t:)a",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "=w"
        ],
        "suffix": "(",
        "pump": [
          "sw"
        ]
      },
      {
        "prefix": [
          "="
        ],
        "suffix": "$",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "=+"
        ],
        "suffix": "(",
        "pump": [
          "s+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:\\d+-\\d+|\\d+),?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "-",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd-dd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "-",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(class=\"Mso[^\"]*\")|(<!--(.|\\s){1,}?-->)",
    "inputs": [
      {
        "prefix": [
          "<!--!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "=\"M-a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<!--?"
        ],
        "suffix": "   \t   \t\n\t \n \t\n\t \t\r\n\t",
        "pump": [
          "   \t"
        ]
      },
      {
        "prefix": [
          "<!--d"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "Ms\"-",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<!--<!--class=\"class=\"!--claMAU"
        ],
        "suffix": "J\t\t\t\r\tJ\t\t\t\r\t\r\t\r\t\t\n\b\r\r\b\b\b\r\r\r\t\r\t\b\tso",
        "pump": [
          "J\t\t\t\r\t"
        ]
      },
      {
        "prefix": [
          "<!--!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "=\"M-a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<!-"
        ],
        "suffix": "-\t  -\t  \n\t \t\t\r  \t \n \t",
        "pump": [
          "-\t  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\"]*?#[^\"]*?)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"a\"",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "\"#"
        ],
        "suffix": "",
        "pump": [
          "\"#"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "g#u7Pa`Tg#u7Pa`T,}J)Tb=^svpp\twE{\\j07j?@$c^{Y16>q#&:$kP'pz\t#|a('yGJ",
        "pump": [
          "g#u7Pa`T"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "#",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "\"#"
        ],
        "suffix": "",
        "pump": [
          "\"#"
        ]
      },
      {
        "prefix": [
          "G\""
        ],
        "suffix": "#|n-@9'j#|n-@9'jP4'36cMyfc`gK3AgwjN6-TYb)lRk?NCa3B#ne\tR=GQ+jrsj'#.f:Ro",
        "pump": [
          "#|n-@9'j"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^ |]+( +\\| +[^ |]*)+)|( +)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": " ||",
        "pump": [
          " |  "
        ]
      },
      {
        "prefix": [
          "\u0000  "
        ],
        "suffix": "\u0000",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "||a",
        "pump": [
          " |  "
        ]
      },
      {
        "prefix": [
          "\u0000  \u0000"
        ],
        "suffix": "|",
        "pump": [
          "  \u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "pimcore_disable_thumbnail=\"([^\"]+)*\"",
    "inputs": [
      {
        "prefix": [
          "pimcore_disable_thumbnail=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "pimcore_disable_thumbnail=\"a"
        ],
        "suffix": "=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "pimcore_disable_thumbnail=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "1pimcore_disable_thumbnail=\""
        ],
        "suffix": "b/-$b/-$?II!anosvT",
        "pump": [
          "b/-$"
        ]
      },
      {
        "prefix": [
          "pimcore_disable_thumbnail=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "pimcore_disable_thumbnail=\"a"
        ],
        "suffix": "na",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "pimcore_disable_thumbnail=\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "Wpimcore_disable_thumbnail=\""
        ],
        "suffix": "N094N094z$$Pp!\\/mI",
        "pump": [
          "N094"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(æ|ø|Ā)(((.*)*)*x)",
    "inputs": [
      {
        "prefix": [
          "\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "ø"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "æ|ø|æ|ø|Ā53h",
        "pump": [
          "æ|ø|"
        ]
      },
      {
        "prefix": [
          "\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "ø"
        ],
        "suffix": "aæ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ā`PHĀ`PH:Y4%",
        "pump": [
          "Ā`PH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\$@%](\\w+|::)+)",
    "inputs": [
      {
        "prefix": [
          "$a"
        ],
        "suffix": ":$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<a.*\\/a>)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<a/a><a/a>"
        ]
      },
      {
        "prefix": [
          "<a/a><a"
        ],
        "suffix": "",
        "pump": [
          "/a><a/a><a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<a/a><a/a>"
        ]
      },
      {
        "prefix": [
          "<a/a><a\u0000"
        ],
        "suffix": "",
        "pump": [
          "/a><a\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*\\.(Phone|Windows|Windows10)_((?:\\d*\\.)*\\d*)*((?:_(AnyCPU|x86|x64|ARM)){1,4})(?:(_Debug))?.(appx|appxbundle)$",
    "inputs": [
      {
        "prefix": [
          ".Phone_"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ".Phone_"
        ],
        "suffix": "ndow",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\u0000Phone_\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          ".Phone_"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ".Phone_"
        ],
        "suffix": "U_x64_x8",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\u0000Phone_\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          ".Phone_"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ".Phone_"
        ],
        "suffix": "ndow",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\u0000Phone_d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "Windowsindows.dows_s.Windows.dows_s.Windowsebowsindo.Windows_"
        ],
        "suffix": "4382438272",
        "pump": [
          "4382"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "trailer[\\s]*<<(.*)>>[\\s]*[\\r\\n]+(?:[%].*[\\r\\n]+)*startxref[\\s]*[\\r\\n]+",
    "inputs": [
      {
        "prefix": [
          "trailer<<>>\\x0a"
        ],
        "suffix": "",
        "pump": [
          "%\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\n"
        ],
        "suffix": "r",
        "pump": [
          "%\n\n"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\\x0a"
        ],
        "suffix": "",
        "pump": [
          "%\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\n"
        ],
        "suffix": "art",
        "pump": [
          "%\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*((?:.|\\n|\\r)*?)\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[\\w|\\\\]+(?:\\[\\])*\\|?)+)(?:\\s+(\\$\\S+))?(?:\\s+(.*))?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-Z]'([^\\\\']+|\\\\.)*?'|'([^\\\\']+|\\\\.)*?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "A'a"
        ],
        "suffix": "A'''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "s{g:s{g:\bA9&G2<E5%",
        "pump": [
          "s{g:"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "[["
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "A''A",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "y'"
        ],
        "suffix": "&#Tc&#TcIr.h[99\n-9",
        "pump": [
          "&#Tc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "f\\s+(([\\d]{1,}[\\s]?){3,})+",
    "inputs": [
      {
        "prefix": [
          "f\t0\t0\t0"
        ],
        "suffix": "\tf",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "fsddddddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "f\t0\t0\t0"
        ],
        "suffix": "\t\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "fsdddddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dddd"
        ]
      },
      {
        "prefix": [
          "f\t0"
        ],
        "suffix": "\tf",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "fsddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^%\\{(.|(?:\\r?\\n))*?%\\}",
    "inputs": [
      {
        "prefix": [
          "%{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "%{"
        ],
        "suffix": "%",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\x00-\\x08\\x0A-\\x1F\\x7F]|\\r\\n|\\n\\r|\\n)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra\ra",
        "pump": [
          "\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:a*|b*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([0-9]+)*\\*[0-9]+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0**",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "f"
        ],
        "suffix": "35203520660665676",
        "pump": [
          "3520"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a*",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "23152315182819090",
        "pump": [
          "2315"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Sum the given numeric values. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ume",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " Sum Sum the given",
        "pump": [
          " Sum"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?",
    "inputs": [
      {
        "prefix": [
          "</meta>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "</v:>"
        ],
        "suffix": "o",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "</meta>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "</v:>"
        ],
        "suffix": "s\n></",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\/(\\/.*|\\*([^*]|\\*[^/])*\\*\\/)[\\t\\n\\r ]*)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "/////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^;\\s+SecureZT((?:\\s?\\d+\\.\\d+\\.\\d+\\.\\d+){0,})$",
    "inputs": [
      {
        "prefix": [
          "; SecureZT"
        ],
        "suffix": "\\x00",
        "pump": [
          " 0.0.0.000.0.0.0"
        ]
      },
      {
        "prefix": [
          ";\tSecureZT"
        ],
        "suffix": "\t0.0",
        "pump": [
          "\t0.0.0.000.0.0.0"
        ]
      },
      {
        "prefix": [
          ";sSecureZTd\u0000d\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dddddddd"
        ]
      },
      {
        "prefix": [
          "; SecureZT"
        ],
        "suffix": "\\x00",
        "pump": [
          " 0.0.0.000.0.0.0"
        ]
      },
      {
        "prefix": [
          ";\tSecureZT"
        ],
        "suffix": "\t0.0.0",
        "pump": [
          "\t0.0.0.000.0.0.0"
        ]
      },
      {
        "prefix": [
          ";sSecureZTd\u0000d\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dddddddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"((\\\\.|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\\\".\\\\\\yTP?aLl3>56H*"
        ],
        "suffix": "?\\6H\\.*?\\\\?\\6H\\.*?\\\\aLl3*?\\.\\\\.{~=><\\?\\\\.|",
        "pump": [
          "?\\6H\\.*?\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:INSERT|REPLACE)\\s+(?:IGNORE)?\\s*INTO `(.*)` \\((.*)\\) VALUES (\\(.*\\))+",
    "inputs": [
      {
        "prefix": [
          "INSERT\tINTO `` () VALUES "
        ],
        "suffix": "IGN",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "INSERT\tINTO `` () VALUES "
        ],
        "suffix": "ERT",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`((?:\\\\`|[^`\\\\]+)*)`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "a!"
        ]
      },
      {
        "prefix": [
          "`a"
        ],
        "suffix": "``\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@`"
        ],
        "suffix": "|*>5|*>5q\nxkwSM\bKV",
        "pump": [
          "|*>5"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "a!"
        ]
      },
      {
        "prefix": [
          "`a"
        ],
        "suffix": "a`\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ")`"
        ],
        "suffix": "\t\nFi\t\nFiwx;IbGT?RK",
        "pump": [
          "\t\nFi"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n\\n((    |\\t).*?\\n|\\n)+",
    "inputs": [
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "   ",
        "pump": [
          "    \n\n"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "   ",
        "pump": [
          "    \n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(%[A-Ba-z])?\"\"\"(?:.|\\n)*?\"\"\"",
    "inputs": [
      {
        "prefix": [
          "%a\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "%\n\"\"",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "%a\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "%\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)",
    "inputs": [
      {
        "prefix": [
          "<!--bower-->"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!--bower-->"
        ],
        "suffix": "--<!",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--bower-->"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!--bower-->"
        ],
        "suffix": "--\ne<!-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\\\\\\@#]+|\\\\[\\@#])+|\\@[^!\\{a-z0-9_]|\\@@|#@|#[^\\{\\}a-zA-Z0-9#\\*]+|\\\\.)(.*)$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "+,Mt+,Mt \nW\t:,2U\\\r1",
        "pump": [
          "+,Mt"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "$\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "EvYCEvYCToJ5Rc:@\n%",
        "pump": [
          "EvYC"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r?\\n(?:\\s*))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\S+::\\w+)[.]?(\\S+)*$",
    "inputs": [
      {
        "prefix": [
          "!::A"
        ],
        "suffix": "\\x09",
        "pump": [
          "{;"
        ]
      },
      {
        "prefix": [
          "a::a.a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "S::wSS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "O::fO::ffLShgU)h/:M-a\t",
        "pump": [
          "O::f"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* vup                   *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "up   ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "C~y^C~y^#6<rRHGzQ2",
        "pump": [
          "C~y^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^/?([\\x01-\\xFF]+/?)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "0/"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\u0000",
        "pump": [
          "u0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Name\\sservers:\\s((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Name servers: !\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name\tservers:\t"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Name servers: N\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name\tservers:\t"
        ],
        "suffix": "s:\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n      ((?:\\s*[[:word:]]+?,?)+)\n      \\s*=\n      \\s*vars",
    "inputs": [
      {
        "prefix": [
          "\n      \n"
        ],
        "suffix": ":dro:droo:rdword:",
        "pump": [
          ":dro"
        ]
      },
      {
        "prefix": [
          "      :"
        ],
        "suffix": ",:\t,",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "=\n      "
        ],
        "suffix": ":wwo:wword::wword:",
        "pump": [
          ":wwo"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-z]+?://([-\\w\\.]+[-\\w])+(:\\d+)?(/([\\w/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "inputs": [
      {
        "prefix": [
          "a://"
        ],
        "suffix": "-:.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "/\ta://a-a/#a.",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Parameters:\\*\\*((.|[\\n\\r])+?)\\*\\*Returns:",
    "inputs": [
      {
        "prefix": [
          "Parameters:**!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "Parameters:**"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Parameters:**Q"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "Parameters:**"
        ],
        "suffix": "et",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\.|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\\\\\ \t\t\t \t\n\r\t\n\n\r\t \r\t",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\s)*?-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<!---"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\r\n\t\n\b\b\b",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "-<!--<!--"
        ],
        "suffix": " \t   \t     \t\t\n \r\t\r",
        "pump": [
          " \t  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>)\\s*|([^\\s<]+\\s*)",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw='\u0000"
        ],
        "suffix": "",
        "pump": [
          "'sw='\u0000"
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=\ta",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\""
        ],
        "suffix": "",
        "pump": [
          "\"sw=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*/([^/\\\\]*(\\\\.[^\\//]*)*)/\\s*$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\!\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Terms weights:\\n((?:.|\\n)*)\\n+",
    "inputs": [
      {
        "prefix": [
          "Terms weights:\n"
        ],
        "suffix": "ms",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "Terms weights:\n"
        ],
        "suffix": "eiTe",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\e\\[(?:\\d{1,2};?)+m)",
    "inputs": [
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "862877862877036029360157",
        "pump": [
          "862877"
        ]
      },
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "0\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "11401140173246910925357",
        "pump": [
          "1140"
        ]
      },
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "778577851465926085",
        "pump": [
          "7785"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\.|[^'])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "'",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "'",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[;{},\\s]|\\/\\/.*|\\/\\*.*?\\*\\/)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "~",
        "pump": [
          "/**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//\t\t"
        ]
      },
      {
        "prefix": [
          "//   "
        ],
        "suffix": "\t\t////\t\t////\t//\t\t\t \t\r   \n \r////   \n\n/",
        "pump": [
          "\t\t////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^: ]+): (.+?(?:\\r\\n\\s(?:.+?))*)\\r\\n",
    "inputs": [
      {
        "prefix": [
          "a: a"
        ],
        "suffix": "\ra:",
        "pump": [
          "\r\n\ta\r\n\r\n\ta"
        ]
      },
      {
        "prefix": [
          "a: a"
        ],
        "suffix": "\r",
        "pump": [
          "\r\n\ta\r\n\r\n\ta"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d|\\s|\\W)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "A",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ta",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z0-9]+[a-z0-9\\-\\_\\.]*([\\/\\\\]{1}[a-z0-9]+[a-z0-9\\-\\_\\.]*)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "/-",
        "pump": [
          "/aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*::)*(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a:",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[[:blank:]]*[[:alpha:]]*[>|])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "ahb",
        "pump": [
          "aa>"
        ]
      },
      {
        "prefix": [
          ">k"
        ],
        "suffix": "",
        "pump": [
          ":k"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([A-Za-z0-9\\-\\:\\.]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/|\\s+)>))",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "DO\"]-?']-?\ta]-/",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e<H.\rCQ\b15e<H.\rCQ\b15{r6ih@x|y0\tLYr#zlK~[ H$5i/Yg",
        "pump": [
          "e<H.\rCQ\b15"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "D\"]-?']-?",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<7\r4lTZ[_Y<7\r4lTZ[_Y(Wb.6WZ&12, v6hu(Ve4O\b|Bk1@VzuI*xI2%@A]z",
        "pump": [
          "<7\r4lTZ[_Y"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--((.|\\s)*?)-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<!---\t\n\t\t\n\t\b\t\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\b\r\t\n\t",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(from\\s+([a-zA-Z0-9_\\.]+)\\s+)?import\\s+\\(?\\s*([a-zA-Z0-9_\\.\\*]+(\\s+as\\s+[a-zA-Z0-9_]+)?[ \\t]*,?[ \\t]*)+[ \\t]*\\)?",
    "inputs": [
      {
        "prefix": [
          "import\t(a"
        ],
        "suffix": "o*\t\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "import\t(a"
        ],
        "suffix": "r\t\n",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:state\\s=\\s\\\".*\\\"(?:\\n\\t.*)+)",
    "inputs": [
      {
        "prefix": [
          "state\t=\t\"\""
        ],
        "suffix": "a",
        "pump": [
          "\n\t\n\t"
        ]
      },
      {
        "prefix": [
          "state\t=\t\"\""
        ],
        "suffix": "a",
        "pump": [
          "\n\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "p://",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-."
        ],
        "suffix": "",
        "pump": [
          "d."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..fi..fil..ftfil..ftp\n ",
        "pump": [
          "..fi"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "p::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-."
        ],
        "suffix": "",
        "pump": [
          "d."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.elh.eliftMiMFI87G:",
        "pump": [
          "h.el"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(http:\\/\\/|https:\\/\\/)([\\w]*(-?[\\w]*)*\\.)+[a-z]{2,4}",
    "inputs": [
      {
        "prefix": [
          "http://"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": ":/",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          "http://\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": ".kKa.kKasBCckDpr",
        "pump": [
          ".kKa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "tpsaA.:",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          "http://\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "http://."
        ],
        "suffix": "ht63ht6359139658",
        "pump": [
          "ht63"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?\\s*,?\\s*)+)",
    "inputs": [
      {
        "prefix": [
          "m-"
        ],
        "suffix": "-0.+",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "m,"
        ],
        "suffix": "",
        "pump": [
          "-,"
        ]
      },
      {
        "prefix": [
          "m-"
        ],
        "suffix": "a",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "ms"
        ],
        "suffix": "",
        "pump": [
          "-s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([A-Z][a-z]*)(\\d+\\.?\\d*)?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "A00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a0..",
        "pump": [
          "A00"
        ]
      },
      {
        "prefix": [
          "AAd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "AAd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "A179U92009A179U92009238068386559909441422401096069067793739332976375504298369ZQTGTPGPARVERR12,",
        "pump": [
          "A179U92009"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!\\-\\-(.|\\s)*?\\-\\->(\\s)*",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "a",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<!---"
        ],
        "suffix": "\t  \t\t  \t\t \r  \t\r  \t\n",
        "pump": [
          "\t  \t"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "-->!----<!--^3595466 \r"
        ],
        "suffix": "  \t\t  \t\t\t\r \n\t \t\t\t\r",
        "pump": [
          "  \t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "jquery(-(\\.?\\d+)+)?(\\.intellisense)?(\\.min)?\\.js$",
    "inputs": [
      {
        "prefix": [
          "jquery-0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "jquery-.0"
        ],
        "suffix": "-",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "jquery-ddd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "jjquery-."
        ],
        "suffix": "48684868937044887",
        "pump": [
          "4868"
        ]
      },
      {
        "prefix": [
          "jquery-0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "jquery-.0"
        ],
        "suffix": "sa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "jquery-dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "jquery-"
        ],
        "suffix": "27622762570157703",
        "pump": [
          "2762"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "ActionController::Routing::Routes.draw do \\|map\\|((\\n|\\s*.*\\n)*)\\s+\\# end",
    "inputs": [
      {
        "prefix": [
          "ActionController::Routing::Routes!draw do |map|"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "ActionController::Routing::Routesadraw do |map|"
        ],
        "suffix": "Co",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "ActionController::Routing::RoutesAdraw do |map|"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "ActionController::Routing::Routesadraw do |map|"
        ],
        "suffix": "m",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "#ActionController::Routing::Routessdraw do |map|\t\n\r\n \n \t "
        ],
        "suffix": " \t\n\n \t\n\n \t\t\n\n",
        "pump": [
          " \t\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "trailer[\\s]*<<(.*)>>[\\s]*[\\r\\n]+(?:[^\\r\\n]*[\\r\\n]+)*startxref[\\s]*[\\r\\n]+",
    "inputs": [
      {
        "prefix": [
          "trailer<<>>\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\n\n"
        ],
        "suffix": "ail",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "trailer<<a>>"
        ],
        "suffix": "\n\n\r\n\n\n\r\n\r\r\r\r\r\r\n\n\b\b",
        "pump": [
          "\n\n\r\n"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\n\n"
        ],
        "suffix": "\n\t<",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\n\n "
        ],
        "suffix": "\r\n\r\r\r\n\r\r\n\r\r\r\n\r\n",
        "pump": [
          "\r\n\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<ins[^>]*>((.|\\n)*?)<\\/ins>)",
    "inputs": [
      {
        "prefix": [
          "<ins>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<ins>"
        ],
        "suffix": "<\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<ins>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<ins>"
        ],
        "suffix": "s",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*<link[^>]*rel=\"stylesheet\"[^>]*/>)+(\\s+<link[^>]+style.css[^>]+/>)",
    "inputs": [
      {
        "prefix": [
          "<linkrel=\"stylesheet\"r/>"
        ],
        "suffix": "",
        "pump": [
          " <linkrel=\"stylesheet\"rel=\"stylerel=\"stylesheet\"/>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "><link",
        "pump": [
          "\t<linkrel=\"stylesheet\"rel=\"stylesheet\"/>"
        ]
      },
      {
        "prefix": [
          "<linkrel=\"stylesheet\"/><link\u0000"
        ],
        "suffix": "",
        "pump": [
          "rel=\"stylesheet\"rel=\"stylesheet\"/><link\u0000"
        ]
      },
      {
        "prefix": [
          "<linkrel=\"stylesheet\"r/>"
        ],
        "suffix": "",
        "pump": [
          " <linkrel=\"stylesheet\"rel=\"stylerel=\"stylesheet\"/>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ">\t<link<\t",
        "pump": [
          "\t<linkrel=\"stylesheet\"rel=\"stylesheet\"/>"
        ]
      },
      {
        "prefix": [
          "<linkrel=\"stylesheet\"/><link\u0000"
        ],
        "suffix": "",
        "pump": [
          "rel=\"stylesheet\"rel=\"stylesheet\"/><link\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "define\\(\\s*'infinite-scroll\\/js\\/index'(.|\\n)+\\],\\s*factory",
    "inputs": [
      {
        "prefix": [
          "define('infinite-scroll/js/index'!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "define('infinite-scroll/js/index'"
        ],
        "suffix": "ct",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "define('infinite-scroll/js/index'e"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "define('infinite-scroll/js/index'"
        ],
        "suffix": "e-]",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*OPTIMIZE:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*OPTIMIZE:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*OPTIMIZE:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(Main.*?)\\s=\\s(.*?(?:\\n\\s\\s.*?)*);",
    "inputs": [
      {
        "prefix": [
          "Main =\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x0a \\x09\\x0a\\x0a\\x0b"
        ]
      },
      {
        "prefix": [
          "Main\t=\t"
        ],
        "suffix": "a",
        "pump": [
          "\n\t\t\n\n\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)://([^/]*)(/.*)+",
    "inputs": [
      {
        "prefix": [
          "://"
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "://"
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\r|\\n)([\\t ]*(\\r\\n|\\r|\\n))+",
    "inputs": [
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\r\t",
        "pump": [
          "\t\r\n"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\ra\n",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([\\-\\*]\\s+([^\\n]*)\\n)*([\\-\\*]\\s+([^\\n]*)\\n?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "*a\n\n",
        "pump": [
          "*\t\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^\\\\:]+|\\\\.)*)(?::(.*))$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "DGxkDGxk%@dj0svS\b",
        "pump": [
          "DGxk"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:(?:.*)/)*([a-z][a-z0-9-]*))\\..+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a/",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//.///././/.//.///.//./",
        "pump": [
          "//./"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<span>((.|\\n|\\r\\n)*?)<\\/span>",
    "inputs": [
      {
        "prefix": [
          "<span>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<span>"
        ],
        "suffix": "a\r",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<span>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<span>"
        ],
        "suffix": "p",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\+|\\()?(\\d+[ \\+\\(\\)\\/-]*)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "91779177207526670(6d",
        "pump": [
          "9177"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script(.|\\s)*?\\/script>",
    "inputs": [
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "<scri",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<script\t\n\t \n\t\r\t \n\r\n"
        ],
        "suffix": "\t \t \t \t \t \r",
        "pump": [
          "\t \t "
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "t<",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "r<script^\t\b\t\r\t\b"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\r\t\b\t\b\t\t\t\b",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\d+(.\\d+)*",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "0aa",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"sw=\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-Za-z0-9_]+([^A-Za-z0-9_]|\\n)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\na",
        "pump": [
          "$\n"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a",
        "pump": [
          "$\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/\\*\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)$",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/**",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/**/*"
        ],
        "suffix": "*\r\r\n*\r\r\n\r\r\t\n\n\n\b\n\n\b\r",
        "pump": [
          "*\r\r\n"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "//**",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "\n\n\r\r\n\n\r\r\t\n\r\t\n\n\r\t\r\n\r",
        "pump": [
          "\n\n\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:[^\"]+|\\\\\")*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "k4TWk4TWeDY8z7}p:~",
        "pump": [
          "k4TW"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n\\n(.*(\\n.+)*:\\n\\n!\\[.*\\]\\((.*\\))(\\n\\n)?)",
    "inputs": [
      {
        "prefix": [
          "\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a;\\x0a;"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "](\n:",
        "pump": [
          "\na\na"
        ]
      },
      {
        "prefix": [
          "\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a;\\x0a;"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "](",
        "pump": [
          "\na\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.|\\n)*?\\n  \\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\S+).([a|n|r|v]) (\\d+) ((\\d+ ?)+)",
    "inputs": [
      {
        "prefix": [
          "aaa 0 0"
        ],
        "suffix": " 0\t$",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "S\u0000a d dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "aaa 0 0"
        ],
        "suffix": " 0\ta",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "S\u0000a d ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(((.*)*)*x)Ā",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "E4\t\tE4\t\t}V\b",
        "pump": [
          "E4\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ax",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "JDC|JDC|T]a",
        "pump": [
          "JDC|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*options\\s*(([^\\s]+\\s*)*)$",
    "inputs": [
      {
        "prefix": [
          "optionsa"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(@partial \".*\")+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "@",
        "pump": [
          "@partial \"\"@partial \"\""
        ]
      },
      {
        "prefix": [
          "@partial \"\"@partial \""
        ],
        "suffix": "",
        "pump": [
          "\"@partial \"\"@partial \""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "p",
        "pump": [
          "@partial \"\"@partial \"\""
        ]
      },
      {
        "prefix": [
          "@partial \"\"@partial \""
        ],
        "suffix": "",
        "pump": [
          "\"@partial \"\"@partial \""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.(startProcessInstanceByKey)(\\()([a-z0-9_.]+)(,.?)*(\\n?)([a-z0-9_.()])*(,?)([a-z0-9_.()])*\\)",
    "inputs": [
      {
        "prefix": [
          ".startProcessInstanceByKey(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByKey(a"
        ],
        "suffix": "Insta",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceByKey.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByKey(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByKey(a"
        ],
        "suffix": "Inst",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceByKey.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:(?:\"(?:[^\\\\\"]|(\\\\\\\\)*\\\\\")*\")|(?:\\'(?:[^\\\\\"]|(\\\\\\\\)*\\\\\\')*\\')|[^#])*)(#.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"'\\",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "''\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "'''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: *\\/\\/.*\\s*)* *lodash\\.forOwn *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " // //"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.fo",
        "pump": [
          " //\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/////////////////.forO////Z0rR0khyfh.forOwn0556226674480240",
        "pump": [
          "//////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "recipe\\[(.*::)*([^\\]]+)\\]",
    "inputs": [
      {
        "prefix": [
          "recipe["
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "recipe["
        ],
        "suffix": ":",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "recipe["
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "recipe["
        ],
        "suffix": "i]a:r",
        "pump": [
          "::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "seamonkey\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "seamonkey/0._0"
        ],
        "suffix": "ey/",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "seamonkey/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "seamonkey/0._0"
        ],
        "suffix": "ey/0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "seamonkey/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)",
    "inputs": [
      {
        "prefix": [
          "function"
        ],
        "suffix": "\t/*",
        "pump": [
          "\t/*a*/\t"
        ]
      },
      {
        "prefix": [
          "function"
        ],
        "suffix": "*\t*/",
        "pump": [
          "\t/*a*/\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<input(\\r|\\t|\\n|.)*?type=\\\"file\\\"(\\r|\\t|\\n|.)*?>",
    "inputs": [
      {
        "prefix": [
          "<input"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<input"
        ],
        "suffix": "e=",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<input"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\r\t\r\t\t \t\r\r  \r  \r\r\t\n\t   \r\n",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<input"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<input"
        ],
        "suffix": "y<",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "\t<input\t<input\t<inputQNxcyBeTUdrcyz^\"elp\t<type=\"ft>type=\"fiHCUaXrL"
        ],
        "suffix": "N\ti\t\t\tN\ti\t\t\t\r\n\t\r\r<input>1C4b6d08C",
        "pump": [
          "N\ti\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*[^*]*\\*+([^/*][^*]*\\*+)*/|//([^\\\\]|[^\\n][\\n]?)*?\\n|(\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'|.[^/\"'\\\\]*)",
    "inputs": [
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\x00"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "\\\\\"a'a\\\n\"a*\\",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//-<//-<%<>:~@;{}:;",
        "pump": [
          "//-<"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "\\\\\"/'\\/a\n\"\\*\\/*",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//mb//mbtIjrP|eY2f4",
        "pump": [
          "//mb"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Registrar:\\s((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Registrar: !\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Registrar:\t"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Registrar: R\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Registrar:\t"
        ],
        "suffix": "ar\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)",
    "inputs": [
      {
        "prefix": [
          "/**//**//*'*//**/''/*\"*//**/''/**//*'*/\"\"/*!(\""
        ],
        "suffix": "",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\(\t;\\",
        "pump": [
          "/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^2 PLAC (?:.*, *)*(.*)",
    "inputs": [
      {
        "prefix": [
          "2 PLAC "
        ],
        "suffix": "a",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          "2 PLAC , "
        ],
        "suffix": "",
        "pump": [
          " , "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\\\\\|\\\\.|[^\"\\\\])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\*-+\\*\\/\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          "/*-*/"
        ],
        "suffix": "**",
        "pump": [
          "\t/*-*/\t"
        ]
      },
      {
        "prefix": [
          "/*-*/"
        ],
        "suffix": "-*/*-*",
        "pump": [
          "\t/*-*/\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "**",
        "pump": [
          "\t/*-*/\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^:container\\(\"((?:[^()]+|\\([^()]*\\))+)\"\\)$",
    "inputs": [
      {
        "prefix": [
          ":container(\"!"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          ":container(\"a"
        ],
        "suffix": "e",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":container("
        ],
        "suffix": "\"  \t\"  \t\n\r\r\r \n\n \n \n\t \t\r\n\n\t\t \n\r\t\n\r\r\r \r  \n\t\t\n\r      \n",
        "pump": [
          "\"  \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^Version: v(\\d+)(?:[-\\.][-a-z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "Version: v0"
        ],
        "suffix": "!",
        "pump": [
          "----"
        ]
      },
      {
        "prefix": [
          "Version: v0"
        ],
        "suffix": "s.",
        "pump": [
          "-a-a"
        ]
      },
      {
        "prefix": [
          "Version: vd-a"
        ],
        "suffix": "\u0000",
        "pump": [
          "---a"
        ]
      },
      {
        "prefix": [
          "Version: v0"
        ],
        "suffix": "-e-a-z0--e-a-z0-9-a-z0-e-a-z0-9-a-z0-eV",
        "pump": [
          "-e-a-z0-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```(\\s|\\t)*gl",
    "inputs": [
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`g\n",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "\t\t\t\n \t\t\t\t\n \t\t\r\n\t\r\r\t\r \t\n\r\r \r\r\n  \r \r\r\n \n\r\t \t \r \t",
        "pump": [
          "\t\t\t\n \t"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`g``",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "l```\r\t\t\r\t "
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\r\t\t\t\n   ",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([ \\t]*\\r|[ \\t]*\\n|[ \\t]*\\r\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t\n\r\t",
        "pump": [
          "\t\r\t\r\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\r\t",
        "pump": [
          "\t\r\t\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\r\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:((\"(?:([^\\n\\r\"\\\\]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*\")|('(?:([^\\n\\r'\\\\]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*')))",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(\\x00"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "ua\"a\\uaaaa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "NI4SNI4S:XW;d/w#@",
        "pump": [
          "NI4S"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(([ \\n\\r\\t\\f])|(\\/\\*(.|\\n|\\r)*?\\*\\/))+)",
    "inputs": [
      {
        "prefix": [
          " /*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//",
        "pump": [
          "\t/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Version\\/(\\d+)(\\.(\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "Version/0.0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version/d\u0000ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "Version/0.0"
        ],
        "suffix": "ion",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version/d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- BEGIN ([\\w\\-\\.ぁ-んァ-ヶ亜-熙]+):with -->(([\\n\\r\\t]|.)*?)<!-- END ([\\w\\-\\.ぁ-んァ-ヶ亜-熙]+):with -->",
    "inputs": [
      {
        "prefix": [
          "<!-- BEGIN \\xff:with -->"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN a:with -->"
        ],
        "suffix": "h ",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN c:with --><\t\t\r\n\n\t-- BEGI"
        ],
        "suffix": "N\t\t\r\t\tN\t\t\r\t\t\t\r\r \r\r\t\n\n- END<!-<!-- EN",
        "pump": [
          "N\t\t\r\t\t"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN \\xff:with -->"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN a:with -->"
        ],
        "suffix": "h",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "N<!-- BEGIN N:with -->-"
        ],
        "suffix": "\t\t \t\r\t\t\t \t\r\t\t \t \t\t\t\r\t\n\t\n\t",
        "pump": [
          "\t\t \t\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s?){3,}",
    "inputs": [
      {
        "prefix": [
          "\n\t\n\t"
        ],
        "suffix": "\t\t",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n\t\n\t"
        ],
        "suffix": "a\n\t\n\t",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\t",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(র|সো|ম|বু|বৃ|শু|শ)+",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\n)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "f\\s+((([\\d]{1,}\\/[\\d]{1,}[\\s]?){3,})+)",
    "inputs": [
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "0/",
        "pump": [
          "0/000/00/0"
        ]
      },
      {
        "prefix": [
          "fsd/dd/dd/dd/dd/dd/dd/d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd/d"
        ]
      },
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "0/",
        "pump": [
          "0/000/00/0"
        ]
      },
      {
        "prefix": [
          "fsd/dd/dd/dd/dd/dd/ds"
        ],
        "suffix": "\u0000",
        "pump": [
          "d/dd/dd/dd/dd/dd/ds"
        ]
      },
      {
        "prefix": [
          "f\t0/0"
        ],
        "suffix": "\tf",
        "pump": [
          "0/00"
        ]
      },
      {
        "prefix": [
          "fsd/dd/dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd/dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:\\{(?:.|\\r\\n|\\n)*\\}|\\[(?:.|\\r\\n|\\n)*\\])\\s*$",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "[",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title class=\"klass\">Title &quot; &#39; &amp; &lt; &gt; \\$ \\$\\$ \\$&#39; \\$` \\$&amp; \\$3<\\/title>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "$&amp; ",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": " $",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[\\w|\\\\]+(?:\\[\\])*\\|?)+)(?:\\s+(.*))?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]+(?:[a-z0-9-\\/]?[a-z0-9])*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0-",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aow6aow6qow6qlz0yowoq6w-",
        "pump": [
          "aow6"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\\\w]{1,}\\\\s?){1,}$",
    "inputs": [
      {
        "prefix": [
          "w\\"
        ],
        "suffix": "!",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ss",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\\\ww"
        ],
        "suffix": "\\\\w\\\\\\\\\\w\\\\\\\\\\\\w\\\\\\\\\\\\\\\\w",
        "pump": [
          "\\\\w\\\\\\"
        ]
      },
      {
        "prefix": [
          "w\\"
        ],
        "suffix": "!",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ss",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\\\w\\w\\w\\\\\\w\\\\w\\w\\w"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\w",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ml",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* so that with increment, it'll go to 3 *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "l",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2Rgc2RgcPaNLC(y;gw",
        "pump": [
          "2Rgc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^.*<body(\\s[^>]*)*>",
    "inputs": [
      {
        "prefix": [
          "<body"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<body"
        ],
        "suffix": "d<b><b",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<bodys"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "><body"
        ],
        "suffix": "\n\r \t\n\r \t\t\r \t\t   \r ",
        "pump": [
          "\n\r \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+:?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "::",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "044004400040000000::",
        "pump": [
          "0440"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\\"((.|\\n)*)\\\"\\s*$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+[\\-\\.]?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "--",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(ContractDefinition \\\"(.+)\\\"(?:\\n\\s+Gas costs: \\d+)?\\n(?: +.+\\n)+)",
    "inputs": [
      {
        "prefix": [
          "ContractDefinition \"a\"\n"
        ],
        "suffix": "sts",
        "pump": [
          "  a\n"
        ]
      },
      {
        "prefix": [
          "ContractDefinition \"a\"\n"
        ],
        "suffix": " co",
        "pump": [
          "  a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(array|hash|scalar)(?:_?ref)?\\s*(?:\\(\\s*(\\S+)\\s*\\))*$",
    "inputs": [
      {
        "prefix": [
          "array"
        ],
        "suffix": "*",
        "pump": [
          "(\\x00)())"
        ]
      },
      {
        "prefix": [
          "hash"
        ],
        "suffix": "h(\t",
        "pump": [
          "(a)(a)"
        ]
      },
      {
        "prefix": [
          "hashS"
        ],
        "suffix": "\u0000",
        "pump": [
          "sS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "^'\u0000",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "^",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)(&.+?;)+(\\w+)",
    "inputs": [
      {
        "prefix": [
          "a&!;"
        ],
        "suffix": "",
        "pump": [
          "&!;&;;"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "&;",
        "pump": [
          "&a;&a;"
        ]
      },
      {
        "prefix": [
          "w&\u0000;&\u0000"
        ],
        "suffix": "",
        "pump": [
          ";&\u0000;&\u0000"
        ]
      },
      {
        "prefix": [
          "a&a;"
        ],
        "suffix": "",
        "pump": [
          "&!;&;;"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "&;",
        "pump": [
          "&a;&a;"
        ]
      },
      {
        "prefix": [
          "w&\u0000;&\u0000"
        ],
        "suffix": "",
        "pump": [
          ";&\u0000;&\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([+|-]*[0-9]*[.]*?[0-9]+)([a-z%]+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "%%"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "+0.a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0%"
        ],
        "suffix": "\u0000",
        "pump": [
          "a%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(button.*data-toggle=\"modal\".*data-target)*(aside)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "buttondata-toggle=\"modal\"data-targetasidata-targetbuttondata-targetasidata-toggle=\"modal\"data-targetasidata-target"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ard",
        "pump": [
          "buttondata-toggle=\"modal\"data-toggle=\"modal\"data-target"
        ]
      },
      {
        "prefix": [
          "buttondata-toggle=\"modal\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "data-targetbuttondata-toggle=\"modal\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "buttondata-toggle=\"modal\"data-targetasidata-targetbuttondata-targetasidata-toggle=\"modal\"data-targetasidata-target"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mo",
        "pump": [
          "buttondata-toggle=\"modal\"data-toggle=\"modal\"data-target"
        ]
      },
      {
        "prefix": [
          "button\u0000"
        ],
        "suffix": "",
        "pump": [
          "data-toggle=\"modal\"data-targetbutton\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+=)*(\\(+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ")==="
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a="
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ")==="
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Second integer indicates how many items are \"used\", which will\n\t\t * not change during this procedure. However, if the initial array\n\t\t * was empty, then the newly allocated stretchy has no \"used\" slots,\n\t\t * so mark it as such. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " Sec Second intege",
        "pump": [
          " Sec"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[0-9]* ?(?:✔|✘|➟) ?[0-9]*(?:, | \\| )?)+$",
    "inputs": [
      {
        "prefix": [
          " \\xff\\xff\\xff"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\xff\\xff\\xff"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "➟ 0|",
        "pump": [
          "0➟ ➟"
        ]
      },
      {
        "prefix": [
          "ââ "
        ],
        "suffix": "\u0000",
        "pump": [
          "0â "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "✔ ✔ ✔ ✔ ✔ ✔ ✔ ✔ ✔ ✔ ✔✔ ✔ ✔ ✔ ✔  ",
        "pump": [
          "✔ ✔ ✔ ✔ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[[:punct:]](\\s+)*",
    "inputs": [
      {
        "prefix": [
          ":\t"
        ],
        "suffix": "::",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ":ss"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          ":\t"
        ],
        "suffix": "\t:a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ":s"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "nextval\\('(.+?)'(.+?)*\\)",
    "inputs": [
      {
        "prefix": [
          "nextval('!'"
        ],
        "suffix": "",
        "pump": [
          "**"
        ]
      },
      {
        "prefix": [
          "nextval('a'a"
        ],
        "suffix": "(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "nextv"
        ],
        "suffix": "al('al('L'(~}!`TDmZ5Y/J'5",
        "pump": [
          "al('"
        ]
      },
      {
        "prefix": [
          "nextval('n'"
        ],
        "suffix": "",
        "pump": [
          "**"
        ]
      },
      {
        "prefix": [
          "nextval('a'a"
        ],
        "suffix": "exta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "nextval'\u0000'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "nextval"
        ],
        "suffix": "('''(''',(!.:_`$<^;''>",
        "pump": [
          "('''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\/[^\\s(<>]+)*\\/",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/a",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/a",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\{\\}]+[^\\}]|[\\}])+?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "{{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "}\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "}\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(!emoji)\\s*(\\d+)*",
    "inputs": [
      {
        "prefix": [
          "!emoji0"
        ],
        "suffix": "!emo",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "!emojidd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "!emoji0"
        ],
        "suffix": "a!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "!emojid"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!â(.|\\n)*â>",
    "inputs": [
      {
        "prefix": [
          "<!\\xff\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!–"
        ],
        "suffix": "!",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!\\xff\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!–"
        ],
        "suffix": "!<–",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain Name Servers listed in order:\\n\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain Name Servers listed in order:\\x0a\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain Name Servers listed in order:\n\n"
        ],
        "suffix": "e",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain Name Servers listed in order:\\x0a\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain Name Servers listed in order:\n\n"
        ],
        "suffix": "n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(__END__)\\n((?:.*\\n)*)",
    "inputs": [
      {
        "prefix": [
          "__END__\n"
        ],
        "suffix": "D_",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^,\\s]+)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ",",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ",",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.|\\n)*START OF TEST HELPER LOGS: IGNORE PREVIOUS.\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "EVIOU",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " LOG",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "import\\s+(.*)\\s+=\\s*require\\(((.|\\s)*)\\);",
    "inputs": [
      {
        "prefix": [
          "import  \\x00 = require("
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "import\t\t=require("
        ],
        "suffix": "t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "importss=requires"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "import\t\n=require("
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\n\t\t\t\n\n\t\t\r\r\n",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "import  \\x00 = require("
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "import\t\t=require("
        ],
        "suffix": "e",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "importss=requires"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{(.*?)(?:,(.*?))*}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "[\\\\p{L}]([\\\\p{L}|[:space:]|-]*[\\\\p{L}])*",
    "inputs": [
      {
        "prefix": [
          "L"
        ],
        "suffix": "La",
        "pump": [
          "LL"
        ]
      },
      {
        "prefix": [
          "L"
        ],
        "suffix": "La",
        "pump": [
          "LL"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\"[^\"]*\"|'[^']*'|[^;])*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ";\";';",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^ {0,3}>.+(?:\\n[ \\t]*\\S.*)*",
    "inputs": [
      {
        "prefix": [
          ">a"
        ],
        "suffix": "a",
        "pump": [
          "\n a"
        ]
      },
      {
        "prefix": [
          ">a"
        ],
        "suffix": "a",
        "pump": [
          "\n a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<[\\/\\?]?[a-zA-Z0-9:]+(?:\\s+[^\"\\s?>\\/]+=(?:\"[^\"]*\"|'[^']*'|[^'\">\\s]+))*\\s?[\\/\\?]?>",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " \\x00==@"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</a'\t>\"",
        "pump": [
          "\ta==a"
        ]
      },
      {
        "prefix": [
          "<0s\u0000=\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"s\u0000=\u0000"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " \\x00==@"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "a=a<//\"a",
        "pump": [
          "\ta==a"
        ]
      },
      {
        "prefix": [
          "<0s\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-z0-9]|[a-z0-9][a-z0-9\\\\-]*[a-z0-9])\\\\.)*([a-z]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "a\\0a\\0\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\$$",
        "pump": [
          "a\\aa\\aa\\a"
        ]
      },
      {
        "prefix": [
          "a9\\\\a"
        ],
        "suffix": "ab\\\\9a\\aaaab\\\\9\\ab\\\\9a\\aaaab\\\\9\\aaaaswqsuvavxvrj\\9ly\\aaaaswqsuvq\\aa9ab\\9zpyotym\\aa\\9",
        "pump": [
          "ab\\\\9a\\aaaab\\\\9\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[Hh][Tt][Tt][Pp][Ss]?:\\/\\/(?:[\\d\\w.-]+)\\.(?:\\w{2,6})(?:\\/[\\d\\w\\#\\%\\&\\-\\.\\,\\/\\:\\=\\?\\~]+)*",
    "inputs": [
      {
        "prefix": [
          "HTTPS://a.aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "HTTP://-\u0000ww/w"
        ],
        "suffix": "\u0000",
        "pump": [
          "/#/w"
        ]
      },
      {
        "prefix": [
          "HTTPS://a.a"
        ],
        "suffix": "\u0000",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "HTTP://-\u0000w/#&"
        ],
        "suffix": "\u0000",
        "pump": [
          ",&"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "The physical processor has (?:([\\d]+) virtual processor \\(([\\d]+)\\)|([\\d]+) cores and ([\\d]+) virtual processors[^\\n]+)\\n(?:\\s+ The core has.+\\n)*\\s+.+ \\((\\w+) ([\\S]+) family (.+) model (.+) step (.+) clock (.+) MHz\\)\\n[\\s]*(.*)",
    "inputs": [
      {
        "prefix": [
          "The physical processor has 0 virtual processor (0)\\x0a"
        ],
        "suffix": "",
        "pump": [
          "    The core has!\\x0a\\x0a The core has\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "The physical processor has 0 virtual processor (0)\n"
        ],
        "suffix": "\t The",
        "pump": [
          "\t The core hasa\n\n\t The core hasa\n"
        ]
      },
      {
        "prefix": [
          "The physical processor has 0 virtual processor (0)\\x0a"
        ],
        "suffix": "",
        "pump": [
          "    The core has!\\x0a\\x0a The core has\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "The physical processor has 0 virtual processor (0)\n"
        ],
        "suffix": "\t\t (a  a family  \t model   step  ste",
        "pump": [
          "\t The core hasa\n\n\t The core hasa\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\% alert (.*) \\%\\}((.|\\n)*)\\{\\% endalert \\%\\}",
    "inputs": [
      {
        "prefix": [
          "{% alert  %}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{% alert  %}"
        ],
        "suffix": "endalert",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "{% alert  %}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{% alert  %}"
        ],
        "suffix": "endal",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^\\$]*\\$(\\w+)+",
    "inputs": [
      {
        "prefix": [
          "$a"
        ],
        "suffix": "\u0000$\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "\u0000$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "https?:\\/\\/([-\\w\\.]+)+(:\\d+)?(\\/([\\w\\/_\\.]*(\\?\\S+)?)?)?",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps:\thtt",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\"([^\\\"]|.)*\\\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "f\""
        ],
        "suffix": " uR@ uR@fK(k|J~Xv",
        "pump": [
          " uR@"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "6#I96#I9VRZ0s?@lK/",
        "pump": [
          "6#I9"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`([a-z][-a-z]*[a-z])+`",
    "inputs": [
      {
        "prefix": [
          "`aa"
        ],
        "suffix": "",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "``",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "`aaa"
        ],
        "suffix": "",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "czbtteczbttebdnoihdulkmnyj",
        "pump": [
          "czbtte"
        ]
      },
      {
        "prefix": [
          "`aa"
        ],
        "suffix": "",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "-",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "`aaaa"
        ],
        "suffix": "",
        "pump": [
          "aaa"
        ]
      },
      {
        "prefix": [
          "a`"
        ],
        "suffix": "ahbyihahbyihsjnfnjomajqcat",
        "pump": [
          "ahbyih"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z][a-z0-9_]*\\\\?)+$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaiiaaiilvnzerwudx=",
        "pump": [
          "aaii"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\da-zA-Z](\\-?\\w+)*\\.)*[\\da-zA-Z](\\-?\\w+)*\\.?",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "dzAqdzAqtNmHBOLpssV",
        "pump": [
          "dzAq"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000d"
        ]
      },
      {
        "prefix": [
          "U-"
        ],
        "suffix": "IWUCIWUCZgSFO3_F9z",
        "pump": [
          "IWUC"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^msgctxt \"(((\\\\.)|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "msgctxt \""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "msgctxt \""
        ],
        "suffix": "t \"\"c",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Servidores de nombre \\(Domain servers\\):\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Servidores de nombre (Domain servers):\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Servidores de nombre (Domain servers):\n"
        ],
        "suffix": "e nom",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Servidores de nombre (Domain servers):\\x0aS\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Servidores de nombre (Domain servers):\n"
        ],
        "suffix": " (Do",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/([^\\?]*))?(\\?(.+))*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "?a?a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "?a?a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/)((?:\\\\.|.)*?)(/)",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "/."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "/."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(=\\s*)(?:\"(?:\\\\?.)*?\"|[^)\\s]+)",
    "inputs": [
      {
        "prefix": [
          "=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "=\""
        ],
        "suffix": "=\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "=\""
        ],
        "suffix": "*\\*\\\\U\\\\*\\*\\\\U\\\\*\\?sWUus\\?sWUuW1cD3Ft\\?*\\?sWUuW1cmknxv97=s\\*=s\\\\*=",
        "pump": [
          "*\\*\\\\U\\\\"
        ]
      },
      {
        "prefix": [
          "=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "=\""
        ],
        "suffix": "\"\t",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "@a-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "yNkAyNkAIuZJGJu2fl",
        "pump": [
          "yNkA"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "@$a-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "oKjboKjb8Y8lQ0EqJl",
        "pump": [
          "oKjb"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "OSwdOSwdoJL06UpusX",
        "pump": [
          "OSwd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\s;]*?(\\s*\\/\\/.*\\s*|\\s*\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "/***//*//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t/",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "/***//*//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          "//."
        ],
        "suffix": "//*// //*//  \r \t\r\t\t \r\t \r\t  \r \t\t\n\r\t \n \n\t\r  \n  \r\r\t\t \t\n/",
        "pump": [
          "//*// "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\\\\(]+|\\\\[^\\d])+)|(\\\\\\d+)|(\\(\\??)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\((",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\0a\\",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/\\.CommonJS(?:.|\\n)*?\\/\\/\\/CommonJS",
    "inputs": [
      {
        "prefix": [
          "//.CommonJS"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "//.CommonJS"
        ],
        "suffix": "m",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "//.CommonJS"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "//.CommonJS"
        ],
        "suffix": "Co",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.?)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$",
    "inputs": [
      {
        "prefix": [
          "https://0"
        ],
        "suffix": "",
        "pump": [
          "0a0"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "ps://0",
        "pump": [
          "aaa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "2ceo2ceogmkdcn.",
        "pump": [
          "2ceo"
        ]
      },
      {
        "prefix": [
          "https://0"
        ],
        "suffix": "",
        "pump": [
          "0a0"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "ps://0.0.0",
        "pump": [
          "aaa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "httphttphttps?htt?",
        "pump": [
          "http"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\/\\/.*\\n)*( *)if *\\(typeof +define[\\s\\S]+?else ",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e",
        "pump": [
          " //\n//\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pe",
        "pump": [
          " //\n//\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\$\\$?|\\\\(?:begin|end)\\{[a-z]*\\*?\\}|\\\\[{}$]|[{}]|(?:\\n\\s*)+|@@\\d+@@|\\\\\\\\(?:\\(|\\)|\\[|\\]))",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "eg",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n>.*?)+(\\n[^>].*?)+(\\n>.*?)+",
    "inputs": [
      {
        "prefix": [
          "\\x0a>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a>\\x0a>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n>\n>"
        ]
      },
      {
        "prefix": [
          "\\x0a>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a>\\x0a>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n>\n>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Current Nameservers:\\n\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Current Nameservers:\\x0a\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Current Nameservers:\n\n"
        ],
        "suffix": "s:",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Current Nameservers:\\x0a\\x0aC\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Current Nameservers:\n\n"
        ],
        "suffix": "m",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(crop)(-top-left|-top|-top-right|-left|-center|-right|-bottom-left|-bottom|-bottom-right|-[\\d]{1,3}-[\\d]{1,3})*$",
    "inputs": [
      {
        "prefix": [
          "crop"
        ],
        "suffix": "!",
        "pump": [
          "-bottom-right"
        ]
      },
      {
        "prefix": [
          "crop"
        ],
        "suffix": "eft-00",
        "pump": [
          "-top-left"
        ]
      },
      {
        "prefix": [
          "crop-top-right"
        ],
        "suffix": "\u0000",
        "pump": [
          "-top-left-top-right"
        ]
      },
      {
        "prefix": [
          "crop"
        ],
        "suffix": "!",
        "pump": [
          "-bottom-right"
        ]
      },
      {
        "prefix": [
          "crop"
        ],
        "suffix": "eft-",
        "pump": [
          "-top-left"
        ]
      },
      {
        "prefix": [
          "crop-left"
        ],
        "suffix": "\u0000",
        "pump": [
          "-top-left-left"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:runtime:.*\\n)*.*(?:panic: |fatal error: )(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "runtime:\\x0aruntime:\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "runtime:\nru",
        "pump": [
          "runtime:\nruntime:\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(朋友圈|点赞)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "赞点a朋友",
        "pump": [
          "朋"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*Re:\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "e:R:",
        "pump": [
          "\tRe:\t"
        ]
      },
      {
        "prefix": [
          "Re:Re:"
        ],
        "suffix": "\u0000",
        "pump": [
          "sRe:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Violation of (?:UNIQUE|PRIMARY) KEY constraint '((.|\\s)*)'. Cannot insert duplicate key in object '.*'.(:? The duplicate key value is \\((.*)\\).)?",
    "inputs": [
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint '"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint '"
        ],
        "suffix": "Y ",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint 's"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint ' The duplica key"
        ],
        "suffix": " val is (  val is ( The duplica key value",
        "pump": [
          " val is ( "
        ]
      },
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint '"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint '"
        ],
        "suffix": "n o",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "Violation of UNIQUE KEY constraint '\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "'Violation of PRIMARY KEY constraint ' Cannot inse duplic"
        ],
        "suffix": "a k in obje a k in obje '.* Cann insert dupl",
        "pump": [
          "a k in obje "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\\\"\\'\\r\\n\\)\\s])+)",
    "inputs": [
      {
        "prefix": [
          "URL("
        ],
        "suffix": "a\"",
        "pump": [
          "\\$\\$"
        ]
      },
      {
        "prefix": [
          "URL("
        ],
        "suffix": "(\\URLaU\tUR",
        "pump": [
          "\\$\\$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?((\\d+)?[\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "blazer\ta"
        ],
        "suffix": "h0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "blazer.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "blazer\ta"
        ],
        "suffix": "l$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "blazer.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:''|[^']+)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a'a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "w'"
        ],
        "suffix": "&>=,&>=,kqi_1 M#Y*<",
        "pump": [
          "&>=,"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "3'"
        ],
        "suffix": "PCW0PCW0tgP\nx;\r[aj",
        "pump": [
          "PCW0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:[[:alnum:]]+|:vendor)\\\\?)+$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "dorr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":?m"
        ],
        "suffix": "",
        "pump": [
          ":?m"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":::n:::n:::::::::\\!",
        "pump": [
          ":::n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\d+.\\d+|\\d+)(TB|GB|MB|KB|B)\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "T",
        "pump": [
          "0a0KB0B0KB"
        ]
      },
      {
        "prefix": [
          "dBdBs"
        ],
        "suffix": "\u0000",
        "pump": [
          "dBdBs"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "T",
        "pump": [
          "0a0KB0B0KB"
        ]
      },
      {
        "prefix": [
          "dBd"
        ],
        "suffix": "",
        "pump": [
          "dddBd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title class=\"klass\">Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "m",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "e</tit",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{((?:.|\\n)+?)\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{"
        ],
        "suffix": "{",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "{{|"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{"
        ],
        "suffix": "}{a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{((\\w+)(?::((?:\\\\.|[^}])+))?)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\'(\\\\.|[^\\'])*\\'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "']\\;\\<\\|\\~\\|\\~["
        ],
        "suffix": "\\)\\|\\\\\\)\\|\\\\~\\|\\~[",
        "pump": [
          "\\)\\|\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\/\\/.*\\n)*(\\s*)' *<%.+?useStrict.+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " //\n'<%a",
        "pump": [
          " //\n//\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " //\n'<%a\nuseStr",
        "pump": [
          " //\n//\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\w+\\((?:\\-?[0-9]+(?:\\.[0-9]*)?\\w*\\s*)?(?:\\s*,\\s*\\-?\\s*[0-9]*(?:\\.[0-9]+)?\\w*\\s*)*\\)",
    "inputs": [
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          ",\\x09,"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "(\t",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          "w,s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,s"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          ",\\x09,"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "\t-0\t",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          "w,s"
        ],
        "suffix": "\u0000",
        "pump": [
          "00,s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\w+[^<>]+(?:<%.*?%>[^<>]*)+",
    "inputs": [
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "<aa",
        "pump": [
          "<%%><%%>"
        ]
      },
      {
        "prefix": [
          "<w\u0000<%%><%\u0000"
        ],
        "suffix": "",
        "pump": [
          "%><%\u0000"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "a>%<a",
        "pump": [
          "<%%><%%>"
        ]
      },
      {
        "prefix": [
          "<w\u0000<%%><%"
        ],
        "suffix": "",
        "pump": [
          "%><%%><%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[0\\]drawtext=text=a((.|\\n)*)b\\[s0\\]",
    "inputs": [
      {
        "prefix": [
          "[0]drawtext=text=a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[0]drawtext=text=a"
        ],
        "suffix": "=te",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "[0]drawtext=text=a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[0]drawtext=text=a"
        ],
        "suffix": "=t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\s\\n]*<align right><\\/align>[\\s\\n]*){2,}",
    "inputs": [
      {
        "prefix": [
          "<align right></align>"
        ],
        "suffix": "alig",
        "pump": [
          "\t<align right></align>\t"
        ]
      },
      {
        "prefix": [
          "<align right></align>"
        ],
        "suffix": " r<a",
        "pump": [
          "\t<align right></align>\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "n",
        "pump": [
          "\t<align right></align>\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Involved parties:\\n\\n(((.+\\n){8}\\n|(.+\\n){2}\\n)*)",
    "inputs": [
      {
        "prefix": [
          "Involved parties:\n\n"
        ],
        "suffix": "p",
        "pump": [
          "a\na\na\na\na\na\na\na\n\n"
        ]
      },
      {
        "prefix": [
          "Involved parties:\n\n"
        ],
        "suffix": "nv",
        "pump": [
          "a\na\na\na\na\na\na\na\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(ï¼|ã|ï¼|ï¼|\\s)+",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?",
    "inputs": [
      {
        "prefix": [
          " \"!"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\t\""
        ],
        "suffix": "\t)a'\\",
        "pump": [
          "a\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<pre>(<code class=\"php\">((.*\\n)*?).*\\</code></pre>)",
    "inputs": [
      {
        "prefix": [
          "<pre><code class=\"php\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<pre><code class=\"php\">"
        ],
        "suffix": "<pre>",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "<pre><code class=\"php\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<pre><code class=\"php\">"
        ],
        "suffix": "></pre",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title class=\"klass\"><\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "klass",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "e class",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[\\n\\r]|.)*)(<meta name=\\\"generator\\\" content=\\\"JSDoc 3.*)((?:[\\n\\r]|.)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n<meta name=",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n<meta name=\"genera",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "<meta name=\"generator\" content=\"JSDoc 3\r"
        ],
        "suffix": "",
        "pump": [
          "\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)='((?:\\\\'|.)*?)'",
    "inputs": [
      {
        "prefix": [
          "a='"
        ],
        "suffix": "=\\'a",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "w=''"
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "a='"
        ],
        "suffix": "=\\'$",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "w='\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*?<H2>(<a.*a>)*[\\d\\.\\s]*(.*?)</H2>",
    "inputs": [
      {
        "prefix": [
          "<H2>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H2>"
        ],
        "suffix": "<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H2><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      },
      {
        "prefix": [
          "<H2>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H2>"
        ],
        "suffix": "2<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H2><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":container\\((?:[^()]+|\\([^()]*\\))+\\)",
    "inputs": [
      {
        "prefix": [
          ":container(!"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          ":container(a"
        ],
        "suffix": "t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":container("
        ],
        "suffix": " {>G {>G\t-JVc\t'g:q",
        "pump": [
          " {>G"
        ]
      },
      {
        "prefix": [
          ":container(;"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          ":container(a"
        ],
        "suffix": "era(:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "N:container("
        ],
        "suffix": "HONwHONw3R\r9=D[|o$",
        "pump": [
          "HONw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":'(\\\\\\\\|\\\\'|[^'])*'",
    "inputs": [
      {
        "prefix": [
          ":'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          ":'"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          ":''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          ":'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          ":'"
        ],
        "suffix": "a\\':",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          ":'\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      },
      {
        "prefix": [
          ":'z\\\\z\\\\e"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\RgRwpgVi5XEDCXFDMJ\\\\\\\\RgRw",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\"{3}|<nowiki>)((?:.|\\n)*?)(?:\\\"{3}|<\\/nowiki>)",
    "inputs": [
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "i><\"",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " (?:\\S*<%(?:[^%>]|\\\\.)*%>\\S*) | (?:\"(?:[^\\\\\"]|\\\\.)*\") | (?:'(?:[^\\\\']|\\\\.)*') | \\S+ ",
    "inputs": [
      {
        "prefix": [
          " <%"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " <%"
        ],
        "suffix": "\\\" ><\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          " \"."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          " <%"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " <%"
        ],
        "suffix": "\\'\t a\\<\"  a<'  %",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          " <%."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<p>([\\n\\r\\s]*(&nbsp;)[\\n\\r\\s]*)+<\\/p>",
    "inputs": [
      {
        "prefix": [
          "<p>&nbsp;"
        ],
        "suffix": "",
        "pump": [
          "&nbsp;\\x09&nbsp;"
        ]
      },
      {
        "prefix": [
          "<p>"
        ],
        "suffix": "</p",
        "pump": [
          "\t&nbsp;\t"
        ]
      },
      {
        "prefix": [
          "n<p>"
        ],
        "suffix": "&nbsp;\r\r\r\t\t\n\n \r\r&nbsp;\r\r\r\t\t\n\n \r\r\t&nbsp;\r\r\r\r\t\n\n  \n \t\r\r\t\r \r\t\t\n\n \r&nbsp;\r\r\r\r\t\n\n  ",
        "pump": [
          "&nbsp;\r\r\r\t\t\n\n \r\r"
        ]
      },
      {
        "prefix": [
          "<p>&nbsp;"
        ],
        "suffix": "",
        "pump": [
          "&nbsp;\\x09&nbsp;"
        ]
      },
      {
        "prefix": [
          "<p>"
        ],
        "suffix": "<",
        "pump": [
          "\t&nbsp;\t"
        ]
      },
      {
        "prefix": [
          "<p>&nbsp;"
        ],
        "suffix": "\t&nbsp;\t \n \r\n\t\n\r\t&nbsp;\t \n \r\n\t\n\r\r\n\n&nbsp;\t \n \r\n\t\n\r\r\n\n\n\t\r \n\n\n\r \r\t\r\t\r\t\t\r\t\r \n\n\t\r \n\r\r\n",
        "pump": [
          "\t&nbsp;\t \n \r\n\t\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "name-59\\.99(?:.|\\n|\\r)*bg-danger(?:.|\\n|\\r)*text-danger(?:.|\\n|\\r)*59\\.99(?:.|\\n|\\r)*<th class=\"text-center\">5<\\/th><\\/tr>",
    "inputs": [
      {
        "prefix": [
          "name-59.99"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-59.99"
        ],
        "suffix": "xt-da",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "name-59.99"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-59.99"
        ],
        "suffix": "xt",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\{\\{([#=!>|{\\/])?\\s*((?:(?:\"[^\"]*\")|(?:'[^']*')|[^\\}])*)\\s*(\\/?)\\}?\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{"
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "{{!"
        ],
        "suffix": "}}\"}",
        "pump": [
          "\"\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ";(\\\\.|.)*?\\n",
    "inputs": [
      {
        "prefix": [
          ";"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": ";",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ";."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ";\\<+;##'#@|)<;|/`..{;"
        ],
        "suffix": ";\\}\\_\\$;#;}?>\\;\\}\\_\\$;#;}?>\\[\\,*-\\:]n}#+,`:[%!|+@\\\\)(-",
        "pump": [
          ";\\}\\_\\$;#;}?>\\"
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": ";",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ";."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": ";\\  3*.\\487.?\\*2*\\;\\  3*.\\487.?\\*2*\\487.?)*\\*2*60\\?.n\\9((;3?.^.2785?5.52)9\\*?\\)5()",
        "pump": [
          ";\\  3*.\\487.?\\*2*\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s*<[^>]+>\\s*)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a>>",
        "pump": [
          "\t<a>\t"
        ]
      },
      {
        "prefix": [
          "<\u0000><\u0000>s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<\u0000>s"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a>a",
        "pump": [
          "\t<a>\t"
        ]
      },
      {
        "prefix": [
          "<\u0000><\u0000>"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<\u0000>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\-A-Za-z0-9:_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "\ta'\\a>\\a\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\\\\\\-A-Za='\\)\\nn8k_\\xSCW\tl^M"
        ],
        "suffix": ")\\2c\\\\-A-k_\\)\\2c\\\\-A-k_\\xSCW\tl^M))W:.2`\\2c\\\\-A-Za--Za-z0-9",
        "pump": [
          ")\\2c\\\\-A-k_\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*)((\\s*typedef\\s*.*?;)+)\\s*$",
    "inputs": [
      {
        "prefix": [
          "typedef;"
        ],
        "suffix": "u",
        "pump": [
          " typedef;typedef;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ede",
        "pump": [
          "\ttypedef\t;"
        ]
      },
      {
        "prefix": [
          "typedef;typedef"
        ],
        "suffix": "",
        "pump": [
          "s;typedef"
        ]
      },
      {
        "prefix": [
          "typedef;"
        ],
        "suffix": "u",
        "pump": [
          " typedef;typedef;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ype",
        "pump": [
          "\ttypedef\t;"
        ]
      },
      {
        "prefix": [
          "typedef;typedef"
        ],
        "suffix": "",
        "pump": [
          "s;typedef"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([\\-A-Za-z0-9_]+)((?:\\s+[a-zA-Z0-9_\\-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|(?:[^>\\s]+)))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s-0"
        ],
        "suffix": "",
        "pump": [
          "s=\u0000s-0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "bbs.hupu.com/(\\d+)+?[\\-\\d]*.html",
    "inputs": [
      {
        "prefix": [
          "bbs!hupu!com/0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "bbsahupuacom/0"
        ],
        "suffix": "b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "bbs\u0000hupu\u0000com/dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "bbbs.hupu.com/"
        ],
        "suffix": "00200020022002022",
        "pump": [
          "0020"
        ]
      },
      {
        "prefix": [
          "bbsbhupubcom/0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "bbsahupuacom/0"
        ],
        "suffix": "0-",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "bbs\u0000hupu\u0000com/dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "cbbs.hupu.com/"
        ],
        "suffix": "40624062216016034",
        "pump": [
          "4062"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\{\\},\\n]|, *\\n?)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n",
        "pump": [
          ", a"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "{",
        "pump": [
          " ,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n",
        "pump": [
          "a, "
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "{",
        "pump": [
          " ,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z]+)+([0-9]+)+$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "dzpvdzpvpkvvxjkuvk",
        "pump": [
          "dzpv"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\@.*\\@)*\\t",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t@",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "",
        "pump": [
          "@@@@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/nifi-api/policies/(?:read|write)/(?:[\\w-]+?/?)+",
    "inputs": [
      {
        "prefix": [
          "/nifi-api/policies/read/a"
        ],
        "suffix": "pi//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/nifi-api/policies/read/-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "/nifi-api/policies/read/a"
        ],
        "suffix": "-a//nifi-api/policies/write/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/nifi-api/policies/read/---"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\n+)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\s)*(.+\\@.+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\ta\t@",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+)+\\.(\\d+)\\.(\\d+)\\.(\\d+)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "000000000000000000",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\!|,|;|[a-z][0-9a-zA-Z_]*|[#\\$\\&\\*\\+\\-\\.\\/\\:\\<\\=\\>\\?\\@\\^\\~\\\\]+|'(?:[^']*?(?:\\\\(?:x?\\d+)?\\\\)*(?:'')*(?:\\\\')*)*')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\$'$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "90ro90rozaiR?\bk\r",
        "pump": [
          "90ro"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([A-Za-z_$0-9\\['\\.\"\\]]+)*\\s*\\(\\s*(([A-Za-z_$0-9\\['\\.\"\\]]+)?(\\s*,\\s*([A-Za-z_$0-9\\['\\.\"\\]]+))*)\\s*\\)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ".\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "(,,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ok1IOk1I'[tn5PGIrt",
        "pump": [
          "Ok1I"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *[^ ]+ +\\'(\\\\.|[^\\'])*\\' *$",
    "inputs": [
      {
        "prefix": [
          "\\x00 '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a '"
        ],
        "suffix": " \\' \\'a''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000 '."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\\x00 '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a '"
        ],
        "suffix": " \\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000 '\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\$\\#])\\s+(((.+)\\n){1,})",
    "inputs": [
      {
        "prefix": [
          "$\t"
        ],
        "suffix": "$\t",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "$\t"
        ],
        "suffix": "$",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\begin{proof}((.|\\n)*?)\\\\end{proof}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^From: (.*(?:\\r?\\n\\s+.*)*\\r?\\n)",
    "inputs": [
      {
        "prefix": [
          "From: "
        ],
        "suffix": "\t",
        "pump": [
          "\r\n\t\r\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*foo-template",
    "inputs": [
      {
        "prefix": [
          "Views!Foo = Backbone!View!extend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "nef",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "ViewsVFoo = BackboneVViewsextend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "mpla",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<(\\/?)#(.*?(?:\\(.*?\\))*)>)|(')|([\\r\\n\\t])|(\\$\\{([^\\}]*?)\\})",
    "inputs": [
      {
        "prefix": [
          "<#"
        ],
        "suffix": "",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "</#"
        ],
        "suffix": "</",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "<#"
        ],
        "suffix": "",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "</#"
        ],
        "suffix": "{}(<",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<img(.|\\\\n)*?>",
    "inputs": [
      {
        "prefix": [
          "<img"
        ],
        "suffix": "",
        "pump": [
          "\\n"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "i",
        "pump": [
          "\\n"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "",
        "pump": [
          "\\n"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "im<\\",
        "pump": [
          "\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([_a-zA-Z]\\w*)*:",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "wa"
        ]
      },
      {
        "prefix": [
          "K6"
        ],
        "suffix": "lmzElmzENaXCZJnAc",
        "pump": [
          "lmzE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(\\r\\n|\\r|\\n)+\\s*--)",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\n-\t",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\r\r\n\r"
        ],
        "suffix": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\r\n\r\n\r\n",
        "pump": [
          "\r\n\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\d+\\.?)+)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:[^\\s:/?#]+)://|www\\.)(?:[^\\s/?#]+\\.)*(?:[A-Za-z0-9][^\\s/?#]*\\.[A-Za-z]{2,6})(?:/[^\\s#\\?]+)?/?(?:\\?[^\\s#]*)?(?:#[^\\s]*)?",
    "inputs": [
      {
        "prefix": [
          "www."
        ],
        "suffix": "",
        "pump": [
          "{..."
        ]
      },
      {
        "prefix": [
          "www."
        ],
        "suffix": "\t",
        "pump": [
          "a.a."
        ]
      },
      {
        "prefix": [
          "www."
        ],
        "suffix": "",
        "pump": [
          "{..."
        ]
      },
      {
        "prefix": [
          "www."
        ],
        "suffix": "a\tww://$",
        "pump": [
          "a.a."
        ]
      },
      {
        "prefix": [
          "www."
        ],
        "suffix": "",
        "pump": [
          "{..."
        ]
      },
      {
        "prefix": [
          "www."
        ],
        "suffix": "\t",
        "pump": [
          "a.a."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s+)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a\\x09"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0b\\x0a\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\t\n\t"
        ]
      },
      {
        "prefix": [
          "b\n\t\n\t\r"
        ],
        "suffix": "\n\t\n \n\n\n\t\n \n\n\n\n\r\n\t\n\n\t\n\r \n\t t",
        "pump": [
          "\n\t\n \n\n"
        ]
      },
      {
        "prefix": [
          "\\x0a\\x0b"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0b\\x0a\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\n",
        "pump": [
          "\n\t\n\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\r\t\n\r\r\n\n\n\r\t\n\r\r\r \r \r\n\n\r \n \n\r\r\r\r \r\n\n\r   \r  \r\n \n\r\r \r\r\t\t\n\t \t\r\t\rW",
        "pump": [
          "\n\n\n\r\t\n\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:open)?solaris)[\\/\\s-]?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "solaris\ta"
        ],
        "suffix": "ar\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "solaris."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "solaris\ta"
        ],
        "suffix": "is\t$sola",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "solaris."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<img ((.|\\n|\\r\\n)*?)>",
    "inputs": [
      {
        "prefix": [
          "<img "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<img "
        ],
        "suffix": "i",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<img "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<img "
        ],
        "suffix": "i",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*(.|\\n|\\r)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]+:(?:%[a-fA-F0-9]{2}|[-\\w.~:/?#\\[\\]\\@!$&'()*+,;=]+)+$",
    "inputs": [
      {
        "prefix": [
          "a:&"
        ],
        "suffix": "\\x00",
        "pump": [
          "&!"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "g:0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:aaa:aa::aa:aa::aa:%",
        "pump": [
          "a:aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".+(\\..+)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Returns:\\*\\*((.|[\\n\\r])+?)\\n\\n",
    "inputs": [
      {
        "prefix": [
          "Returns:**!"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "Returns:**"
        ],
        "suffix": "ur\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Returns:**S"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "Returns:**"
        ],
        "suffix": "e",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*(.|[\\r\\n])*?\\*/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^\\r\\n]|[\\r\\n]+[^\\r\\n]|[~]{3,5})*?)((?:\\r?\\n)*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x0d",
        "pump": [
          "~~~~"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\r",
        "pump": [
          "a~~~"
        ]
      },
      {
        "prefix": [
          "~~~"
        ],
        "suffix": "\r",
        "pump": [
          "~~~~~~"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "~~~~~~~~~~~~~~<=|><;\bCeGk=~~~TTODLBJETCeG~~~<=JF\r\r",
        "pump": [
          "~~~~"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x0d",
        "pump": [
          "~"
        ]
      },
      {
        "prefix": [
          "~"
        ],
        "suffix": "\r\r",
        "pump": [
          "~~"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "\r",
        "pump": [
          "~\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\S* )*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Cluster(.|\\n)*topology=(.|\\n)*servers=",
    "inputs": [
      {
        "prefix": [
          "Cluster"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "Cluster"
        ],
        "suffix": "er\nts",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "Cluster"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "Cluster"
        ],
        "suffix": "p",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(\\*(?:\\(\\*[\\w\\W]*?\\*\\)|[\\w\\W])*?\\*\\)",
    "inputs": [
      {
        "prefix": [
          "(*"
        ],
        "suffix": "(a*(",
        "pump": [
          "(**)"
        ]
      },
      {
        "prefix": [
          "(*"
        ],
        "suffix": ")(a*",
        "pump": [
          "(**)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^SELECT.*?FROM\\s*((?:`?\\w+`?\\s*\\.\\s*)?`?\\w+`?(?:(?:\\s*AS)?\\s*`?\\w+`?)?(?:\\s*,\\s*(?:`?\\w+`?\\s*\\.\\s*)?`?\\w+`?(?:(?:\\s*AS)?\\s*`?\\w+`?)?)*)",
    "inputs": [
      {
        "prefix": [
          "SELECTFROM`a`"
        ],
        "suffix": "\tFA,`FaA`\tAS\t",
        "pump": [
          "\t,aASa"
        ]
      },
      {
        "prefix": [
          "SELECTFROMw,ws"
        ],
        "suffix": "",
        "pump": [
          "s`w,ws"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)\\%\\{time(:[^\\}]+)*\\}(.*)",
    "inputs": [
      {
        "prefix": [
          "%{time"
        ],
        "suffix": "",
        "pump": [
          ":&:;"
        ]
      },
      {
        "prefix": [
          "%{time"
        ],
        "suffix": "a",
        "pump": [
          ":a:a"
        ]
      },
      {
        "prefix": [
          "%{time"
        ],
        "suffix": "",
        "pump": [
          ":&:;"
        ]
      },
      {
        "prefix": [
          "%{time"
        ],
        "suffix": "a",
        "pump": [
          ":a:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\[((?:[^\\]]|\\]|\\[)+?)\\]:\\s*(.+)$",
    "inputs": [
      {
        "prefix": [
          "[\\"
        ],
        "suffix": "",
        "pump": [
          "["
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]",
        "pump": [
          "a["
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[[[[[[[[\n \t\r[[[[\n \t\r\r \r\r \n4417[[[[ \t",
        "pump": [
          "[[[["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Push the sum onto the return stack *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e re",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2.YR2.YRW\b#W.@80T_",
        "pump": [
          "2.YR"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Version ((?:\\d+.)+\\d+)",
    "inputs": [
      {
        "prefix": [
          "Version "
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version d\u0000dd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "Version "
        ],
        "suffix": "ion",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version d\u0000d"
        ],
        "suffix": "",
        "pump": [
          "dd\u0000d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z0-9]+[\\w\\-]*([\\.]?[a-zA-Z0-9]+[\\w\\-]*)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "rY2JrY2JAsfpa7\"",
        "pump": [
          "rY2J"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[???????????????????????????]+[??]?)+",
    "inputs": [
      {
        "prefix": [
          "?"
        ],
        "suffix": "#",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          "???"
        ],
        "suffix": "\u0000",
        "pump": [
          "???"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "a",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          "??"
        ],
        "suffix": "\u0000",
        "pump": [
          "??"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Nameservers:\\s((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Nameservers: !\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Nameservers:\t"
        ],
        "suffix": "N",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Nameservers: N\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Nameservers:\t"
        ],
        "suffix": "m",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[-+]?(\\d*,\\d*)+(?:\\.)?\\d*$",
    "inputs": [
      {
        "prefix": [
          ","
        ],
        "suffix": "!",
        "pump": [
          ",0,"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "++",
        "pump": [
          "0,0"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "d,"
        ]
      },
      {
        "prefix": [
          ",,2,,2460145,"
        ],
        "suffix": ",00,84,00,84,,4601456400318'",
        "pump": [
          ",00,84"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test5Module(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "mpo",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "iimports: [t [imports: [im"
        ],
        "suffix": " [ :stropm :s  [ :stropm :s :stropm TMm :stropmi[ :stest5Modu",
        "pump": [
          " [ :stropm :s "
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "you passed(.|\\n)*?the api calls for(.|\\n)*?object",
    "inputs": [
      {
        "prefix": [
          "you passed"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "you passed"
        ],
        "suffix": " ca",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "you passed"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "you passed"
        ],
        "suffix": "obj",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\\\?\\[[^\\[]+?\\]\\\\?)+\\s+)?",
    "inputs": [
      {
        "prefix": [
          "\\[\\]"
        ],
        "suffix": "",
        "pump": [
          "\\[\\]\\[!]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a]\\",
        "pump": [
          "\\[a]\\[a]"
        ]
      },
      {
        "prefix": [
          "[\\\\]\\[\\"
        ],
        "suffix": "\\]\\[\\\\]\\[\\\\]\\[\\]\\[\\]\\[\\\\]\\[\\\\]\\[\\]\\[\\\\]\\[\\\\]]\\[(?]\\[\\\\]\\\\]\\[(?\n?]\\[\\\\?\\]\\[\\",
        "pump": [
          "\\]\\[\\\\]\\[\\\\]\\[\\]\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(b[^t]+)*b[bqeh]+t[et]*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "brbr"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "etb",
        "pump": [
          "baba"
        ]
      },
      {
        "prefix": [
          "b\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "b\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "bbbb1cbCbd"
        ],
        "suffix": "bBb6bbbBb6bbbb[h[\r +*]\nb(]*]+\r ]qe^h",
        "pump": [
          "bBb6bb"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([^:]+:.*?\\n)*)(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ":",
        "pump": [
          "a:\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(http|https|ftp|ftps)\\:\\/\\/([a-zA-Z0-9\\-\\.]+\\.)+[a-zA-Z]{2,3}(\\/\\S*)?",
    "inputs": [
      {
        "prefix": [
          "http://a."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "\t",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "ftp://-\u0000-A"
        ],
        "suffix": "",
        "pump": [
          "a-A"
        ]
      },
      {
        "prefix": [
          "http://h."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "s:\thttps://http",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "ftp://-\u0000a"
        ],
        "suffix": "",
        "pump": [
          "a-\u0000a"
        ]
      },
      {
        "prefix": [
          "http://a."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "\t",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "ftp://-\u0000A"
        ],
        "suffix": "",
        "pump": [
          "a-\u0000A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w-]+)::([\\w\\(\\)\\=]+|\\*)(\\[.*?\\])*$",
    "inputs": [
      {
        "prefix": [
          "a::*"
        ],
        "suffix": "^",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "a::*"
        ],
        "suffix": "a:",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "a::*"
        ],
        "suffix": "^",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "a::*"
        ],
        "suffix": "($",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$",
    "inputs": [
      {
        "prefix": [
          "$F:a?a,"
        ],
        "suffix": "",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "$F:a?a,|"
        ],
        "suffix": "#a$a|#a@a=",
        "pump": [
          "a||"
        ]
      },
      {
        "prefix": [
          "$F:Zi?lT,"
        ],
        "suffix": "T^LcT^Lc?lKiHI/am<T",
        "pump": [
          "T^Lc"
        ]
      },
      {
        "prefix": [
          "$F:a?a,"
        ],
        "suffix": "",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "$F:a?a,|"
        ],
        "suffix": "-",
        "pump": [
          "a||"
        ]
      },
      {
        "prefix": [
          "$F:F?F,"
        ],
        "suffix": "vahlvahldmylqdbo",
        "pump": [
          "vahl"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "name-70\\.01(?:.|\\n|\\r)*bg-success(?:.|\\n|\\r)*text-success(?:.|\\n|\\r)*70\\.01(?:.|\\n|\\r)*<th class=\"text-center\">0<\\/th><\\/tr>",
    "inputs": [
      {
        "prefix": [
          "name-70.01"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-70.01"
        ],
        "suffix": "te",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "name-70.01"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-70.01"
        ],
        "suffix": "g-succes",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "({.*})+",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\r\\n?|\\n\\r?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a|(((.*)*)*x)ă|(((.*)*)*x)Ā)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ăx",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "::dq::dq+D",
        "pump": [
          "::dq"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ăx",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "~iJ4~iJ4Ef",
        "pump": [
          "~iJ4"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "function\\s*\\((\\w+,\\s*\\w+,\\s*\\w+)\\)\\s*\\{(\\n?\\s*\\\"use strict\\\";?)*\\n?\\/\\*\\s*\\@preserve ASM BEGIN",
    "inputs": [
      {
        "prefix": [
          "function(a,a,a){"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\"use strict\""
        ]
      },
      {
        "prefix": [
          "function(a,a,a){"
        ],
        "suffix": "E",
        "pump": [
          "\n\"use strict\";"
        ]
      },
      {
        "prefix": [
          "function(function_,function_,function_){"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\"use strict\""
        ]
      },
      {
        "prefix": [
          "function(a,a,a){"
        ],
        "suffix": "\"",
        "pump": [
          "\n\"use strict\";"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*\\*([\\_A-z0-9]*)\\*(\\d*)\\*(\\d*)\\*([\\_A-z][A-z0-9])*\\*([\\_A-z][A-z0-9]*)*(\\,[\\_A-z][A-z0-9]*)*\\*(([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*)*\\*((?:[a-zA-Z]\\:){0,1}(?:[\\/]*[\\w.]+){1,})*\\*(([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*)*)$",
    "inputs": [
      {
        "prefix": [
          "a*****"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a*******a"
        ],
        "suffix": "00*_0*a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa*\\**"
        ],
        "suffix": "**NPXEVLASNRAGTZ",
        "pump": [
          "**NP"
        ]
      },
      {
        "prefix": [
          "a*****"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a*******a"
        ],
        "suffix": "00*_[***a",
        "pump": [
          "/aa"
        ]
      },
      {
        "prefix": [
          "aa*\\****\\**"
        ],
        "suffix": "3F1d3F1dAeeFE",
        "pump": [
          "3F1d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<p class=\"(.*)+indent\">)",
    "inputs": [
      {
        "prefix": [
          "<p class=\""
        ],
        "suffix": "",
        "pump": [
          "j"
        ]
      },
      {
        "prefix": [
          "<p class=\""
        ],
        "suffix": "s",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<p cla"
        ],
        "suffix": "ss=\"ss=\"}CFZi*R6p7Lpo(",
        "pump": [
          "ss=\""
        ]
      },
      {
        "prefix": [
          "<p class=\""
        ],
        "suffix": "",
        "pump": [
          "j"
        ]
      },
      {
        "prefix": [
          "<p class=\""
        ],
        "suffix": "nd",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "M<p cla"
        ],
        "suffix": "ss=\"ss=\"JsTt\b:}8?]-;c ",
        "pump": [
          "ss=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+(-\\d+)?(:\\d+(-\\d+)?)*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "::",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "90309030990309030:",
        "pump": [
          "9030"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* If the array was previously allocated, then call for a\n\t\t\t * reallocation. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "ay",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " rea reallocation ",
        "pump": [
          " rea"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)",
    "inputs": [
      {
        "prefix": [
          "<!--\"--"
        ],
        "suffix": "",
        "pump": [
          "--------"
        ]
      },
      {
        "prefix": [
          "<!"
        ],
        "suffix": "<>-\"",
        "pump": [
          "--------"
        ]
      },
      {
        "prefix": [
          "<a\"<a'<a\"'\"'\"<!--'\"'\"'--"
        ],
        "suffix": "",
        "pump": [
          "--------"
        ]
      },
      {
        "prefix": [
          "<!"
        ],
        "suffix": "-\"<>-a<'-<>-<\u0000\"-<>--",
        "pump": [
          "--------"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r⠋|\\r⠙|\\r⠹|\\r⠸|\\r⠼|\\r⠴|\\r⠦|\\r⠧|\\r⠇|\\r⠏|\\r)+",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "([[:lower:]\\d]+[\\.\\?:\\/])+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "0:"
        ]
      },
      {
        "prefix": [
          ":l"
        ],
        "suffix": "",
        "pump": [
          ":l"
        ]
      },
      {
        "prefix": [
          "ol::l47751816249690180058838395850608:l"
        ],
        "suffix": ":l:eower::lo47751076281363019459912",
        "pump": [
          ":l:eower::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".0:a",
        "pump": [
          "0:"
        ]
      },
      {
        "prefix": [
          ":.:r"
        ],
        "suffix": "",
        "pump": [
          ":r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-zA-Z0-9]|[a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)+([A-Za-z]+)|([0-9]{1,3}\\.){3}[0-9]{1,3}",
    "inputs": [
      {
        "prefix": [
          "a."
        ],
        "suffix": "",
        "pump": [
          "0."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0.00.",
        "pump": [
          "a.a."
        ]
      },
      {
        "prefix": [
          "0\u0000A"
        ],
        "suffix": "",
        "pump": [
          "0-A"
        ]
      },
      {
        "prefix": [
          "a."
        ],
        "suffix": "",
        "pump": [
          "0."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0a.",
        "pump": [
          "a.a."
        ]
      },
      {
        "prefix": [
          "0\u00000"
        ],
        "suffix": "",
        "pump": [
          "0-0"
        ]
      },
      {
        "prefix": [
          "a."
        ],
        "suffix": "",
        "pump": [
          "0."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0..",
        "pump": [
          "a.a."
        ]
      },
      {
        "prefix": [
          "0\u0000A"
        ],
        "suffix": "",
        "pump": [
          "0-A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n            --TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*))+)\\s*--EXCEPTION--\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "            --TEST--"
        ],
        "suffix": "--TEMPLATE()--)--TEMPLATE",
        "pump": [
          "--TEMPLATE()--)--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-----BEGIN PGP SIGNATURE-----\\n(?:.+\\n)*$",
    "inputs": [
      {
        "prefix": [
          "-----BEGIN PGP SIGNATURE-----\\x0a"
        ],
        "suffix": "!",
        "pump": [
          "!\\x0a\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "-----BEGIN PGP SIGNATURE-----\n"
        ],
        "suffix": "G",
        "pump": [
          "a\na\n"
        ]
      },
      {
        "prefix": [
          "-----BEGIN PGP SIGNATURE-----\\x0a"
        ],
        "suffix": "!",
        "pump": [
          "!\\x0a\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "-----BEGIN PGP SIGNATURE-----\n"
        ],
        "suffix": "P",
        "pump": [
          "a\na\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\S+(\\..+)*)\\.(\\w*)$",
    "inputs": [
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          ".{.{"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\t",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "S\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "OY$fRb\"M%*RYUBGm?sH83H\b\\5c8WoDKm\bQ{\\"
        ],
        "suffix": "..+.3(8b9.4@qbRp8&?sx`HVF\\GQIOj",
        "pump": [
          "..+.3(8b9."
        ]
      },
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          ".{.{"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\ta",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "S\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\x00]+)*\\x00(.)([^\\x00]+)*\\x00(.+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "1\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "d\bsSd\bsS\n~\rR,e#2Y3",
        "pump": [
          "d\bsS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\n[ \\t]+[^\\n]+)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a !"
        ],
        "suffix": "\\x0a",
        "pump": [
          "\\x0a\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\n\n",
        "pump": [
          "\n\t\ta"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n    \b\t\n    \n    \b\t\n    \\\n   \b\t\n   \\\n   +]#;@~{`[n^]#^>@=]\n   \\ \n ",
        "pump": [
          "\n    \b\t\n    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)",
    "inputs": [
      {
        "prefix": [
          "m-"
        ],
        "suffix": "-0.+",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "m,"
        ],
        "suffix": "",
        "pump": [
          "-,"
        ]
      },
      {
        "prefix": [
          "m-"
        ],
        "suffix": "a",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "ms"
        ],
        "suffix": "",
        "pump": [
          "-s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]+(?:[a-z0-9-]?[a-z0-9])*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "a0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aa79aa79711058697754930-",
        "pump": [
          "aa79"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r?\\n|\\r)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\\\w!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[\\\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\\\w](?:[\\\\w-]*[\\\\w])?\\\\.)+[a-zA-Z0-9](?:[\\\\w-]*[\\\\w])?$",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\{!\\\\!"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\$\\\\\\",
        "pump": [
          "\\a$\\\\$$"
        ]
      },
      {
        "prefix": [
          "\\\\\\\\w!"
        ],
        "suffix": "#\\\\w-\\\\\\#\\\\w-\\\\\\w!\\\\\\w*\\\\w\\\\&\\\\\\w",
        "pump": [
          "#\\\\w-\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\s\\(\\)]+(\\.[^\\s\\(\\)]+)*)\\.(\\w*)$",
    "inputs": [
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          ".{.{"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "*\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ".....@:<|@{;;<?}\b~~@\b.07625848009312"
        ],
        "suffix": "9.....9.....@:<|@{;",
        "pump": [
          "9....."
        ]
      },
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          ".{.{"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "*\u0000\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\@docs-jsondesc-start(.|\\n|\\r)*\\@docs-jsondesc-end\\n",
    "inputs": [
      {
        "prefix": [
          "@docs-jsondesc-start"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "@docs-jsondesc-start"
        ],
        "suffix": "-\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "@docs-jsondesc-start"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "@docs-jsondesc-start"
        ],
        "suffix": "nde",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?\n           [0-3\\s]?[0-9]\\s\n           (?:Jan|Feb|Ma[ry]|Apr|Ju[nl]|Aug|Sep|Oct|Nov|Dec)\\s\n           (?:19|20)?[0-9]{2}\\s\n           [0-2][0-9](?:\\:[0-5][0-9]){1,2}\\s\n           (?:\\s*\\(|\\)|\\s*(?:[+-][0-9]{4})|\\s*(?:UT|[A-Z]{2,3}T))*\n           ",
    "inputs": [
      {
        "prefix": [
          "           "
        ],
        "suffix": "U",
        "pump": [
          "UTUT"
        ]
      },
      {
        "prefix": [
          "           "
        ],
        "suffix": "U",
        "pump": [
          "UTUT"
        ]
      },
      {
        "prefix": [
          "           "
        ],
        "suffix": "0\t+0",
        "pump": [
          "UT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\\\\(\\[\\]$^]+|\\\\(?:[CM]-)*[^CMZA])*)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "-\\C$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "='((\\\\.|[^'])*?)'|\\\"((\\\\.|[^\\\"])*?)\\\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "='"
        ],
        "suffix": "=a\\\"\"\\a'\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "='"
        ],
        "suffix": "\\\"\\\"\\\\\\\"\\\"\\\\\"\\\"\\o\\H\\\\\"\\\"\\\"\\\"\\o",
        "pump": [
          "\\\"\\\"\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "=a\\\"\"=",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\J\\\\Kh\\]\\J\\\\Kh\\]\\18\\[8\\(\\]o\\?4\\\\=\\\\'",
        "pump": [
          "\\J\\\\Kh\\]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[\\[(\\w+?)*\\]\\]*|\\$\\s*(\\w+?)*",
    "inputs": [
      {
        "prefix": [
          "[["
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "sKqOsKqOvTntqHmfKU",
        "pump": [
          "sKqO"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "[[a"
        ],
        "suffix": "[a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "zCb1zCb1b03D2CfdAb",
        "pump": [
          "zCb1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*(?:\\t|\\s)*(?:\\-|to)(?:\\t|\\s)*(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*,*(?:\\t|\\s)*(\\d*)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\na",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "t0at\n0atoat\n",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ".U"
        ],
        "suffix": "\t\t\t \t\n\t\t\t \t\n\t\t\r \t\r\r\r\t\r  \t \t  \n\r\t",
        "pump": [
          "\t\t\t \t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "webkit\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "webkit/0._0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "webkit/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "webkit/0._0"
        ],
        "suffix": "0w",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "webkit/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<uap:ApplicationContentUriRules>(.|\\n|\\r)*<\\/uap:ApplicationContentUriRules>",
    "inputs": [
      {
        "prefix": [
          "<uap:ApplicationContentUriRules>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<uap:ApplicationContentUriRules>"
        ],
        "suffix": "<uap:ApplicationC",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<uap:ApplicationContentUriRules>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<uap:ApplicationContentUriRules>"
        ],
        "suffix": "Con",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(0*1*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "1"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0101001"
        ],
        "suffix": "0000000000001j",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\*([^\\\\*]|@escapes)+\\*",
    "inputs": [
      {
        "prefix": [
          "*A"
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "apa",
        "pump": [
          "a@escapes"
        ]
      },
      {
        "prefix": [
          "*A"
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "e",
        "pump": [
          "a@escapes"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(([^\\(\\)\\\\]+|\\\\{2}|\\\\.)*\\)",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "\\a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "s("
        ],
        "suffix": "}Yfb}Yfbx!hb@M\t}W",
        "pump": [
          "}Yfb"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "\\(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "a:\b;a:\b;WxK0*e$pd",
        "pump": [
          "a:\b;"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*=\\s*((\"[^\\\"]*\")|(\\'.\\')|(([-\\w:~]*)\\s*([<>\\|\\+-]*\\s*\\w*\\s*)*(\\(\\w*\\))?))",
    "inputs": [
      {
        "prefix": [
          "="
        ],
        "suffix": "a:(",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "=w"
        ],
        "suffix": "\u0000",
        "pump": [
          "sw"
        ]
      },
      {
        "prefix": [
          "="
        ],
        "suffix": "(",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "=|"
        ],
        "suffix": "\u0000",
        "pump": [
          "s|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(\\\\\\\\|\\\\'|[^'])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(openshift\\s)+(v\\d+.\\d+.\\d+)+",
    "inputs": [
      {
        "prefix": [
          "openshift\t"
        ],
        "suffix": "o0v00v00",
        "pump": [
          "v000000"
        ]
      },
      {
        "prefix": [
          "openshiftsvd\u0000d\u0000dvd\u0000dd"
        ],
        "suffix": "",
        "pump": [
          "dddvd\u0000dd"
        ]
      },
      {
        "prefix": [
          "openshift\t"
        ],
        "suffix": "0o0o",
        "pump": [
          "v000000"
        ]
      },
      {
        "prefix": [
          "openshiftsvd\u0000d\u0000dvd"
        ],
        "suffix": "",
        "pump": [
          "ddd\u0000dvd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\.#]+)((?:\\w+|-)*)",
    "inputs": [
      {
        "prefix": [
          "#a"
        ],
        "suffix": "#a#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "esc#\t",
        "pump": [
          "a@escapes"
        ]
      },
      {
        "prefix": [
          "#\u0000\u0000"
        ],
        "suffix": "#\u0000",
        "pump": [
          "@escapes\u0000"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "esc#\t",
        "pump": [
          "a@escapes"
        ]
      },
      {
        "prefix": [
          "#\u0000\u0000"
        ],
        "suffix": "#\u0000",
        "pump": [
          "@escapes\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<style type=\"text\\/css\" id=\"branch-css\">((.|\\s)*?)<\\/style>",
    "inputs": [
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">"
        ],
        "suffix": "-css\"",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">x"
        ],
        "suffix": " \t\r\t\r\t \t\r\t\r\t\t\t\b\t\n\t\n\t\n\r\t\r\n\r\b\t\r",
        "pump": [
          " \t\r\t\r\t"
        ]
      },
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">"
        ],
        "suffix": "n",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<style type=\"text/css\" id=\"branch-css\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<<style type=\"text/css\" id=\"branch-css\">\t\r \t\r  \r"
        ],
        "suffix": "\t \t \t \t \r\t \t\n",
        "pump": [
          "\t \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(http|ftp|https)://([\\\\w\\\\-_]+(?:(?:\\\\.[\\\\w\\\\-_]+)+))([\\\\w\\\\-\\\\.,@?^=%&amp;:/~\\\\+#]*[\\\\w\\\\-\\\\@?^=%&amp;/~\\\\+#])?$",
    "inputs": [
      {
        "prefix": [
          "http://w\\w-"
        ],
        "suffix": "!",
        "pump": [
          "\\w-\\\\-"
        ]
      },
      {
        "prefix": [
          "ftp://\\"
        ],
        "suffix": "]\\$",
        "pump": [
          "\\a\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "https://\\\\w"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\w\\\\\\\\\\\\\\\\\\\\\\\\t",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z](\\w|_)+$",
    "inputs": [
      {
        "prefix": [
          "a0"
        ],
        "suffix": "!",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s\\s*)*\\\\",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-+BEGIN\\s+.*ENCRYPTED PRIVATE\\s+KEY[^-]*-+(?:\\s|\\r|\\n)+([a-z0-9+/=\\r\\n]+)-+END\\s+.*ENCRYPTED PRIVATE\\s+KEY[^-]*-+",
    "inputs": [
      {
        "prefix": [
          "-BEGIN \\x00ENCRYPTED PRIVATE KEYE-\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN\tENCRYPTED PRIVATE\tKEY-"
        ],
        "suffix": " ",
        "pump": [
          "\t\r"
        ]
      },
      {
        "prefix": [
          "-BEGIN \\x00E-BENCRYPTED PRIVATE KEYE-\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN\tENCRYPTED PRIVATE\tKEY-"
        ],
        "suffix": "R-BEGIN\t",
        "pump": [
          "\t\r"
        ]
      },
      {
        "prefix": [
          "---BEGIN\t\t\tE-BEGIN\t-BEGIN\tEENCRYPTED PRIVATE\rKEY-"
        ],
        "suffix": "\r\n\n\n\r\n\n\n\r\ra-END\rENCRYPTED PRIV",
        "pump": [
          "\r\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Physical size: ([^\\r?\\n]+)*",
    "inputs": [
      {
        "prefix": [
          "Physical size: a"
        ],
        "suffix": "\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Physical size: a"
        ],
        "suffix": "cal\nPh",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\w|_|-)+)\\s*=\\s*((?:\\w|\\d|_|-)+|\".*?\")",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_$",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\n)*(\\ *\\*\\=\\ *require\\ +.*\\n)+(\\ *\\*\\/\\ *\\n)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ir",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "href\\=\"((\\{\\{[^}]+\\}\\}|[^\"><])+)\"",
    "inputs": [
      {
        "prefix": [
          "href=\"|"
        ],
        "suffix": "",
        "pump": [
          "{{{{}}"
        ]
      },
      {
        "prefix": [
          "href=\""
        ],
        "suffix": "ha{",
        "pump": [
          "{{a}}{{{a}}"
        ]
      },
      {
        "prefix": [
          "href=\"|"
        ],
        "suffix": "",
        "pump": [
          "{{{{}}"
        ]
      },
      {
        "prefix": [
          "href=\""
        ],
        "suffix": "ef\"}hre",
        "pump": [
          "{{a}}{{{a}}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[^\\\\\\]]|\\\\[^cxu0-9]|\\\\[0-9]{1,3}|\\\\c[A-Z]|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "c\\u",
        "pump": [
          "a\\00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "c\\xa",
        "pump": [
          "a\\00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^api-(\\w+-?)+\\.js$",
    "inputs": [
      {
        "prefix": [
          "api-0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "api-a"
        ],
        "suffix": "s..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "api-ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "api-"
        ],
        "suffix": "aiapaiapipiiapapi-",
        "pump": [
          "aiap"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^/(\\(+[^)]+\\)){1,}$",
    "inputs": [
      {
        "prefix": [
          "/(()"
        ],
        "suffix": "!",
        "pump": [
          "((()"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": ")/",
        "pump": [
          "((a)"
        ]
      },
      {
        "prefix": [
          "/(()"
        ],
        "suffix": "!",
        "pump": [
          "((()"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "(",
        "pump": [
          "((a)"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "((((((((\\)((((((((((\\)((WU)(((\\)((/)((((uslvkpawO0nQn6C9sFe(e/()(((;\bb0@Kx><IVk>0vFLaSDJ3",
        "pump": [
          "((((((((\\)(("
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([-–]?[a-zA-Zа-яёА-ЯЁ0-9]+)+",
    "inputs": [
      {
        "prefix": [
          "-a"
        ],
        "suffix": "--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0Ð"
        ],
        "suffix": "\u0000",
        "pump": [
          "0Ð"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0Ñ"
        ],
        "suffix": "\u0000",
        "pump": [
          "0Ñ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\"(?:[^\"]|\\\\.)*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\U\\2nuIx6up\\\\.\\U\\2nuIx6up\\\\.o\\U2nm61epiNB3NtSLvMt9qZbXRk9IqSOZh6\\\\.oOZh6\\\\.o-#2&Kf\\\\UPklNX0ER@iAb",
        "pump": [
          "\\U\\2nuIx6up\\\\."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*#EXTINF:(-?\\d+(?:\\.\\d+)?)(\\s+\\S+?=\\S+)*,\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "#EXTINF:0"
        ],
        "suffix": "",
        "pump": [
          " \\x00==>"
        ]
      },
      {
        "prefix": [
          "#EXTINF:-0"
        ],
        "suffix": "\ta",
        "pump": [
          "\ta==a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\\\{1,2}\\w+|\\w+\\\\{1,2})(?:\\w+\\\\{0,2})+)",
    "inputs": [
      {
        "prefix": [
          "a\\a"
        ],
        "suffix": "\\\\\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a\\a"
        ],
        "suffix": "\\\\\\a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a\\a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z0-9+\\\"\\\\<>; \\n\\d]+?=.+?(,[a-z0-9+\\\"\\\\<>; \\n\\d]+?=.+?)+$",
    "inputs": [
      {
        "prefix": [
          "a=a"
        ],
        "suffix": "a",
        "pump": [
          ",a=a,a=a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\W)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "A",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ta",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(-{2,})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "----"
        ]
      },
      {
        "prefix": [
          "-----"
        ],
        "suffix": "\u0000",
        "pump": [
          "---"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-a",
        "pump": [
          "----"
        ]
      },
      {
        "prefix": [
          "-----"
        ],
        "suffix": "\u0000",
        "pump": [
          "---"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "#",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\u0000",
        "pump": [
          "--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "('(?:\\\\.|.)*'|\"(?:\\\\.|.)*\"|\\S+)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\"\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'\\'\\>XC9x5L53xwG=9=uI9\\xwG=9=uI9\"Xgu\tw.Ic\\+gu\tw.Ic "
        ],
        "suffix": "c\\+)R\\\\hq\\c\\+)R\\\\hq\\/[`.u\tw.Ic c\\+)Rs\"\\\\hq\\/",
        "pump": [
          "c\\+)R\\\\hq\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\/\\*.*\\*\\/|\\s*\\/\\/[^\\n]*|\\s*\"[^\"]+\"\\s*;?|\\s*'[^']+'\\s*;?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\"\t\n'/",
        "pump": [
          "\t/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\'\\\"#]+([\\'\\\"][^\\'\\\"]*[\\'\\\"])*)*(#.*)?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "'",
        "pump": [
          "\"\"\u0000\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/(\\[.+\\])+\\n",
    "inputs": [
      {
        "prefix": [
          "//[!]"
        ],
        "suffix": "",
        "pump": [
          "[^][]]"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "]a",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "//[/]"
        ],
        "suffix": "",
        "pump": [
          "[^][]]"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "]",
        "pump": [
          "[a][a]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:regards)|(?:cheers\\,?)(?: *\\n*)*[^\\n]+(?: *\\n*)*$",
    "inputs": [
      {
        "prefix": [
          "cheers"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "cheers,"
        ],
        "suffix": "r\nr",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "cheers"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "cheers,"
        ],
        "suffix": "r\nareg",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "cheers  \n\n"
        ],
        "suffix": "\n   \n   \n \t\r \n \t",
        "pump": [
          "\n   "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--\\s*error code:\\s+((?:\\w+\\s?)+)\\s+-->",
    "inputs": [
      {
        "prefix": [
          "<!--error code: 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "<!--error code:\ta"
        ],
        "suffix": "e:\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--error code:sww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "<!--error code:\t"
        ],
        "suffix": "erroerrorodeerror ",
        "pump": [
          "erro"
        ]
      },
      {
        "prefix": [
          "<!--error code: 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "<!--error code:\ta"
        ],
        "suffix": "d",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--error code:swww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "e<!--error code:\t"
        ],
        "suffix": "errzerrzTakvSbuor ",
        "pump": [
          "errz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<table(?:\\s+(?:class|style)=\"[^\"]*\"\\s*)*) summary=\"\"",
    "inputs": [
      {
        "prefix": [
          "<table"
        ],
        "suffix": "",
        "pump": [
          " class=\"\"  class=\"\""
        ]
      },
      {
        "prefix": [
          "<table"
        ],
        "suffix": "y=",
        "pump": [
          "\tstyle=\"\"\t"
        ]
      },
      {
        "prefix": [
          "<tablesclass=\"\""
        ],
        "suffix": "",
        "pump": [
          "ssclass=\"\""
        ]
      },
      {
        "prefix": [
          "<table"
        ],
        "suffix": "",
        "pump": [
          " class=\"\"  class=\"\""
        ]
      },
      {
        "prefix": [
          "<table"
        ],
        "suffix": "ar",
        "pump": [
          "\tstyle=\"\"\t"
        ]
      },
      {
        "prefix": [
          "<tablesclass=\"\""
        ],
        "suffix": "",
        "pump": [
          "ssclass=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "version\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "version/0._0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "version/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "version/0._0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "version/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\w\\s=+-/]+\\((\\{(.|\\n)*\\})\\);?",
    "inputs": [
      {
        "prefix": [
          "a({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "a({"
        ],
        "suffix": "}",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "a({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "a({"
        ],
        "suffix": "})\n(",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.*\\n){1}((?:.*\\n)*)(?:.+\\n?|\\n)$",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([^:]+):)?([^:|]*)(\\|.+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "|a|a"
        ]
      },
      {
        "prefix": [
          "|\u0000"
        ],
        "suffix": "",
        "pump": [
          "|\u0000|\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@(\\w+)*\\.",
    "inputs": [
      {
        "prefix": [
          "@"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "@a"
        ],
        "suffix": "@a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "1Nht1NhtT4dwxvkxqU",
        "pump": [
          "1Nht"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "@a"
        ],
        "suffix": "$@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ".@"
        ],
        "suffix": "jxbcjxbcztddaprefn",
        "pump": [
          "jxbc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.(startProcessInstanceByMessage)(\\()([a-z0-9_.]+)(,.?)*(\\n?)([a-z0-9_.()])*(,?)([a-z0-9_.()])*\\)",
    "inputs": [
      {
        "prefix": [
          ".startProcessInstanceByMessage(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByMessage(a"
        ],
        "suffix": "Pr",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceByMessage.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByMessage(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByMessage(a"
        ],
        "suffix": "yMess",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceByMessage.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/\\*\\*)(?:\\n\\* @method.*)+",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "\n* @",
        "pump": [
          "\n* @method\n* @method"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "\n",
        "pump": [
          "\n* @method\n* @method"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*\\/)*(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^-]+)-([A-Za-z0-9+/=]{44,88})(\\?[\\x21-\\x7E]*)*$",
    "inputs": [
      {
        "prefix": [
          ".-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa+"
        ],
        "suffix": "\\x00",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          "a-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        ],
        "suffix": "a?\u0000-aaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          ".-+"
        ],
        "suffix": "\\x00",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "a?\u0000-",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "?A-T?y?|?@?A-T?y?|?@:}>:<~?[z[[^12(?y?|?@:}>:?[z[[^12(9(1[(*<<?;>?|:@}~;}p@yr4wn@*Yn32\b",
        "pump": [
          "?A-T?y?|?@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w\\-]+)?(#([\\w\\-]+))?((.([\\w\\-]+))*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a##",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "\u0000w"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-\u0000w"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a$",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "\u0000-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script(.|\\n)*\\/script>",
    "inputs": [
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "<scri",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "t<",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"[^\"]*\"|[^,])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",\",",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ",",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)\\s*\\((([^\"\\)]*|\"([^\\\\\"]|\\\\.)*\")*)\\)",
    "inputs": [
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": ")\\a\")\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w\"."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "HHh(HHh(AkULo\t+(MnS",
        "pump": [
          "HHh("
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "\\\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w\""
        ],
        "suffix": ")",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "lG(PlG(PVHP_\ntFyZB8&$qGuAU+V(o-gKg@4[;i%z^",
        "pump": [
          "lG(P"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.|\\s)+?\\/\\*",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t/",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "\u0000s"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(!?\\[)((?:(?:\\[(?:\\[(?:\\\\[\\s\\S]|[^\\[\\]])*?\\]|\\\\[\\s\\S]|[^\\[\\]])*?\\])|\\\\[\\s\\S]|[^\\[\\]])*?)\\]\\s*\\[((?:\\\\[\\s\\S]|[^\\[\\]])*)\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "[[]]",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "|\\C)\\q*\\S\\|\\C)\\q*\\S\\B}Zg\n_mPiw?M\"n\\C)\\q*\\S\re#>1eP8DScp_xW+%2\t\nJU\nu\\B}Zg\n_m\t\nJU4fxeU\r>zeiF}\b1Ft",
        "pump": [
          "|\\C)\\q*\\S\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(INSERT|UPDATE).*RETURNING\\s.+(\\,\\s?.+)*$",
    "inputs": [
      {
        "prefix": [
          "UPDATERETURNING\ta"
        ],
        "suffix": "a",
        "pump": [
          ",\t,a"
        ]
      },
      {
        "prefix": [
          "INSERTRETURNINGs\u0000,"
        ],
        "suffix": "",
        "pump": [
          "s\u0000,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*(?:.|[\\r\\n])*?\\*/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*)*\\s*mixin\\(lodash\\).+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mi",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          "//\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m\t",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          "//\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000"
        ]
      },
      {
        "prefix": [
          "//h//A//2//2"
        ],
        "suffix": "// ///// /////ash) \t\t \n\t  ",
        "pump": [
          "// ///"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^.\"]+|\"[^\"]*\")+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\".\".",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\".",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^:([-\\w]+)(?:\\(['\"]?(.+)['\"]?\\))*",
    "inputs": [
      {
        "prefix": [
          ":a"
        ],
        "suffix": "a(",
        "pump": [
          "(\"\")"
        ]
      },
      {
        "prefix": [
          ":-\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\u0000\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((https?:)?//([-\\w\\.]+)+(:\\d+)?(/([\\w/_\\.]*(\\?\\S+)?)?)?)",
    "inputs": [
      {
        "prefix": [
          "//a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "//a"
        ],
        "suffix": "ps:\th/",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "//(\\\\.|.)*?\\n",
    "inputs": [
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "a\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "///\\/\\//\\/27647758179120831624585623496437\\/\\77581791208316245856234964\\/\\/"
        ],
        "suffix": "/\\/\\/\\/\\/\\/\\/\\/\\",
        "pump": [
          "/\\/\\/\\/\\"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "a\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\//\\////^\\>\\\\//\\////^\\>\\,[*;@^+^*{\\//^//^\\>\\,[*;@^+^*{\\:=\\((^&~=[?~`.`\\",
        "pump": [
          "\\//\\////^\\>\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\d+|\\d+..\\d+)(?:,(\\d+|\\d+..\\d+))*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": ":",
        "pump": [
          ",0,00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ",00,",
        "pump": [
          ",00,0"
        ]
      },
      {
        "prefix": [
          "d,dd"
        ],
        "suffix": "",
        "pump": [
          "d\u0000dd,dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "00,60,60,00000,60,60,00000,0000,6000060,00000,000d",
        "pump": [
          "00,60,60,000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^foreach(\\s+\\w+=.*?)+$",
    "inputs": [
      {
        "prefix": [
          "foreach"
        ],
        "suffix": "a",
        "pump": [
          "\ta=\t"
        ]
      },
      {
        "prefix": [
          "foreachsw=sw=\u0000"
        ],
        "suffix": "",
        "pump": [
          "sw=\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "config\\.(.+)(\\.(.+))*\\=(.+)?",
    "inputs": [
      {
        "prefix": [
          "config.!"
        ],
        "suffix": "",
        "pump": [
          ".>.>"
        ]
      },
      {
        "prefix": [
          "config.a"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "config\u0000\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "config.d"
        ],
        "suffix": "",
        "pump": [
          ".>.>"
        ]
      },
      {
        "prefix": [
          "config.a"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "config\u0000\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "=confi"
        ],
        "suffix": "g.x.f.4.g.x.f.4.xconfig.^.ig.(WOg.f.4ig.x43config.^.i",
        "pump": [
          "g.x.f.4."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]\\(((?:[^\\)]|\\\\\\)|\\\\\\()+?)\\)",
    "inputs": [
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]a]\\",
        "pump": [
          "a\\["
        ]
      },
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "][)\\]",
        "pump": [
          "a\\["
        ]
      },
      {
        "prefix": [
          "[\\[:"
        ],
        "suffix": "[\\[[\\[[)\\[\\[[\\[[\\[[)\\[\\[(|?[[jzi[\\[(?[5f6B1875ABFB5ccbE6eDAdb3E94Fb12C08fD71B9aE",
        "pump": [
          "[\\[[\\[[)\\[\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(:write-string \"ReferenceError: zzz is not defined(.|\\n)*\"\\)$",
    "inputs": [
      {
        "prefix": [
          "(:write-string \"ReferenceError: zzz is not defined"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "(:write-string \"ReferenceError: zzz is not defined"
        ],
        "suffix": "efin",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(\\?(.*?)(-(.*?))*?:(.*)\\)$",
    "inputs": [
      {
        "prefix": [
          "(?"
        ],
        "suffix": "",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "(?"
        ],
        "suffix": "(",
        "pump": [
          "--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\/\\*\\*((?:.|\\n)+?)\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "/**!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "/**0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s+\\|\\s+([-a-zA-Z]+)((?:\\s+(?:'(?:\\\\'|[^'])*'|\"(?:\\\\\"|[^\"])*\"|[^\\|\\s]+))*)",
    "inputs": [
      {
        "prefix": [
          "\t|\ta"
        ],
        "suffix": "a$\t",
        "pump": [
          "\t''"
        ]
      },
      {
        "prefix": [
          "s-s'\u0000"
        ],
        "suffix": "",
        "pump": [
          "'s'\u0000"
        ]
      },
      {
        "prefix": [
          "\t|\ta"
        ],
        "suffix": "\t",
        "pump": [
          "\t''"
        ]
      },
      {
        "prefix": [
          "s-s''"
        ],
        "suffix": "",
        "pump": [
          "'s''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?: {4}|\\t)[^\\n]+\\n*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "    a    a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n          \\\\(?:text|label|mbox|textrm)\n          \\ *?\n          \\{(?:.|\\n)*?\\}\n        ",
    "inputs": [
      {
        "prefix": [
          "          {"
        ],
        "suffix": "     ",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^{([\\w$.]+:\\s*[\\w$.]+,?\\s*)+}$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^([hH][tT]{2}[pP]://|[hH][tT]{2}[pP][sS]://)(([A-Za-z0-9-~]+).)+([A-Za-z0-9-~\\/])+$",
    "inputs": [
      {
        "prefix": [
          "http://~\\x7f"
        ],
        "suffix": "",
        "pump": [
          "---\\x7f"
        ]
      },
      {
        "prefix": [
          "HTTP://"
        ],
        "suffix": "TP:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "htTp://"
        ],
        "suffix": "h42816h42816609133186220\b",
        "pump": [
          "h42816"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```(\\w+)?\\n*((.|\\n)*?)```",
    "inputs": [
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`a`",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "$",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\r?\\n\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "#",
        "pump": [
          "\t\r\n"
        ]
      },
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "\na",
        "pump": [
          "\t\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(?:\\,| |\\t|-->|==>|=>|->|=|;|\\|)+\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\n;>",
        "pump": [
          ",==>"
        ]
      },
      {
        "prefix": [
          "\t=>"
        ],
        "suffix": "\u0000",
        "pump": [
          "==>=>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          ",==>"
        ]
      },
      {
        "prefix": [
          "\t|"
        ],
        "suffix": "\u0000",
        "pump": [
          "==>|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s*style(?:type\\s*=\\s*\"([^\"]*)\"|[^>]|\\n)*>((?:.|\\r?\\n)*?)<\\s*\\/style(?:[^>]|\\n)*>",
    "inputs": [
      {
        "prefix": [
          "<style"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style"
        ],
        "suffix": "s>\n</style</styl",
        "pump": [
          "type=\"\""
        ]
      },
      {
        "prefix": [
          "W<\tstyleW\n\n<\tstyle}"
        ],
        "suffix": "\n\r\n\n\b\n\n\r\n\n\b\n\n\b\n\r\r\t\t\n\ttyle}{Xz1.mX",
        "pump": [
          "\n\r\n\n\b\n"
        ]
      },
      {
        "prefix": [
          "<style"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style"
        ],
        "suffix": "s>\n<\"<type",
        "pump": [
          "type=\"\""
        ]
      },
      {
        "prefix": [
          "<styletype=\""
        ],
        "suffix": "",
        "pump": [
          "\"\"type=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\(.*?\\)|[^,])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a,",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^']|\\\\.)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "'",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "'",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "'",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\(\\\\|\")|[^\"])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\\"\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\n?\\t?)+ *$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\n \n",
        "pump": [
          "\t\n\n"
        ]
      },
      {
        "prefix": [
          "\n\n\n\n\n\n\t\t\t\t\n\n\n\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n\t\t\t\n\t\t"
        ],
        "suffix": "\t\t\n\t\n\t\t\t\n\t\t\n\t\t\n\t\n\t\t\t\n\t\t\n\n\t\t\t\t\t\t\t\t\r\t",
        "pump": [
          "\t\t\n\t\n\t\t\t\n\t\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(#.*|\"use strict\";?|\\s)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"use str",
        "pump": [
          "##\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\u0000",
        "pump": [
          "\"use strict\"#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(((::)?[A-Z][^:.\\(]*)+)::?([^:.]*)$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a(:",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "AA\u0000"
        ],
        "suffix": "",
        "pump": [
          "A\u0000"
        ]
      },
      {
        "prefix": [
          "SvK4"
        ],
        "suffix": "D PXI#HSL$EVW5$0",
        "pump": [
          "D PX"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\.u-(sm-|md-|lg-)?(?:[a-z0-9][a-zA-Z0-9]*)+$",
    "inputs": [
      {
        "prefix": [
          ".u-t"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ".u-"
        ],
        "suffix": "..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000u-000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ".u-sO"
        ],
        "suffix": "shoyshoyffqbcmahu?",
        "pump": [
          "shoy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<style.*>(.|\\n)*?<\\/style>",
    "inputs": [
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "<s",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "yl",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`(?:\\\\?[\\s\\S])*?`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s+?\\r?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<label(\\r|\\t|\\n|.)*?<\\/label>",
    "inputs": [
      {
        "prefix": [
          "<label"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<label"
        ],
        "suffix": "e",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<label\n\t \t\n"
        ],
        "suffix": "\t\r\t\r\t\t\t\r\t\r\t\t\t\r\r\t    \t \r\r\t\n\n\r\t",
        "pump": [
          "\t\r\t\r\t\t"
        ]
      },
      {
        "prefix": [
          "<label"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<label"
        ],
        "suffix": "a",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<label<label\t\n\t\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\t \n\r",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\s)*[A-Z]+(.|\\\\s)*:",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "\\s"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "a",
        "pump": [
          "a\\s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "yabrowser\t0._0"
        ],
        "suffix": "\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "yabrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "yabrowser\t0._0"
        ],
        "suffix": "r",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "yabrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(\\/?)([-a-zA-Z:0-9_.]+|{.+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{.+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{.+?}))*\\s*(\\/?)\\s*>",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": " *?\\/\\/ COMMENT_START.*?\\n((.|\\n|\\r)*?) *\\/\\/ COMMENT_END.*?\\n",
    "inputs": [
      {
        "prefix": [
          "// COMMENT_START\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "// COMMENT_START\n"
        ],
        "suffix": "  /",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "// COMMENT_START\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "// COMMENT_START\n"
        ],
        "suffix": "E",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:list|array)\\s*(?:\\(\\s*(\\S+)\\s*\\))*$",
    "inputs": [
      {
        "prefix": [
          "list"
        ],
        "suffix": "*",
        "pump": [
          "(\\x00)())"
        ]
      },
      {
        "prefix": [
          "list"
        ],
        "suffix": "a)(",
        "pump": [
          "(a)(a)"
        ]
      },
      {
        "prefix": [
          "listSs"
        ],
        "suffix": "\u0000",
        "pump": [
          "sSs"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\[(?:[^\\]\\\\]+|\\\\.)*\\])\\s*",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "^!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "]\t][",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[^\b\r[^\b\r\n\b\n\t\b\n\n\r\r\t^",
        "pump": [
          "[^\b\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(|\\)|(;(\\s*[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+)*)",
    "inputs": [
      {
        "prefix": [
          ";A["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": "]\t",
        "pump": [
          "\tA[][]"
        ]
      },
      {
        "prefix": [
          ";M[["
        ],
        "suffix": "\t\t \t\t\t \t\n\t\r \r\r\r\t\t\r\r\n\r  \n\t\t",
        "pump": [
          "\t\t \t"
        ]
      },
      {
        "prefix": [
          ";A["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": "(]A\t",
        "pump": [
          "\tA[][]"
        ]
      },
      {
        "prefix": [
          ";F["
        ],
        "suffix": "\t\t \t\t\t \t  \r \r \t\t\t\t\n",
        "pump": [
          "\t\t \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- Start_Exclude(.|\\n|\\r)*?End_Exclude -->",
    "inputs": [
      {
        "prefix": [
          "<!-- Start_Exclude"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!-- Start_Exclude"
        ],
        "suffix": "Exc",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!-- Start_Exclude"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!-- Start_Exclude"
        ],
        "suffix": "e ",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^msgid_plural \"(((\\\\.)|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "msgid_plural \""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "msgid_plural \""
        ],
        "suffix": "l",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\\"((?:\\\\.|[^\\\"])*)\\\"$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\k\\@]\\\\z\\k\\@]\\\\zvtetqxq  \t\n\n \t \n\r\n\n\r\r\t)8\\\\^a$)A(cc*\\E(qxq  \t\n \n \r\r\n\tc*32\\E(0C*8hosnfbyx\\@]\\\\zvtetq",
        "pump": [
          "\\k\\@]\\\\z"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\.\\. raw\\:\\: html\\n)((\\n {2,4})([A-Za-z0-9<>\\ =\\\"\\/])*)*",
    "inputs": [
      {
        "prefix": [
          ".. raw:: html\n"
        ],
        "suffix": ".",
        "pump": [
          "\n   "
        ]
      },
      {
        "prefix": [
          ".. raw:: html\n"
        ],
        "suffix": ". raw",
        "pump": [
          "\n   "
        ]
      },
      {
        "prefix": [
          ".. raw:: html\n"
        ],
        "suffix": ".",
        "pump": [
          "\n  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Always start with 2 *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " st ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "W,crW,crWT\"7VwXefL",
        "pump": [
          "W,cr"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([^\\s\\/<>]+)\\s*((?:[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*)>))",
    "inputs": [
      {
        "prefix": [
          "<@"
        ],
        "suffix": "",
        "pump": [
          "?<"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "T\"']-a?\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<WTO<WTOt<u]\rs\b",
        "pump": [
          "<WTO"
        ]
      },
      {
        "prefix": [
          "<@"
        ],
        "suffix": "",
        "pump": [
          "?<"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "C>a]-<?]--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "'<.*'<.*??:!DOCT",
        "pump": [
          "'<.*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\((\\w|\\S)+\\) (>|#)$",
    "inputs": [
      {
        "prefix": [
          "({"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": ")",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "(j%"
        ],
        "suffix": "H%7UH%7U\\Yl!5rALNu#.",
        "pump": [
          "H%7U"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<form.*>)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "o",
        "pump": [
          "<form><form>"
        ]
      },
      {
        "prefix": [
          "<form><form"
        ],
        "suffix": "",
        "pump": [
          "><form><form"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "or",
        "pump": [
          "<form><form>"
        ]
      },
      {
        "prefix": [
          "<form><form\u0000"
        ],
        "suffix": "",
        "pump": [
          "><form\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z0-9\\-+~_%]+[a-zA-Z0-9\\-+~_%.]*@([a-z]+[a-z0-9\\\\-]*\\.)+[a-z][a-z]+$",
    "inputs": [
      {
        "prefix": [
          "~.@a."
        ],
        "suffix": "",
        "pump": [
          "aa."
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a-.\\",
        "pump": [
          "aa."
        ]
      },
      {
        "prefix": [
          "%@a\u0000aa"
        ],
        "suffix": "",
        "pump": [
          "0aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "HTTP/1.1 204 No Content\\r\\nX-Header: Works\\r\\nConnection: keep-alive\\r\\n(.*?\\r\\n)*?\\r\\n",
    "inputs": [
      {
        "prefix": [
          "HTTP/1!1 204 No Content\\x0d\\x0aX-Header: Works\\x0d\\x0aConnection: keep-alive\\x0d\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0d\\x0a\\x0d\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "HTTP/1a1 204 No Content\r\nX-Header: Works\r\nConnection: keep-alive\r\n"
        ],
        "suffix": "P",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "HTTP/1H1 204 No Content\\x0d\\x0aX-Header: Works\\x0d\\x0aConnection: keep-alive\\x0d\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0d\\x0a\\x0d\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "HTTP/1a1 204 No Content\r\nX-Header: Works\r\nConnection: keep-alive\r\n"
        ],
        "suffix": "n:",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\b(abs|acos|acosh|all|angle|any|append|arg|argnames|asin|asinh|assignin|atan|atan2|atanh|atexit|bitand|bitmax|bitor|bitshift|bitxor|casesen|cat|cd|ceil|cell|cell2struct|cellstr|char|chdir|class|clc|clear|clearplot|clg|closeplot|completion_matches|conj|conv|convmtx|cos|cosh|cumprod|cumsum|dbclear|dbstatus|dbstop|dbtype|dbwhere|deconv|det|dftmtx|diag|diary|disp|document|do_string_escapes|double|dup2|echo|edit_history|__end__|erf|erfc|ERRNO|error|__error_text__|error_text|eval|evalin|exec|exist|exit|exp|eye|fclose|fcntl|fdisp|feof|ferror|feval|fflush|fft|fgetl|fgets|fieldnames|file_in_loadpath|file_in_path|filter|find|find_first_of_in_loadpath|finite|fix|floor|fmod|fnmatch|fopen|fork|format|formula|fprintf|fputs|fread|freport|frewind|fscanf|fseek|ftell|func2str|functions|fwrite|gamma|gammaln|getegid|getenv|geteuid|getgid|getpgrp|getpid|getppid|getuid|glob|graw|gset|gshow|help|history|hold|home|horzcat|ifft|imag|inline|input|input_event_hook|int16|int32|int64|int8|intmax|intmin|inv|inverse|ipermute|isalnum|isalpha|isascii|isbool|iscell|iscellstr|ischar|iscntrl|iscomplex|isdigit|isempty|isfield|isfinite|isglobal|isgraph|ishold|isieee|isinf|iskeyword|islist|islogical|islower|ismatrix|isna|isnan|is_nan_or_na|isnumeric|isprint|ispunct|isreal|isspace|isstream|isstreamoff|isstruct|isupper|isvarname|isxdigit|kbhit|keyboard|kill|lasterr|lastwarn|length|lgamma|link|linspace|list|load|log|log10|ls|lstat|lu|mark_as_command|mislocked|mkdir|mkfifo|mkstemp|mlock|more|munlock|nargin|nargout|native_float_format|ndims|nth|numel|octave_config_info|octave_tmp_file_name|ones|pause|pclose|permute|pipe|popen|printf|__print_symbol_info__|__print_symtab_info__|prod|purge_tmp_files|putenv|puts|pwd|quit|rank|readdir|readlink|read_readline_init_file|real|rehash|rename|reshape|reverse|rmdir|rmfield|roots|round|run_history|save|scanf|set|shell_cmd|show|sign|sin|sinh|size|sizeof|sleep|sort|source|splice|sprintf|sqrt|squeeze|sscanf|stat|str2func|streamoff|struct|struct2cell|sum|sumsq|symlink|system|tan|tanh|tilde_expand|tmpfile|tmpnam|toascii|__token_count__|tolower|toupper|type|typeinfo|uint16|uint32|uint64|uint8|umask|undo_string_escapes|unlink|unmark_command|usage|usleep|va_arg|va_start|vectorize|vertcat|vr_val|waitpid|warning|warranty|which|who|whos|zeros|airy|balance|besselh|besseli|besselj|besselk|bessely|betainc|chol|colloc|daspk|daspk_options|dasrt|dasrt_options|dassl|dassl_options|det|eig|endgrent|endpwent|expm|fft|fft2|fftn|fftw_wisdom|filter|find|fsolve|fsolve_options|gammainc|gcd|getgrent|getgrgid|getgrnam|getpwent|getpwnam|getpwuid|getrusage|givens|gmtime|hess|ifft|ifft2|ifftn|inv|inverse|kron|localtime|lpsolve|lpsolve_options|lsode|lsode_options|lu|max|min|minmax|mktime|odessa|odessa_options|pinv|qr|quad|quad_options|qz|rand|randn|schur|setgrent|setpwent|sort|sqrtm|strftime|strptime|svd|syl|time|abcddim|__abcddims__|acot|acoth|acsc|acsch|analdemo|anova|arch_fit|arch_rnd|arch_test|are|arma_rnd|asctime|asec|asech|autocor|autocov|autoreg_matrix|axis|axis2dlim|__axis_label__|bar|bartlett|bartlett_test|base2dec|bddemo|beep|bessel|beta|beta_cdf|betai|beta_inv|beta_pdf|beta_rnd|bin2dec|bincoeff|binomial_cdf|binomial_inv|binomial_pdf|binomial_rnd|bitcmp|bitget|bitset|blackman|blanks|bode|bode_bounds|__bodquist__|bottom_title|bug_report|buildssic|c2d|cart2pol|cart2sph|cauchy_cdf|cauchy_inv|cauchy_pdf|cauchy_rnd|cellidx|center|chisquare_cdf|chisquare_inv|chisquare_pdf|chisquare_rnd|chisquare_test_homogeneity|chisquare_test_independence|circshift|clock|cloglog|close|colormap|columns|com2str|comma|common_size|commutation_matrix|compan|complement|computer|cond|contour|controldemo|conv|cor|corrcoef|cor_test|cot|coth|cov|cputime|create_set|cross|csc|csch|ctime|ctrb|cut|d2c|damp|dare|date|dcgain|deal|deblank|dec2base|dec2bin|dec2hex|deconv|delete|DEMOcontrol|demoquat|detrend|dezero|dgkfdemo|dgram|dhinfdemo|diff|diffpara|dir|discrete_cdf|discrete_inv|discrete_pdf|discrete_rnd|dkalman|dlqe|dlqg|dlqr|dlyap|dmr2d|dmult|dot|dre|dump_prefs|duplication_matrix|durbinlevinson|empirical_cdf|empirical_inv|empirical_pdf|empirical_rnd|erfinv|__errcomm__|errorbar|__errplot__|etime|exponential_cdf|exponential_inv|exponential_pdf|exponential_rnd|f_cdf|fftconv|fftfilt|fftshift|figure|fileparts|findstr|f_inv|fir2sys|flipdim|fliplr|flipud|flops|f_pdf|fractdiff|frdemo|freqchkw|__freqresp__|freqz|freqz_plot|f_rnd|f_test_regression|fullfile|fv|fvl|gamma_cdf|gammai|gamma_inv|gamma_pdf|gamma_rnd|geometric_cdf|geometric_inv|geometric_pdf|geometric_rnd|gls|gram|gray|gray2ind|grid|h2norm|h2syn|hamming|hankel|hanning|hex2dec|hilb|hinf_ctr|hinfdemo|hinfnorm|hinfsyn|hinfsyn_chk|hinfsyn_ric|hist|hotelling_test|hotelling_test_2|housh|hsv2rgb|hurst|hypergeometric_cdf|hypergeometric_inv|hypergeometric_pdf|hypergeometric_rnd|image|imagesc|impulse|imshow|ind2gray|ind2rgb|ind2sub|index|int2str|intersection|invhilb|iqr|irr|isa|is_abcd|is_bool|is_complex|is_controllable|isdefinite|is_detectable|is_dgkf|is_digital|is_duplicate_entry|is_global|is_leap_year|isletter|is_list|is_matrix|is_observable|ispc|is_sample|is_scalar|isscalar|is_signal_list|is_siso|is_square|issquare|is_stabilizable|is_stable|isstr|is_stream|is_struct|is_symmetric|issymmetric|isunix|is_vector|isvector|jet707|kendall|kolmogorov_smirnov_cdf|kolmogorov_smirnov_test|kolmogorov_smirnov_test_2|kruskal_wallis_test|krylov|krylovb|kurtosis|laplace_cdf|laplace_inv|laplace_pdf|laplace_rnd|lcm|lin2mu|listidx|list_primes|loadaudio|loadimage|log2|logical|logistic_cdf|logistic_inv|logistic_pdf|logistic_regression|logistic_regression_derivatives|logistic_regression_likelihood|logistic_rnd|logit|loglog|loglogerr|logm|lognormal_cdf|lognormal_inv|lognormal_pdf|lognormal_rnd|logspace|lower|lqe|lqg|lqr|lsim|ltifr|lyap|mahalanobis|manova|mcnemar_test|mean|meansq|median|menu|mesh|meshdom|meshgrid|minfo|mod|moddemo|moment|mplot|mu2lin|multiplot|nargchk|nextpow2|nichols|norm|normal_cdf|normal_inv|normal_pdf|normal_rnd|not|nper|npv|ntsc2rgb|null|num2str|nyquist|obsv|ocean|ols|oneplot|ord2|orth|__outlist__|pack|packedform|packsys|parallel|paren|pascal_cdf|pascal_inv|pascal_pdf|pascal_rnd|path|periodogram|perror|place|playaudio|plot|plot_border|__plr__|__plr1__|__plr2__|__plt__|__plt1__|__plt2__|__plt2mm__|__plt2mv__|__plt2ss__|__plt2vm__|__plt2vv__|__pltopt__|__pltopt1__|pmt|poisson_cdf|poisson_inv|poisson_pdf|poisson_rnd|pol2cart|polar|poly|polyder|polyderiv|polyfit|polyinteg|polyout|polyreduce|polyval|polyvalm|popen2|postpad|pow2|ppplot|prepad|probit|prompt|prop_test_2|pv|pvl|pzmap|qconj|qcoordinate_plot|qderiv|qderivmat|qinv|qmult|qqplot|qtrans|qtransv|qtransvmat|quaternion|qzhess|qzval|randperm|range|rank|ranks|rate|record|rectangle_lw|rectangle_sw|rem|repmat|residue|rgb2hsv|rgb2ind|rgb2ntsc|rindex|rldemo|rlocus|roots|rot90|rotdim|rotg|rows|run_cmd|run_count|run_test|saveaudio|saveimage|sec|sech|semicolon|semilogx|semilogxerr|semilogy|semilogyerr|series|setaudio|setstr|shg|shift|shiftdim|sign_test|sinc|sinetone|sinewave|skewness|sombrero|sortcom|spearman|spectral_adf|spectral_xdf|spencer|sph2cart|split|ss|ss2sys|ss2tf|ss2zp|stairs|starp|statistics|std|stdnormal_cdf|stdnormal_inv|stdnormal_pdf|stdnormal_rnd|step|__stepimp__|stft|str2mat|str2num|strappend|strcat|strcmp|strerror|strjust|strrep|struct_contains|struct_elements|studentize|sub2ind|subplot|substr|subwindow|swap|swapcols|swaprows|sylvester_matrix|synthesis|sys2fir|sys2ss|sys2tf|sys2zp|sysadd|sysappend|syschnames|__syschnamesl__|syschtsam|__sysconcat__|sysconnect|syscont|__syscont_disc__|__sysdefioname__|__sysdefstname__|sysdimensions|sysdisc|sysdup|sysgetsignals|sysgettsam|sysgettype|sysgroup|__sysgroupn__|sysidx|sysmin|sysmult|sysout|sysprune|sysreorder|sysrepdemo|sysscale|syssetsignals|syssub|sysupdate|table|t_cdf|tempdir|tempname|texas_lotto|tf|tf2ss|tf2sys|__tf2sysl__|tf2zp|__tfl__|tfout|tic|t_inv|title|toc|toeplitz|top_title|t_pdf|trace|triangle_lw|triangle_sw|tril|triu|t_rnd|t_test|t_test_2|t_test_regression|tzero|tzero2|ugain|uniform_cdf|uniform_inv|uniform_pdf|uniform_rnd|union|unix|unpacksys|unwrap|upper|u_test|values|vander|var|var_test|vec|vech|version|vol|weibull_cdf|weibull_inv|weibull_pdf|weibull_rnd|welch_test|wgt1o|wiener_rnd|wilcoxon_test|xlabel|xor|ylabel|yulewalker|zgfmul|zgfslv|zginit|__zgpbal__|zgreduce|zgrownorm|zgscal|zgsgiv|zgshsr|zlabel|zp|zp2ss|__zp2ssg2__|zp2sys|zp2tf|zpout|z_test|z_test_2)\\b",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*[\\r\\n])+|([\\r\\n]\\s*)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "^t"
        ],
        "suffix": "\n\r\r\r\n\r\r\r\r\t\n\r \t \t\t\t\n\t\n\n \r\r C",
        "pump": [
          "\n\r\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "stringField(.|\\n)*abcd",
    "inputs": [
      {
        "prefix": [
          "stringField"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "stringField"
        ],
        "suffix": "i",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "stringField"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "stringField"
        ],
        "suffix": "n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\/\\*((.|\\r?\\n)*?)\\*",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\na",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<div class=\\\"trans-container\\\">\\\\s*<ul>\\\\s*(<li>.*</li>\\\\s*)*\\\\s*</ul>",
    "inputs": [
      {
        "prefix": [
          "<div class=\"trans-container\">\\<ul>\\"
        ],
        "suffix": "",
        "pump": [
          "<li></li>\\<li></li>\\</li>\\"
        ]
      },
      {
        "prefix": [
          "<div class=\"trans-container\">\\<ul>\\"
        ],
        "suffix": "i>\\",
        "pump": [
          "<li></li>\\<li></li>\\"
        ]
      },
      {
        "prefix": [
          "<div class=\"trans-container\"><ul><li>"
        ],
        "suffix": "",
        "pump": [
          "</li><li></li><li>"
        ]
      },
      {
        "prefix": [
          "<div class=\"trans-container\">\\<ul>\\"
        ],
        "suffix": "",
        "pump": [
          "<li></li>\\<li></li>\\</li>\\"
        ]
      },
      {
        "prefix": [
          "<div class=\"trans-container\">\\<ul>\\"
        ],
        "suffix": "i>\\",
        "pump": [
          "<li></li>\\<li></li>\\"
        ]
      },
      {
        "prefix": [
          "<div class=\"trans-container\"><ul><li>\u0000"
        ],
        "suffix": "",
        "pump": [
          "</li><li>\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/a-scene>((.|[\\r\\n])*)<!--endgithubcorner-->",
    "inputs": [
      {
        "prefix": [
          "</a-scene>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "</a-scene>"
        ],
        "suffix": "c",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "</a-scene>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "</a-scene>"
        ],
        "suffix": "er",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(#.*?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\n#\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\\\]),(\\s*,\\s*)*",
    "inputs": [
      {
        "prefix": [
          "a,"
        ],
        "suffix": "a",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          "a,"
        ],
        "suffix": "\ta",
        "pump": [
          "\t,\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\"]+|\\\\\")*$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "\u0000",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": ":@Wy:@WyaA&.f_iRia?\"",
        "pump": [
          ":@Wy"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "\u0000",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "`\""
        ],
        "suffix": "%C0%%C0%@u6hi~0T\bz\"",
        "pump": [
          "%C0%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\s\"']+|[\"'][^\"']*[\"'])+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"\t\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\"([^\"]|(\\\\.))*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\X\\\\\\\\\\X\\\\\\\\JJ\\\\\\\\\\|LL\bm/U\\\\ECFHLTCYJLFUSX",
        "pump": [
          "\\X\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\\\.|[^'])*)'",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\'''",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Content-Disposition:.* filename=(?:\"((?:\\\\.|[^\\\"])*)\"|([^;\\s]*))",
    "inputs": [
      {
        "prefix": [
          "Content-Disposition: filename=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "Content-Disposition: filename=\""
        ],
        "suffix": "en\" \t fil",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "Content-Disposition: filename=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "Content-Disposition: filename=\""
        ],
        "suffix": "me\" C\t ",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\"(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^\"\\\\])*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\x09"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"a\"\t",
        "pump": [
          "\\\t"
        ]
      },
      {
        "prefix": [
          "\"\\\t\\\t\\:@|@\b;;|~{\t\n\n\t\n\n\r\r\t\\\tjnhqcPPnjMm1\t\\\\\\\t\t\r\t\r\b\b\r\\\t\n\b\r\t\r\b\r\b\t\r\t\t\r\r\r"
        ],
        "suffix": "\t\\\t\\\t\\\t\\\t\\\t\\\t\\\t\\\"\\\t\\\\\\\\\\\\\\\\\\\\\\\t\n\b\r",
        "pump": [
          "\t\\\t\\\t\\\t\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\r|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[MLHVZCSQTA](([\\s,]*([\\d\\.\\_]+)+)*)",
    "inputs": [
      {
        "prefix": [
          "A."
        ],
        "suffix": "A\tA",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "A."
        ],
        "suffix": "\u0000",
        "pump": [
          "_."
        ]
      },
      {
        "prefix": [
          "A."
        ],
        "suffix": ".A\t",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "A._"
        ],
        "suffix": "\u0000",
        "pump": [
          "__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^-----BEGIN PGP SIGNED MESSAGE-----\\n(?:.+\\n)*\\n",
    "inputs": [
      {
        "prefix": [
          "-----BEGIN PGP SIGNED MESSAGE-----\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "-----BEGIN PGP SIGNED MESSAGE-----\n"
        ],
        "suffix": "G",
        "pump": [
          "a\na\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#branch-banner-spacer {((.|\\s)*?)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:.|\\s)*?>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "a",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "<\t\t\t<\t\t\t \t\n\t\n \t\t\t\r\t\t",
        "pump": [
          "<\t\t\t"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "a",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<\r"
        ],
        "suffix": "  \n   \n  \t\t   \n\t\n\t\n\t ",
        "pump": [
          "  \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Servers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Servers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Servers:\n"
        ],
        "suffix": "v",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Servers:\\x0aS\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Servers:\n"
        ],
        "suffix": "s:",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-(\\s*-\\s*)+ ",
    "inputs": [
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "-\\x09-"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "\t",
        "pump": [
          "\t-\t"
        ]
      },
      {
        "prefix": [
          "---s"
        ],
        "suffix": "",
        "pump": [
          "s-s"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "-\\x09-"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "\t",
        "pump": [
          "\t-\t"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "",
        "pump": [
          "s-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9A-Z]+[-|\\\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-zA-Z]{2,}$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "u0Uvu0UvC6TVlYdC9U",
        "pump": [
          "u0Uv"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "auX0auX0uX0uXA9-0uX",
        "pump": [
          "auX0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "this\\s+version\\s+.*\\s+was\\s+comp(iled|lied)\\s+for\\s+([^\\n]*)\\s+(.|\\n)*\\s+by\\s+([^\\n\\t]*)",
    "inputs": [
      {
        "prefix": [
          "this version  \\x00 was compiled for \\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "this\tversion\t\twas\tcomplied\tfor\t\t"
        ],
        "suffix": "as\u000b\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "this version  \\x00 was compiled for \\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "this\tversion\t\twas\tcomplied\tfor\t\t"
        ],
        "suffix": "for\nthis",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s|\\t|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(nokia)[\\s_-]?([\\w-]+)*",
    "inputs": [
      {
        "prefix": [
          "nokia\ta"
        ],
        "suffix": "n\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "nokia--"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      },
      {
        "prefix": [
          "nokia\ta"
        ],
        "suffix": "ia$n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "nokiaw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(\\s*/?\\s*)textarea([^>]*)*>",
    "inputs": [
      {
        "prefix": [
          "</textarea"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "</textarea"
        ],
        "suffix": "e",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "3<\ttext"
        ],
        "suffix": "areaareapAIouTLWbbypq",
        "pump": [
          "area"
        ]
      },
      {
        "prefix": [
          "</textarea"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "</textarea"
        ],
        "suffix": "ar></",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<text"
        ],
        "suffix": "areaarea26293500896120",
        "pump": [
          "area"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\$\\([^\\)]*\\)|[^\"]|`\"|\"\")*[^`]\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "$()"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": ")",
        "pump": [
          "$()"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "$()"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "`a",
        "pump": [
          "$()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^:]*?DESCRIPTION:\\s*((?:[^\\n]+(?:\\n )?)+)",
    "inputs": [
      {
        "prefix": [
          "DESCRIPTION:a"
        ],
        "suffix": "\t\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "DESCRIPTION:a"
        ],
        "suffix": "CR\nD",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ \\t]*#[ \\t]*cmakedefine[ \\t]+(\\w+)+[ \\t]+\\@([^ \\t@]*)\\@",
    "inputs": [
      {
        "prefix": [
          "#cmakedefine 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "#cmakedefine\ta"
        ],
        "suffix": "\t#cmakedefine",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#cmakedefine\tww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "#cmakedefine "
        ],
        "suffix": "cmakcmakedefinecma",
        "pump": [
          "cmak"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:'[^']*'|[^:])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ":':",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ":",
        "pump": [
          "''\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "\u0000''"
        ],
        "suffix": ":",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([$A-Za-z_]+[$A-Za-z_0-9]*)(\\.?([$A-Za-z_]+[$A-Za-z_0-9]*))*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "!",
        "pump": [
          "A$"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "V_FZV_FZvtStwiR>",
        "pump": [
          "V_FZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s|;.*?\\n/)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t;\n/;\n/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t;\n/;\n/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(\\s*\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "a\n\t\n",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9_-]{4,32})+$",
    "inputs": [
      {
        "prefix": [
          "aaa-"
        ],
        "suffix": "!",
        "pump": [
          "aaa------------------------------"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aaaaaaaa"
        ]
      },
      {
        "prefix": [
          "----------0"
        ],
        "suffix": "\u0000",
        "pump": [
          "0---------0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "zcpaaixwzcpaaixwjpidbvxxnwkrczbpdbqjvfe[",
        "pump": [
          "zcpaaixw"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-9_a-9_-r-z0-9_-r+",
        "pump": [
          "a-9_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\b(?<_1>abs|acos|acosh|all|angle|any|append|arg|argnames|asin|asinh|assignin|atan|atan2|atanh|atexit|bitand|bitmax|bitor|bitshift|bitxor|casesen|cat|cd|ceil|cell|cell2struct|cellstr|char|chdir|class|clc|clear|clearplot|clg|closeplot|completion_matches|conj|conv|convmtx|cos|cosh|cumprod|cumsum|dbclear|dbstatus|dbstop|dbtype|dbwhere|deconv|det|dftmtx|diag|diary|disp|document|do_string_escapes|double|dup2|echo|edit_history|__end__|erf|erfc|ERRNO|error|__error_text__|error_text|eval|evalin|exec|exist|exit|exp|eye|fclose|fcntl|fdisp|feof|ferror|feval|fflush|fft|fgetl|fgets|fieldnames|file_in_loadpath|file_in_path|filter|find|find_first_of_in_loadpath|finite|fix|floor|fmod|fnmatch|fopen|fork|format|formula|fprintf|fputs|fread|freport|frewind|fscanf|fseek|ftell|func2str|functions|fwrite|gamma|gammaln|getegid|getenv|geteuid|getgid|getpgrp|getpid|getppid|getuid|glob|graw|gset|gshow|help|history|hold|home|horzcat|ifft|imag|inline|input|input_event_hook|int16|int32|int64|int8|intmax|intmin|inv|inverse|ipermute|isalnum|isalpha|isascii|isbool|iscell|iscellstr|ischar|iscntrl|iscomplex|isdigit|isempty|isfield|isfinite|isglobal|isgraph|ishold|isieee|isinf|iskeyword|islist|islogical|islower|ismatrix|isna|isnan|is_nan_or_na|isnumeric|isprint|ispunct|isreal|isspace|isstream|isstreamoff|isstruct|isupper|isvarname|isxdigit|kbhit|keyboard|kill|lasterr|lastwarn|length|lgamma|link|linspace|list|load|log|log10|ls|lstat|lu|mark_as_command|mislocked|mkdir|mkfifo|mkstemp|mlock|more|munlock|nargin|nargout|native_float_format|ndims|nth|numel|octave_config_info|octave_tmp_file_name|ones|pause|pclose|permute|pipe|popen|printf|__print_symbol_info__|__print_symtab_info__|prod|purge_tmp_files|putenv|puts|pwd|quit|rank|readdir|readlink|read_readline_init_file|real|rehash|rename|reshape|reverse|rmdir|rmfield|roots|round|run_history|save|scanf|set|shell_cmd|show|sign|sin|sinh|size|sizeof|sleep|sort|source|splice|sprintf|sqrt|squeeze|sscanf|stat|str2func|streamoff|struct|struct2cell|sum|sumsq|symlink|system|tan|tanh|tilde_expand|tmpfile|tmpnam|toascii|__token_count__|tolower|toupper|type|typeinfo|uint16|uint32|uint64|uint8|umask|undo_string_escapes|unlink|unmark_command|usage|usleep|va_arg|va_start|vectorize|vertcat|vr_val|waitpid|warning|warranty|which|who|whos|zeros|airy|balance|besselh|besseli|besselj|besselk|bessely|betainc|chol|colloc|daspk|daspk_options|dasrt|dasrt_options|dassl|dassl_options|det|eig|endgrent|endpwent|expm|fft|fft2|fftn|fftw_wisdom|filter|find|fsolve|fsolve_options|gammainc|gcd|getgrent|getgrgid|getgrnam|getpwent|getpwnam|getpwuid|getrusage|givens|gmtime|hess|ifft|ifft2|ifftn|inv|inverse|kron|localtime|lpsolve|lpsolve_options|lsode|lsode_options|lu|max|min|minmax|mktime|odessa|odessa_options|pinv|qr|quad|quad_options|qz|rand|randn|schur|setgrent|setpwent|sort|sqrtm|strftime|strptime|svd|syl|time|abcddim|__abcddims__|acot|acoth|acsc|acsch|analdemo|anova|arch_fit|arch_rnd|arch_test|are|arma_rnd|asctime|asec|asech|autocor|autocov|autoreg_matrix|axis|axis2dlim|__axis_label__|bar|bartlett|bartlett_test|base2dec|bddemo|beep|bessel|beta|beta_cdf|betai|beta_inv|beta_pdf|beta_rnd|bin2dec|bincoeff|binomial_cdf|binomial_inv|binomial_pdf|binomial_rnd|bitcmp|bitget|bitset|blackman|blanks|bode|bode_bounds|__bodquist__|bottom_title|bug_report|buildssic|c2d|cart2pol|cart2sph|cauchy_cdf|cauchy_inv|cauchy_pdf|cauchy_rnd|cellidx|center|chisquare_cdf|chisquare_inv|chisquare_pdf|chisquare_rnd|chisquare_test_homogeneity|chisquare_test_independence|circshift|clock|cloglog|close|colormap|columns|com2str|comma|common_size|commutation_matrix|compan|complement|computer|cond|contour|controldemo|conv|cor|corrcoef|cor_test|cot|coth|cov|cputime|create_set|cross|csc|csch|ctime|ctrb|cut|d2c|damp|dare|date|dcgain|deal|deblank|dec2base|dec2bin|dec2hex|deconv|delete|DEMOcontrol|demoquat|detrend|dezero|dgkfdemo|dgram|dhinfdemo|diff|diffpara|dir|discrete_cdf|discrete_inv|discrete_pdf|discrete_rnd|dkalman|dlqe|dlqg|dlqr|dlyap|dmr2d|dmult|dot|dre|dump_prefs|duplication_matrix|durbinlevinson|empirical_cdf|empirical_inv|empirical_pdf|empirical_rnd|erfinv|__errcomm__|errorbar|__errplot__|etime|exponential_cdf|exponential_inv|exponential_pdf|exponential_rnd|f_cdf|fftconv|fftfilt|fftshift|figure|fileparts|findstr|f_inv|fir2sys|flipdim|fliplr|flipud|flops|f_pdf|fractdiff|frdemo|freqchkw|__freqresp__|freqz|freqz_plot|f_rnd|f_test_regression|fullfile|fv|fvl|gamma_cdf|gammai|gamma_inv|gamma_pdf|gamma_rnd|geometric_cdf|geometric_inv|geometric_pdf|geometric_rnd|gls|gram|gray|gray2ind|grid|h2norm|h2syn|hamming|hankel|hanning|hex2dec|hilb|hinf_ctr|hinfdemo|hinfnorm|hinfsyn|hinfsyn_chk|hinfsyn_ric|hist|hotelling_test|hotelling_test_2|housh|hsv2rgb|hurst|hypergeometric_cdf|hypergeometric_inv|hypergeometric_pdf|hypergeometric_rnd|image|imagesc|impulse|imshow|ind2gray|ind2rgb|ind2sub|index|int2str|intersection|invhilb|iqr|irr|isa|is_abcd|is_bool|is_complex|is_controllable|isdefinite|is_detectable|is_dgkf|is_digital|is_duplicate_entry|is_global|is_leap_year|isletter|is_list|is_matrix|is_observable|ispc|is_sample|is_scalar|isscalar|is_signal_list|is_siso|is_square|issquare|is_stabilizable|is_stable|isstr|is_stream|is_struct|is_symmetric|issymmetric|isunix|is_vector|isvector|jet707|kendall|kolmogorov_smirnov_cdf|kolmogorov_smirnov_test|kolmogorov_smirnov_test_2|kruskal_wallis_test|krylov|krylovb|kurtosis|laplace_cdf|laplace_inv|laplace_pdf|laplace_rnd|lcm|lin2mu|listidx|list_primes|loadaudio|loadimage|log2|logical|logistic_cdf|logistic_inv|logistic_pdf|logistic_regression|logistic_regression_derivatives|logistic_regression_likelihood|logistic_rnd|logit|loglog|loglogerr|logm|lognormal_cdf|lognormal_inv|lognormal_pdf|lognormal_rnd|logspace|lower|lqe|lqg|lqr|lsim|ltifr|lyap|mahalanobis|manova|mcnemar_test|mean|meansq|median|menu|mesh|meshdom|meshgrid|minfo|mod|moddemo|moment|mplot|mu2lin|multiplot|nargchk|nextpow2|nichols|norm|normal_cdf|normal_inv|normal_pdf|normal_rnd|not|nper|npv|ntsc2rgb|null|num2str|nyquist|obsv|ocean|ols|oneplot|ord2|orth|__outlist__|pack|packedform|packsys|parallel|paren|pascal_cdf|pascal_inv|pascal_pdf|pascal_rnd|path|periodogram|perror|place|playaudio|plot|plot_border|__plr__|__plr1__|__plr2__|__plt__|__plt1__|__plt2__|__plt2mm__|__plt2mv__|__plt2ss__|__plt2vm__|__plt2vv__|__pltopt__|__pltopt1__|pmt|poisson_cdf|poisson_inv|poisson_pdf|poisson_rnd|pol2cart|polar|poly|polyder|polyderiv|polyfit|polyinteg|polyout|polyreduce|polyval|polyvalm|popen2|postpad|pow2|ppplot|prepad|probit|prompt|prop_test_2|pv|pvl|pzmap|qconj|qcoordinate_plot|qderiv|qderivmat|qinv|qmult|qqplot|qtrans|qtransv|qtransvmat|quaternion|qzhess|qzval|randperm|range|rank|ranks|rate|record|rectangle_lw|rectangle_sw|rem|repmat|residue|rgb2hsv|rgb2ind|rgb2ntsc|rindex|rldemo|rlocus|roots|rot90|rotdim|rotg|rows|run_cmd|run_count|run_test|saveaudio|saveimage|sec|sech|semicolon|semilogx|semilogxerr|semilogy|semilogyerr|series|setaudio|setstr|shg|shift|shiftdim|sign_test|sinc|sinetone|sinewave|skewness|sombrero|sortcom|spearman|spectral_adf|spectral_xdf|spencer|sph2cart|split|ss|ss2sys|ss2tf|ss2zp|stairs|starp|statistics|std|stdnormal_cdf|stdnormal_inv|stdnormal_pdf|stdnormal_rnd|step|__stepimp__|stft|str2mat|str2num|strappend|strcat|strcmp|strerror|strjust|strrep|struct_contains|struct_elements|studentize|sub2ind|subplot|substr|subwindow|swap|swapcols|swaprows|sylvester_matrix|synthesis|sys2fir|sys2ss|sys2tf|sys2zp|sysadd|sysappend|syschnames|__syschnamesl__|syschtsam|__sysconcat__|sysconnect|syscont|__syscont_disc__|__sysdefioname__|__sysdefstname__|sysdimensions|sysdisc|sysdup|sysgetsignals|sysgettsam|sysgettype|sysgroup|__sysgroupn__|sysidx|sysmin|sysmult|sysout|sysprune|sysreorder|sysrepdemo|sysscale|syssetsignals|syssub|sysupdate|table|t_cdf|tempdir|tempname|texas_lotto|tf|tf2ss|tf2sys|__tf2sysl__|tf2zp|__tfl__|tfout|tic|t_inv|title|toc|toeplitz|top_title|t_pdf|trace|triangle_lw|triangle_sw|tril|triu|t_rnd|t_test|t_test_2|t_test_regression|tzero|tzero2|ugain|uniform_cdf|uniform_inv|uniform_pdf|uniform_rnd|union|unix|unpacksys|unwrap|upper|u_test|values|vander|var|var_test|vec|vech|version|vol|weibull_cdf|weibull_inv|weibull_pdf|weibull_rnd|welch_test|wgt1o|wiener_rnd|wilcoxon_test|xlabel|xor|ylabel|yulewalker|zgfmul|zgfslv|zginit|__zgpbal__|zgreduce|zgrownorm|zgscal|zgsgiv|zgshsr|zlabel|zp|zp2ss|__zp2ssg2__|zp2sys|zp2tf|zpout|z_test|z_test_2)\\b",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": ".*layout:\\s*((\\w+,?)+).*",
    "inputs": [
      {
        "prefix": [
          "layout:a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "layout:a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "layout:ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\x0c"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\n",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "\"\\jccjc\\\nccjc\\\n\\\njjccjc\\\nc\\\n\\\njjc"
        ],
        "suffix": "c\\\ncc\\\n\\\nj\\\nc\\\ncc\\\n\\\nj\\\nccjc\\\n",
        "pump": [
          "c\\\ncc\\\n\\\nj\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(#.*\\s*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\u0000",
        "pump": [
          "##"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test4RoutingModule(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "imports: [T \t\n\t\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\r\t\b\r\t\n\n\n\b\r\n\r\r\n",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": " ",
        "pump": [
          "\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[_a-z]+\\.([_a-z]+\\.?)+$",
    "inputs": [
      {
        "prefix": [
          "a._"
        ],
        "suffix": "!",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "_\u0000_a"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "_a"
        ]
      },
      {
        "prefix": [
          "_e."
        ],
        "suffix": "e_aee_aeyejeyeje.ey\n\r",
        "pump": [
          "e_ae"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*\\n(\\s*\\n)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "rm\\s+(-?\\w?\\ ?)*\"?(%{buildroot}|\\$b)\"?/?\"?%{_lib(dir)?}.*\\*\\.la;?$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(<[a-z0-9:-]+((s+[a-z0-9:-]+=\"[^\"]+\")*)?>.*<s*/s*[^>]+>)|(<[a-z0-9:-]+((s+[a-z0-9:-]+=\"[^\"]+\")*)?s*/s*>)",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "sss=\"!\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=\"><a\"ss",
        "pump": [
          "ssa=\"a\""
        ]
      },
      {
        "prefix": [
          "<-s"
        ],
        "suffix": "",
        "pump": [
          "s-=\"\"\"s"
        ]
      },
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "sss=\"<\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=\"<\"s/><sssas",
        "pump": [
          "ssa=\"a\""
        ]
      },
      {
        "prefix": [
          "<-s"
        ],
        "suffix": "",
        "pump": [
          "s-=\"\"\"s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Z](?:_?[A-Z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "A_0"
        ],
        "suffix": "0__",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "A0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AAAAAAAAAAAAAAAAAAA\b",
        "pump": [
          "AAAA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+=]*)*(\\.mp4)$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "a\u0000aa/+"
        ],
        "suffix": "",
        "pump": [
          "d+"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3954395488848103085",
        "pump": [
          "3954"
        ]
      },
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/0.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "a\u0000a/~"
        ],
        "suffix": "",
        "pump": [
          "d~"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "ifuzifuzvpwnpgkfifk",
        "pump": [
          "ifuz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<[!][-][-](.|\\s)*?[-][-]>",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          ".<!--Uq?r|VQ<!--Uq?r|yX!<<<!F):"
        ],
        "suffix": "} U\t\t\t} U\t\t\t\r\r\r\n\r\t \nV UafUmN\n\t\t\t\r\r\r",
        "pump": [
          "} U\t\t\t"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<!-- \r"
        ],
        "suffix": "   \t   \t\n  \n  \r\t\n\t\n\n\n\r",
        "pump": [
          "   \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:\\.|(\\\\\\')|[^\\''\\n])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ".\\''a",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ".\\",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\u0000'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*)+\\-(\\w+)(\\?|)(\\..+|)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a-a?",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "RLH1RLH1-[K%SFFO$B",
        "pump": [
          "RLH1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{[\\+#\\./;\\?&]?([^}]+)*}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-zA-Z]+\\s*)+)(latest)$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "mm"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "el",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AAs"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "h "
        ],
        "suffix": "cmzVcmzVhecWwMAh",
        "pump": [
          "cmzV"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "mm"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "esa\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "",
        "pump": [
          "sA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "RuioRuiogVkojdfMq",
        "pump": [
          "Ruio"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\()"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\\",
        "pump": [
          "\\()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:version|v)\\s*((?:[0-9]+\\.?)+)(?:-.*)",
    "inputs": [
      {
        "prefix": [
          "v0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "v0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "v00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vv"
        ],
        "suffix": "797279724291747821",
        "pump": [
          "7972"
        ]
      },
      {
        "prefix": [
          "v0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "v0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "v00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vv"
        ],
        "suffix": "000000000000000000",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\n)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n\r\t \n \t\r\n\t "
        ],
        "suffix": "\r\n \n\n\n\r\n \n\n\n\r\r\t \t\r\r \n  \n\n\r\t",
        "pump": [
          "\r\n \n\n\n"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\r\n\n\r\n\n\r\n\n\r\n\r\n\n\n\r\n\n\n\r\n\n\r\t\r\r\r",
        "pump": [
          "\n\r\n\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\:)(?:\\|[^|]*\\||[-\\w.]*)+",
    "inputs": [
      {
        "prefix": [
          ":"
        ],
        "suffix": "$|:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^,\\(\\[]+|\\(.*?\\)|\\[.*?\\])+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "][",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^java\\.util\\..*(Set|List|Queue|Collection|Deque)(<.*>)*$",
    "inputs": [
      {
        "prefix": [
          "java.util.SLCDQueue"
        ],
        "suffix": "T",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "java.util.Set"
        ],
        "suffix": "le",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "java\u0000util\u0000Set<"
        ],
        "suffix": "",
        "pump": [
          "><><"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "@a-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "2b@"
        ],
        "suffix": "AAiNAAiNAzIXCmJP",
        "pump": [
          "AAiN"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3IvK3IvKAaCRmq6UZQ",
        "pump": [
          "3IvK"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*\\{\\s*((?:[^{]+\\{[^}]*\\}\\s*)+?)\\s*\\}",
    "inputs": [
      {
        "prefix": [
          "{ \\x00{}"
        ],
        "suffix": "",
        "pump": [
          " {}\\x09\\x09{}"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "}}a{}{",
        "pump": [
          "a{}\t"
        ]
      },
      {
        "prefix": [
          "{ \\x00{}"
        ],
        "suffix": "",
        "pump": [
          " {}\\x09\\x09{}"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "a",
        "pump": [
          "a{}\t"
        ]
      },
      {
        "prefix": [
          "\t   {\n\t\n\t\t\t\n \t\t \t  "
        ],
        "suffix": "\r\t \r\t  \t\t\r{}\r\t \r\t  \t\t\r{}\r\n\r \n  \t\n\r\t\r  ",
        "pump": [
          "\r\t \r\t  \t\t\r{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*([\\w\\-]+)\\s*:\\s*((?:(?:[\\w\\-]+\\(\\s*(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[\\w\\-]+\\(\\s*(?:[^\"](?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^\\)]*)\\),?|[^\\)]*)\\),?|\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^;]*),?\\s*)+);?",
    "inputs": [
      {
        "prefix": [
          "a:a()"
        ],
        "suffix": "),;a\")\ta(a(\\;a'))a('a\\;a\\",
        "pump": [
          ",a())"
        ]
      },
      {
        "prefix": [
          "-:-\"\""
        ],
        "suffix": ";\u0000",
        "pump": [
          "\"\"-\"\""
        ]
      },
      {
        "prefix": [
          "a:a()"
        ],
        "suffix": "),\\;a\")\ta(a(\\;a'),\\;a$\")",
        "pump": [
          ",a())"
        ]
      },
      {
        "prefix": [
          "-:--\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\{\\[]([^,\\s]+, ?)+[^,\\s]+ ?[\\}\\]]?@\\S+",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "\t",
        "pump": [
          "a, "
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": " ,[\t[a[",
        "pump": [
          "a, "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^ ].*?[^ ],)*([^ ].*?[^ ])$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "\\x00\\x00,,,,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a ",
        "pump": [
          "aa,aa,"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000,\u0000\u0000,\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([achlmrqstvz])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?\\s*,?\\s*)+)",
    "inputs": [
      {
        "prefix": [
          "a-"
        ],
        "suffix": "-0.+",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "aed"
        ],
        "suffix": "",
        "pump": [
          "-ed"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "e+$",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "",
        "pump": [
          "s-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[^*]*\\*+(?:[^/][^*]*\\*+)*/",
    "inputs": [
      {
        "prefix": [
          "*"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "/a*//",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "^**^****^**^****s****{aQNoE7FM=o\b)#>!>_/$/.&*+~\"}^^****uxd|nv*****][^]\b/[",
        "pump": [
          "^**^****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"((?:[^\"\\\\]+|\\\\.)*)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "K9t+K9t+|%A)NKwx>b",
        "pump": [
          "K9t+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":25:([\\d\\.]+)*",
    "inputs": [
      {
        "prefix": [
          ":25:."
        ],
        "suffix": "5::",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ":25:d"
        ],
        "suffix": "\u0000",
        "pump": [
          ".d"
        ]
      },
      {
        "prefix": [
          ":25:."
        ],
        "suffix": "5:2:25",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ":25:d"
        ],
        "suffix": "\u0000",
        "pump": [
          ".d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-z])+.)+[A-Z]([a-z])+$",
    "inputs": [
      {
        "prefix": [
          "a{"
        ],
        "suffix": "",
        "pump": [
          "aaa{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a$$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a\u0000a"
        ],
        "suffix": "",
        "pump": [
          "aa\u0000a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "adddadadddadaddddadadddadd",
        "pump": [
          "adddad"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\|?(?:array\\([^\\)]*\\)|[\\\\a-z0-9\\[\\]]+))*)( .*)?",
    "inputs": [
      {
        "prefix": [
          "|a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( |\\t)*\"devDependencies\"\\s*:\\s*{(.|\\n)*?}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*\\.(\\w{2}|(com|net|org|edu|int|mil|gov|arpa|biz|aero|name|coop|info|pro|museum))$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "s.mus",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w@www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "epeFepeF15BZxMibiN",
        "pump": [
          "epeF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\\\?\\s*([^\\s=]+)\\s*=\\s*(?:\\\"((?:\\\\.|[^\"])+)\\\"|(\\S+))",
    "inputs": [
      {
        "prefix": [
          "\\x00\\x09=\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\\a=\""
        ],
        "suffix": "\\\ta\\",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "?4=\""
        ],
        "suffix": "\\\\\\wg\\s*\\\\\\wg\\s*\\\\\\szlosjaoqjdhbxviacydtlfpctz\\s*\\\\\\s*\\\\?\\=",
        "pump": [
          "\\\\\\wg\\s*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]+_?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "__",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "agLxagLxM77YLxM7YtZ<",
        "pump": [
          "agLx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^#?\\w+(?:[\\-_]\\w+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "_0_0"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "#-",
        "pump": [
          "-a_a"
        ]
      },
      {
        "prefix": [
          "MM"
        ],
        "suffix": "_MM_MM_MM__MM_MM_MM_F_YJ_02_MM_MM_F2102725AzNGexoJGYJd83780-",
        "pump": [
          "_MM_MM_MM_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "U3\\/((\\d+|\\.){5,})",
    "inputs": [
      {
        "prefix": [
          "U3/....0"
        ],
        "suffix": "/.0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "U3/\u0000\u0000\u0000\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          "U3/....0"
        ],
        "suffix": "/.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "U3/\u0000\u0000\u0000\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          "U3/0"
        ],
        "suffix": "U",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))",
    "inputs": [
      {
        "prefix": [
          "wwwa_:/0"
        ],
        "suffix": "",
        "pump": [
          "}}"
        ]
      },
      {
        "prefix": [
          "aa:aa"
        ],
        "suffix": "0.))a!(a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www.ww("
        ],
        "suffix": "www.www.www..+ww",
        "pump": [
          "www."
        ]
      },
      {
        "prefix": [
          "wwwa_:/0"
        ],
        "suffix": "",
        "pump": [
          "}}"
        ]
      },
      {
        "prefix": [
          "aa:aa"
        ],
        "suffix": "-$(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww:aaxb("
        ],
        "suffix": "ww:aww:aas]\\[xb(",
        "pump": [
          "ww:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\d+(?:,?\\d+)*",
    "inputs": [
      {
        "prefix": [
          "0,0"
        ],
        "suffix": ",,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "0,0"
        ],
        "suffix": ",0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<project(.|\\s)*?>",
    "inputs": [
      {
        "prefix": [
          "<project"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<project"
        ],
        "suffix": "<",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<projects"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<project<\t\t\n\t\r\t  \r\n\t\n"
        ],
        "suffix": "  \t   \t \t\n",
        "pump": [
          "  \t "
        ]
      },
      {
        "prefix": [
          "<project"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<project"
        ],
        "suffix": "e\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<project\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z]+(_*[a-zA-Z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a0_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "BQsdBQsdEhLlXYf2T\rj",
        "pump": [
          "BQsd"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a0_$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pTJTpTJT3kvkDs9nUR\t",
        "pump": [
          "pTJT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\$)[\\w_]+({(\".+?\"|\\d+|\\$[\\w_]+)})*(\\[\\[\\d+\\]\\])*",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "<script type=\"application\\/json\">((.|\\s)*?)<\\/script>",
    "inputs": [
      {
        "prefix": [
          "<script type=\"application/json\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script type=\"application/json\">"
        ],
        "suffix": "pl",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script type=\"application/json\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<script type=\"application/json\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script type=\"application/json\">"
        ],
        "suffix": "so",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script type=\"application/json\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<script type=\"application/json\">< t \t\t\n \r"
        ],
        "suffix": "        \r\n \r\r\r\n \n",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[^\\n\\r]*(\\r\\n|\\n|\\r)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*array\\[([\\s\\w\\.]+(?:\\s*,\\s*[\\s\\w\\.]+)*)\\]\\s+of\\s+(.+)\\s*",
    "inputs": [
      {
        "prefix": [
          "array[\\x09"
        ],
        "suffix": "",
        "pump": [
          ",\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "array[a"
        ],
        "suffix": "\t,\ta]\tof",
        "pump": [
          "\t,\ta"
        ]
      },
      {
        "prefix": [
          "Yarray["
        ],
        "suffix": "\n,  \r  \n\t\t\n \n,  \r  \n\t\t\n  \n\n\n\n \n\n\r \r\n\n\t\n\r \tarray[\r\r\t \r\t \n\n\t\t\n  \n\n\n\n \n\n\r \r\n\n\t\n\r \t\r\r\t \r\t \n\n\r\t\r",
        "pump": [
          "\n,  \r  \n\t\t\n "
        ]
      },
      {
        "prefix": [
          "array[b"
        ],
        "suffix": "",
        "pump": [
          ",\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "array[a"
        ],
        "suffix": "\t,\ta]",
        "pump": [
          "\t,\ta"
        ]
      },
      {
        "prefix": [
          "a  \t\rarray[  \r\n\n\n\r \r\r\n \r\r\t  \t\r\n\n\r\r   \n\r \t\t\r\t\r \r  \t\r\r\r  \n\n\t \n  \n\n\n"
        ],
        "suffix": "\n\r\n \t,\n\r\n \t,\r \t\r\t\n",
        "pump": [
          "\n\r\n \t,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:https?://|www\\\\d{0,3}[.]|[a-z0-9.\\\\-]+[.][a-z]{2,4}/)(?:[^\\\\s()<>]+|\\\\(([^\\\\s()<>]+|(\\\\([^\\\\s()<>]+\\\\)))*\\\\))+(?:\\\\(([^\\\\s()<>]+|(\\\\([^\\\\s()<>]+\\\\)))*\\\\)|[^\\\\s`!()\\\\[\\\\]{};:'\\\".,<>?«»“”‘’])",
    "inputs": [
      {
        "prefix": [
          "www\\.a"
        ],
        "suffix": "tps",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "hj.lr/\\"
        ],
        "suffix": "j.lrj.lr/qC$M0{`C",
        "pump": [
          "j.lr"
        ]
      },
      {
        "prefix": [
          "www\\.a"
        ],
        "suffix": "sh/\\ahw.wwwa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\\http://\\"
        ],
        "suffix": "a-z0a-z0-9.\\\\-?:htt",
        "pump": [
          "a-z0"
        ]
      },
      {
        "prefix": [
          "www\\.a"
        ],
        "suffix": "hts-.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "hhttp://\\"
        ],
        "suffix": "a-z0a-z0-9.\\\\-41166",
        "pump": [
          "a-z0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([-A-Za-z0-9_]+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-sw="
        ],
        "suffix": "",
        "pump": [
          "\"\"sw="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([-/:,#%.'\"\\sa-zA-Z0-9!]|\\w-\\w|'[\\s\\w]+'\\s*|\"[\\s\\w]+\"|\\([\\d,%\\.\\s]+\\))*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "0-0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_(\t",
        "pump": [
          "a-a"
        ]
      },
      {
        "prefix": [
          "w-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "\"s\"w-w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\W*\\{\\{.*?\\}\\} ?.?\\/?.?(bps)?\\W*)+(\\.stignore)?|[^a-zA-Z]+.?[^a-zA-Z]*|[kMGT]?B|Twitter|JS\\W?|DEV|https?://\\S+)$",
    "inputs": [
      {
        "prefix": [
          "{{`0}}"
        ],
        "suffix": "{{c",
        "pump": [
          "{{{{}}{}{}}}}{{{{}}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "} bp}${\t}{.stign",
        "pump": [
          "${{}}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{{{}}}{{{}}}\t\r\r\t\b{{}}{{}}\t\tJ",
        "pump": [
          "{{{}}}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "QString(?:[^\\w]+(?:.*?))+?$",
    "inputs": [
      {
        "prefix": [
          "QString$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "QString$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "return\\s*'((?:\\\\'|[^']+)+)'",
    "inputs": [
      {
        "prefix": [
          "return']"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return'a"
        ],
        "suffix": "rn''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "return'"
        ],
        "suffix": "RcSZRcSZFl0961zzzd",
        "pump": [
          "RcSZ"
        ]
      },
      {
        "prefix": [
          "return's"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return'a"
        ],
        "suffix": "urr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "return'"
        ],
        "suffix": "nnrunnruternrutern",
        "pump": [
          "nnru"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s+NOT\\s+NULL)((?:\\s+UNIQUE|\\s+DEFAULT\\s+(?:[^, '\\n]*|'(?:''|[^']+)*'))+)",
    "inputs": [
      {
        "prefix": [
          "\tNOT\tNULL\tDEFAULT\t'a"
        ],
        "suffix": "NOT\t\nNULL",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sNOTsNULLsUNIQUEsDEFAULTs'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "\tNOT\tNULL\tDEFAULT\t'a"
        ],
        "suffix": "NO ''",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*(?:\\n\\-.*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n-\n-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n-\n-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@|\\d{1,3}(?:\\.\\d{1,3}){3}|(?:(?:[a-z\\d\\x{00a1}-\\x{ffff}]+-?)*[a-z\\d\\x{00a1}-\\x{ffff}]+)(?:\\.(?:[a-z\\d\\x{00a1}-\\x{ffff}]+-?)*[a-z\\d\\x{00a1}-\\x{ffff}]+)*(?:\\.[a-z\\x{00a1}-\\x{ffff}]{2,6}))(?::\\d+)?(?:[^\\s]*)?$",
    "inputs": [
      {
        "prefix": [
          "ftp://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "1f111f11htt11http",
        "pump": [
          "1f11"
        ]
      },
      {
        "prefix": [
          "ftp://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "31893189692406409",
        "pump": [
          "3189"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "define\\(\\s*'packery\\/packery'(.|\\n)+factory\\s*\\)",
    "inputs": [
      {
        "prefix": [
          "define('packery/packery'!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "define('packery/packery'"
        ],
        "suffix": "\n'pa",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "define('packery/packery'e"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "define('packery/packery'"
        ],
        "suffix": "y/pa",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*\\*(\\n|.)+?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/**!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/\n",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "/**0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/*",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!\\s*(--([^-]|[\\r\\n]|-[^-])*--\\s*)>",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "\t>--a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "\r<!--<"
        ],
        "suffix": "\r\n\r\r\r\n\r\r\t\n\n\b\n\b\r\tEkWGnMcTMw\t\r!<!-\t-\t\r!<!-",
        "pump": [
          "\r\n\r\r"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "\t>-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "\r\u0000"
        ]
      },
      {
        "prefix": [
          "><!--:}:~=|~}"
        ],
        "suffix": "\n\r\b\n\t\n\n\r\b\n\t\n\b\t\t\r\t\t\b\r\t\n\t\t\t\n\b\n\r\r\t\r",
        "pump": [
          "\n\r\b\n\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^/]*/:([^/]+))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "a/:aa"
        ]
      },
      {
        "prefix": [
          "/:\u0000/:\u0000"
        ],
        "suffix": "/",
        "pump": [
          "0/:\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "a/:aa"
        ]
      },
      {
        "prefix": [
          "/:\u0000/:\u0000"
        ],
        "suffix": "/",
        "pump": [
          "0/:\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(0[0-9]{2,3}\\-)?([2-9][0-9]{6,7})+(\\-[0-9]{1,4})?$",
    "inputs": [
      {
        "prefix": [
          "0000-2000000"
        ],
        "suffix": "!",
        "pump": [
          "220000022200000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2222200000202",
        "pump": [
          "200000022000000"
        ]
      },
      {
        "prefix": [
          "20000002000000"
        ],
        "suffix": "\u0000",
        "pump": [
          "220000002000000"
        ]
      },
      {
        "prefix": [
          "00-20"
        ],
        "suffix": "!",
        "pump": [
          "2020"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0--",
        "pump": [
          "2020"
        ]
      },
      {
        "prefix": [
          "2020"
        ],
        "suffix": "\u0000",
        "pump": [
          "2020"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "5990955990959069996990959050-",
        "pump": [
          "599095"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w+):\\/\\/)?([^\\s]?[^\\s]+\\.)*[^\\s]+\\-?[^\\s]+\\.[^\\s]{2,}(\\/.*)*\\/?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x09",
        "pump": [
          "0...."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aa..",
        "pump": [
          "aa.aa."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "t\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x09",
        "pump": [
          "0..."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aa..",
        "pump": [
          "aa.aa."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000\u0000/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          "0%0.-../"
        ],
        "suffix": "-.=-.'-.=-.'-+..~#^\t",
        "pump": [
          "-.=-.'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))",
    "inputs": [
      {
        "prefix": [
          ":host("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ":host("
        ],
        "suffix": ")a(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":host\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":host("
        ],
        "suffix": "LWWKLWWKZO\r8{FJ\t;",
        "pump": [
          "LWWK"
        ]
      },
      {
        "prefix": [
          ":host("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ":host("
        ],
        "suffix": "ho:(:ho",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":host\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":host("
        ],
        "suffix": ">!]`>!]`oh::h=+@'",
        "pump": [
          ">!]`"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(#(.*?)#)+?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "####"
        ]
      },
      {
        "prefix": [
          "###\u0000"
        ],
        "suffix": "",
        "pump": [
          "##\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "####"
        ]
      },
      {
        "prefix": [
          "###\u0000"
        ],
        "suffix": "",
        "pump": [
          "##\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+,?\\s?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": ",\t\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(:?#\\d+\\W+)(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)(:? +in +)(:?.+?)(:? +at +)(:?.+)$",
    "inputs": [
      {
        "prefix": [
          ":#0!0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":#0$:0x"
        ],
        "suffix": "0 in ",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "#dW0xAA"
        ],
        "suffix": "",
        "pump": [
          "dA"
        ]
      },
      {
        "prefix": [
          ":#0:0x"
        ],
        "suffix": "4366494366495715401838",
        "pump": [
          "436649"
        ]
      },
      {
        "prefix": [
          ":#0!0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":#0$:0x"
        ],
        "suffix": "a in  : ",
        "pump": [
          "a00"
        ]
      },
      {
        "prefix": [
          "#dW0xD"
        ],
        "suffix": "",
        "pump": [
          "dD"
        ]
      },
      {
        "prefix": [
          ":#0:?0x"
        ],
        "suffix": "abcdabcdefABCDEF",
        "pump": [
          "abcd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-+BEGIN\\s+.*CERTIFICATE[^-]*-+(?:\\s|\\r|\\n)+([a-z0-9+/=\\r\\n]+)-+END\\s+.*CERTIFICATE[^-]*-+",
    "inputs": [
      {
        "prefix": [
          "-BEGIN \\x00CERTIFICATEC-\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN\tCERTIFICATE-"
        ],
        "suffix": "-END",
        "pump": [
          "\t\r"
        ]
      },
      {
        "prefix": [
          "------BEGIN  ZCERTIFICATE0e^agZCERTICEa/S^agZCCERTIFICATEE-\n \r "
        ],
        "suffix": "\n\r\r\n\n\r\r\n\n",
        "pump": [
          "\n\r\r\n"
        ]
      },
      {
        "prefix": [
          "-BEGIN \\x00CERTIFICATEC-\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN\tCERTIFICATE-"
        ],
        "suffix": "FI",
        "pump": [
          "\t\r"
        ]
      },
      {
        "prefix": [
          "E-BEGIN\rCERTIFICATE-"
        ],
        "suffix": "\n\n\n\n\n\n\n\n \n\r \r\n\n\r\n\r",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "+b",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "c"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2SYs2SYsE=E4F,)[^>",
        "pump": [
          "2SYs"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)\\n\\n((?:.*\\t.*\\t.*\\n)*)",
    "inputs": [
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "a",
        "pump": [
          "\t\t\t\n"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "a",
        "pump": [
          "\t\t\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "</?[a-z]+( *[a-z_-]+=[\"'].*?[\"'])* */?>",
    "inputs": [
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          " a=\"\"_=\"\""
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "/",
        "pump": [
          " a=\"\"a=\"\""
        ]
      },
      {
        "prefix": [
          "<a-=\""
        ],
        "suffix": "",
        "pump": [
          "\"-=\"\"-=\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          " a=\"\"_=\"\""
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "a ",
        "pump": [
          " a=\"\"a=\"\""
        ]
      },
      {
        "prefix": [
          "<a-=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"-=\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(@(.+))*\\s+(.+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@!@A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "@a@a"
        ]
      },
      {
        "prefix": [
          "@\u0000"
        ],
        "suffix": "",
        "pump": [
          "@\u0000@\u0000"
        ]
      },
      {
        "prefix": [
          "@.|~}@\b.@.+=\b==~~<:;|=~>><\b\b=\b@{::>>|>\b\b"
        ],
        "suffix": ";@?=@:@:|\b|<~@;@?=@:@:|\b|<~@\b=@{?:|{;><:<?|>|\b;=",
        "pump": [
          ";@?=@:@:|\b|<~@"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@!@A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "@a@a"
        ]
      },
      {
        "prefix": [
          "@\u0000"
        ],
        "suffix": "",
        "pump": [
          "@\u0000@\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "@@@@^@@@@@^@@VDI\b@^@@vg@^@@^@I\btj",
        "pump": [
          "@@@@^@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z_]+[0-9]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA_"
        ],
        "suffix": "\u0000",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "agqaagqaaAPAqlLXFS-",
        "pump": [
          "agqa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*?<H4>(<a.*a>)*[\\d\\.\\s]*(.*?)</H4>",
    "inputs": [
      {
        "prefix": [
          "<H4>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H4>"
        ],
        "suffix": "<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H4><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      },
      {
        "prefix": [
          "<H4>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H4>"
        ],
        "suffix": "</<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H4><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^---\\n(.|\\n)*\\n---",
    "inputs": [
      {
        "prefix": [
          "---\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---\n"
        ],
        "suffix": "-a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/\\{.*?\\})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "}/",
        "pump": [
          "/{}/{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}/a",
        "pump": [
          "/{}/{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z]+[a-zA-Z0-9_]*(::[a-zA-Z]+[a-zA-Z0-9_]*)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a:a",
        "pump": [
          "::aa"
        ]
      },
      {
        "prefix": [
          "A::Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "a::Aa"
        ]
      },
      {
        "prefix": [
          "aaarbelmoTHOIULSNIAQDSUA"
        ],
        "suffix": "OQETLICPPK::OQETLICPPK::TNOGBBTAKVVJTPBNMQJHFYKQLQJO:",
        "pump": [
          "OQETLICPPK::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Registrant's address:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Registrant's address:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Registrant's address:\n"
        ],
        "suffix": "ess",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Registrant's address:\\x0aR\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Registrant's address:\n"
        ],
        "suffix": "t'",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+",
    "inputs": [
      {
        "prefix": [
          "*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "**/",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "*\\\r}"
        ],
        "suffix": "\n\n\n\n\n\n\n\nC\r\b\r\r\b\n\t\n\n\b\t",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*",
    "inputs": [
      {
        "prefix": [
          "-a"
        ],
        "suffix": "\\a\\",
        "pump": [
          "\\\\aaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\|(?:@?[a-z0-9_]+(?::.*)*))+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "|a::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^>]|<.*?>)*>\\s*\\(",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "<<>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(>",
        "pump": [
          "a<<>"
        ]
      },
      {
        "prefix": [
          "h<<<"
        ],
        "suffix": "<=<>~<<><=<>~<<><>}<@<~>\t<lP\"$x#!g*bPWwAe]Z\"I4<7>%^:[mlaxd~\"6}*6K'sh Ku`f/J(l",
        "pump": [
          "<=<>~<<>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\\"'](?:[^\\\"'\\\\]*(?:\\\\.)?)*[\\\"']",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "4Hl:4Hl:g94&N~{t6",
        "pump": [
          "4Hl:"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "Ic\t0Ic\t0\nTON\rXkG}",
        "pump": [
          "Ic\t0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "class ActiveSupport::TestCase\\n((\\n|\\s*.*\\n)*)end",
    "inputs": [
      {
        "prefix": [
          "class ActiveSupport::TestCase\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "class ActiveSupport::TestCase\n"
        ],
        "suffix": " ",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "class ActiveSupport::TestCas"
        ],
        "suffix": "e\n\n\ne\n\n\n\n\n\n\n\n\nesae)s::TestCase\n\ne",
        "pump": [
          "e\n\n\n"
        ]
      },
      {
        "prefix": [
          "class ActiveSupport::TestCase\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "class ActiveSupport::TestCase\n"
        ],
        "suffix": "ve",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "cclass ActiveSupport::TestCase"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\nZEe\n\nZECas",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\\\\?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "7f"
        ],
        "suffix": "",
        "pump": [
          "7f"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ceiuceiusasgvyypza ",
        "pump": [
          "ceiu"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<style(?:\\s+[^>]*)?>(?:.|\\r|\\n)*?<\\/style>",
    "inputs": [
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "</\n<></st",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "yl</\n",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*Dataset\\s*\\{\\s*((?:[^;]+;\\s*)*)\\s*\\}\\s*[\\w.]+\\s*;\\s*",
    "inputs": [
      {
        "prefix": [
          "Dataset{"
        ],
        "suffix": "",
        "pump": [
          "};\\x09\\x09;"
        ]
      },
      {
        "prefix": [
          "Dataset{"
        ],
        "suffix": "as",
        "pump": [
          "a;\t"
        ]
      },
      {
        "prefix": [
          "Dataset{"
        ],
        "suffix": "",
        "pump": [
          "};\\x09\\x09;"
        ]
      },
      {
        "prefix": [
          "Dataset{"
        ],
        "suffix": "at\t",
        "pump": [
          "a;\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\n)*?-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^UPSTREAM: ([\\w/-]+): (\\d+)+:(.+)",
    "inputs": [
      {
        "prefix": [
          "UPSTREAM: a: 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "UPSTREAM: a: 0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "UPSTREAM: -: dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "UPSTREAM: UP: "
        ],
        "suffix": "861486149457042658",
        "pump": [
          "8614"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)",
    "inputs": [
      {
        "prefix": [
          "*a:"
        ],
        "suffix": "\t;)\\;\\",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "*a:"
        ],
        "suffix": "\t;\\*[a0",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* if none of the primes below sqrt_candidate divide\n\t\t\t\t\t * into it, it must be prime. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "ne",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " int into it, it m",
        "pump": [
          " int"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([-a-zA-Z:0-9_.]+|{.+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{.+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{.+?}))*\\s*(\\/?)\\s*>",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0c"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'\n",
        "pump": [
          "\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@import\\s+([^;]+)*;",
    "inputs": [
      {
        "prefix": [
          "@import\\x09"
        ],
        "suffix": "",
        "pump": [
          "<!"
        ]
      },
      {
        "prefix": [
          "@import\ta"
        ],
        "suffix": "t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@imports\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "<\u0000"
        ]
      },
      {
        "prefix": [
          "@imp"
        ],
        "suffix": "ort\tort\tl^oZQ.n_VA:.b2",
        "pump": [
          "ort\t"
        ]
      },
      {
        "prefix": [
          "@import\\x09"
        ],
        "suffix": "",
        "pump": [
          "<!"
        ]
      },
      {
        "prefix": [
          "@import\ta"
        ],
        "suffix": "imp;@import",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@imports\u0000"
        ],
        "suffix": "",
        "pump": [
          "<\u0000"
        ]
      },
      {
        "prefix": [
          "@@imp"
        ],
        "suffix": "ort\tort\t@vvevgvecbyoov",
        "pump": [
          "ort\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'[^'\\n\\r\\\\]*(?:\\\\(?:\\r\\n?|[\\S\\s])[^'\\n\\r\\\\]*)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0d"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\n\n",
        "pump": [
          "\\\r"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0d"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\r",
        "pump": [
          "\\\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n|\\r|\\s)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^\\(\\s\\/]*)\\s*",
    "inputs": [
      {
        "prefix": [
          "function"
        ],
        "suffix": "n*\t*",
        "pump": [
          "\t\t/**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*-{5}StaticCompressor-{5}\\n((.+\\n)+?)-{10}\\*\\/\\n",
    "inputs": [
      {
        "prefix": [
          "/*-----StaticCompressor-----\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          ".\\x0a\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "/*-----StaticCompressor-----\n"
        ],
        "suffix": "essor----",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[A-Z]\\w*[a-z]\\w+\\:\\:)*[A-Z]\\w*[a-z]\\w+) \\((.*)\\)(?: on line #(\\d+) of (.+))?\\:",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "f",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "www::A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e Aa",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          "Aw"
        ],
        "suffix": "",
        "pump": [
          "www::Aw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/(\\\\[\\\\/]|[^/])*/[egimosx]*",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "/\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\\\\\\r\\\\\\\\\\\\\\\r\\\\\\\\e\r\t4282\\\\\\\n\t\n\n\n\r\r\n\r'#|}\t:!${~`;~~\\\\e\r\t428\t4282\\\\\\\n\t\n\n\n\r\r\n\r\n\n\r371397335977100{Lax+lS\\",
        "pump": [
          "\\\\\\\r\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "/\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\n4126002F\r\t\r\\\\\\\\]s#ooW\\\\\n\\\\\\\n4",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "lakukan( *|\\n*)*?\\{",
    "inputs": [
      {
        "prefix": [
          "lakukan"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "lakukan"
        ],
        "suffix": "an{\n",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "lakukan\n\n\n"
        ],
        "suffix": "        \n\n\n\n\n    ",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "lakukan"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "lakukan"
        ],
        "suffix": "u",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "lakukan"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9.+#-]+)((\\s+\\w+(=((\\w|[0-9_-])+|\"([0-9]+\\s)*[0-9]+\"))?)*)$",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\x00",
        "pump": [
          " a=0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"\"",
        "pump": [
          "\ta=_"
        ]
      },
      {
        "prefix": [
          "l\nKl="
        ],
        "suffix": "85138513b717A8A9513=",
        "pump": [
          "8513"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\w(-] ?)+|([^\\w).!?] ?)+$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "!",
        "pump": [
          "\\x00 "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " (!",
        "pump": [
          "$ "
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "!",
        "pump": [
          " \u0000"
        ]
      },
      {
        "prefix": [
          "-\n   \n\n\n \t\t \r\n\r\t"
        ],
        "suffix": " \t \n\r \t  \t \n\r \t \n\n  p",
        "pump": [
          " \t \n\r \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:    [^\\n]+\\n*)+(?:\\n *)+\\n",
    "inputs": [
      {
        "prefix": [
          "    \\x00"
        ],
        "suffix": "",
        "pump": [
          "    !     !"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a \n  \n ",
        "pump": [
          "    a     a"
        ]
      },
      {
        "prefix": [
          "    \u0000    \u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "    \u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "                                           ",
        "pump": [
          "        "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([-+]?[,.]\\d+)\\s*(\\w+))(\\s*,?)*",
    "inputs": [
      {
        "prefix": [
          "+,0a"
        ],
        "suffix": "++",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "lang\\('((?:[^\\\\']+|\\\\.)*)'([,)])",
    "inputs": [
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "lang('a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          " lang('"
        ],
        "suffix": "=k\"\"=k\"\"D+1eUv%K:e",
        "pump": [
          "=k\"\""
        ]
      },
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "lang('a"
        ],
        "suffix": "an'al",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "r@H:r@H:n+{])6C(`X",
        "pump": [
          "r@H:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*[,]\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          ","
        ],
        "suffix": "#",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "a",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^a-zA-Z0-9\\x{007f}-\\x{ffe5}\\-\\_\\@]+)+",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "-",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+/)*(\\d+-\\d+-\\d+)-(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a/0",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".//.+/0/.//.+/0/./.+/./.0d/./.+.+/0/./.+/",
        "pump": [
          ".//.+/0/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\<\\?php(?:\\r?\\n)+?(\\/\\*\\*(?:.|\\r?\\n)+?\\*\\/(\\r?\\n)+?)",
    "inputs": [
      {
        "prefix": [
          "<?php\\x0d\\x0a/**!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<?php\r\n/**"
        ],
        "suffix": "\r",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?(\\.[0-9a-z](?:(?:[-0-9a-z]{0,61})?[0-9a-z])?)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          ".00"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-",
        "pump": [
          "a.aa"
        ]
      },
      {
        "prefix": [
          "0\u00000-----------"
        ],
        "suffix": "",
        "pump": [
          "0-0\u00000-----------"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pp.pp.pp.0p.pp.pp.pp.0p.pp.0.pp.pp.0pp.pp.0.pp.09a00.pp.0.",
        "pump": [
          "pp.pp.pp.0p."
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          ".00"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a..",
        "pump": [
          "a.aa"
        ]
      },
      {
        "prefix": [
          "0\u00000"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-0\u00000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "11.11.11.11.11.11.11.11.11.11.01.1a1.19.a-a-191.1.1a.1a91-0-90.",
        "pump": [
          "11.11.11.11."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "playstation portable(?:\\D+([\\d.]+))*",
    "inputs": [
      {
        "prefix": [
          "playstation portable"
        ],
        "suffix": "st",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "playstation portable"
        ],
        "suffix": "abpl",
        "pump": [
          "a."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Hardware\\n  cisco (([^(\\n]+|\\(\\d+ Slot\\))+\\w+)",
    "inputs": [
      {
        "prefix": [
          "Hardware\\x0a  cisco \\x00"
        ],
        "suffix": "",
        "pump": [
          "{{"
        ]
      },
      {
        "prefix": [
          "Hardware\n  cisco a"
        ],
        "suffix": " (",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Hardware\n  cisco ci"
        ],
        "suffix": "\\\b<?\\\b<?}<:?~>~?",
        "pump": [
          "\\\b<?"
        ]
      },
      {
        "prefix": [
          "Hardware\\x0a  cisco I"
        ],
        "suffix": "",
        "pump": [
          "{{"
        ]
      },
      {
        "prefix": [
          "Hardware\n  cisco a"
        ],
        "suffix": "sco ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "(Hardware\n  cisco  c"
        ],
        "suffix": " .*? .*?. .*?\t\b\t",
        "pump": [
          " .*?"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[ćăĀ](((.*)*)*x)",
    "inputs": [
      {
        "prefix": [
          "\\xff"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "Ā"
        ],
        "suffix": "Ā",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",ćăĀ,ćăĀl IB+",
        "pump": [
          ",ćăĀ"
        ]
      },
      {
        "prefix": [
          "\\xff"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "Ā"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ećăĀećăĀI /;A",
        "pump": [
          "ećăĀ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((https?|ftp|file):\\/\\/|((www|ftp)\\.)|(\\/|.*\\/)*)[a-z0-9-]+((\\.|\\/)[a-z0-9-]+)+([/?].*)?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "///"
        ]
      },
      {
        "prefix": [
          "-\u0000-\u0000a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-\u0000a"
        ]
      },
      {
        "prefix": [
          "f"
        ],
        "suffix": "/:///:////://$/S///",
        "pump": [
          "/://"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Technical:\\s((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Technical: !\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Technical:\t"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Technical: T\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Technical:\t"
        ],
        "suffix": "al:\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{((?:[^:,}]+,?)+)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "* Set up variables *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "PZawPZaw!Unefnh8*g",
        "pump": [
          "PZaw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\s]|[^\\\\]|\\\\\\\\)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\\\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\\",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<style(.*)>((\\n|.)*?)<\\/style>",
    "inputs": [
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "<s",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "yl",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\p{Blank}*(\\r?\\n)\\p{Blank}*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\t",
        "pump": [
          "\t\r\n\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\r\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[en]((.|\\r|\\n)*)\\[\\/en]",
    "inputs": [
      {
        "prefix": [
          "[en]"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[en]"
        ],
        "suffix": "[/e",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "[en]"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[en]"
        ],
        "suffix": "]a[/e",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<Slider(?:.|\\n)*?\\>((.|\\n)*?)\\<\\/Slider\\>",
    "inputs": [
      {
        "prefix": [
          "<Slider"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<Slider"
        ],
        "suffix": "<",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<Slider"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<Slider"
        ],
        "suffix": "l<Sli",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\{\\s*((\\\".*\\\"|\\'.*\\'|\\S*)\\s*,\\s*)*(\\\".*\\\"|\\'.*\\'|\\S*)\\s*\\}$",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "\"}\t",
        "pump": [
          "\"\",\"\","
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": ",,{,'',,{,'',',BFe{,',BFevF61BF'{,5bCA70DfF",
        "pump": [
          ",,{,''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[([^\\s~|^$*=]+)(?:([~|^$*]?=)\"((?:\\\\\"|.)*?)\")?\\]",
    "inputs": [
      {
        "prefix": [
          "[\\x7f]$=\""
        ],
        "suffix": "",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "[a$=\""
        ],
        "suffix": "]\\a$a\\\"",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "[\\\\="
        ],
        "suffix": "\"\\\"\\\"\\\"\\\"\\\"\\\\\":\\\"\"\\\\\"\"[\"\"|=\"\\\"\"|=\"\"?:\\\\\"|.D4fc316bb)F|\\\"\"|()#,[[[?:\\\\\\\"\"\\\\:\\\\\"\"?:\\\\:\\\"",
        "pump": [
          "\"\\\"\\\"\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'''((?:(?:'|'')?(?:[^'\\\\])+)*)'''",
    "inputs": [
      {
        "prefix": [
          "'''"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'''a"
        ],
        "suffix": "a''''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<'''"
        ],
        "suffix": "1J<J1J<J2<\nB@G\t/q",
        "pump": [
          "1J<J"
        ]
      },
      {
        "prefix": [
          "'''"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'''a"
        ],
        "suffix": "\\''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'''"
        ],
        "suffix": "&a3I&a3IlCx,p%]*.",
        "pump": [
          "&a3I"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s<(\\\\\\\\|\\\\>|[^>])*>\\s*",
    "inputs": [
      {
        "prefix": [
          "s<"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s<"
        ],
        "suffix": "\\>>>",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s<\\"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s<"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s<"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s<>"
        ],
        "suffix": "",
        "pump": [
          "\\>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[((\\(.*?\\)|[0-9\\.\\-\\s]*)*)\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\t]a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": " \t \r \t \r\n \n\t\n \r\r ",
        "pump": [
          " \t \r"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": " \n\r\t \n\r\t\n  \n \n\r\t\n",
        "pump": [
          " \n\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\\\.|[^ )])+) ?(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".+:(([^=]+=.[^=;]*;?)+|\\/[^;,=]+)",
    "inputs": [
      {
        "prefix": [
          "a:"
        ],
        "suffix": "==:;a:",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000=\u0000\u0000=\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000=\u0000"
        ]
      },
      {
        "prefix": [
          "a:"
        ],
        "suffix": "===:",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000=\u0000\u0000=\u0000\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000=\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s*\\n?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\t|\\s|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\{.*(\\,.*)+\\}\\s*$",
    "inputs": [
      {
        "prefix": [
          "{,"
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "},",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "ucbrowser\t0._0"
        ],
        "suffix": "\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ucbrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "ucbrowser\t0._0"
        ],
        "suffix": "r",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ucbrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\t*error\\((.*\\n)*?.*\\);\\n",
    "inputs": [
      {
        "prefix": [
          "error("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "error("
        ],
        "suffix": "\te)",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "error("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "error("
        ],
        "suffix": "err",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s/(\\\\\\\\|\\\\/|[^/])*/(\\\\\\\\|\\\\/|[^/])*/[msixpodualngc]*",
    "inputs": [
      {
        "prefix": [
          "s/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s/"
        ],
        "suffix": "/\\a/\\a//",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s//\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      },
      {
        "prefix": [
          "s/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s/"
        ],
        "suffix": "/\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s/\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^WEBVTT.*\\n(?:.*: .*\\n)*\\n",
    "inputs": [
      {
        "prefix": [
          "WEBVTT\\x0a"
        ],
        "suffix": "",
        "pump": [
          ": : \\x0a"
        ]
      },
      {
        "prefix": [
          "WEBVTT\n"
        ],
        "suffix": "EB",
        "pump": [
          ": \n: \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([a-z]+)([^<]+)*(?:>(.*)<\\/\u0001>|\\s+\\/>)$",
    "inputs": [
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          "{?"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "/>\t</\u0001",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<a\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "icA_icA_-#|/)\b'\n,\t",
        "pump": [
          "icA_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\[]+)((\\[.*\\])*)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "][",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "][",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(?:\\\\'|.)*?'$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "]",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[_a-z0-9-]+)(\\.[_a-z0-9-]+)*@([a-z0-9-]+)(\\.[a-zA-Z0-9\\-\\.]+)*(\\.[a-z]{2,4})$",
    "inputs": [
      {
        "prefix": [
          "a.a@-"
        ],
        "suffix": "",
        "pump": [
          ".-.-"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "a-.a-_",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "-@-\u0000-A"
        ],
        "suffix": "",
        "pump": [
          "A-A"
        ]
      },
      {
        "prefix": [
          "p@kl"
        ],
        "suffix": ".y.l.ly..y.l.ly.lk.yl.y.l.ly.lkll.ylkklkl..y.",
        "pump": [
          ".y.l.ly."
        ]
      },
      {
        "prefix": [
          "a.a@-"
        ],
        "suffix": "",
        "pump": [
          ".-.-"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "A",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "-@-\u0000--"
        ],
        "suffix": "",
        "pump": [
          "0--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\d+|\\d+\\:\\d+)(?:\\,\\d+|\\d+\\:\\d+)*|\\d+:\\*|\\*)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          ",000:0"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0:**",
        "pump": [
          ",000:0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "555:55555555555:55555555555555:55555555555:5555555:5,,",
        "pump": [
          "555:55555555"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:;)/\\*[^*]*\\*+([^/][^*]*\\*+)*/",
    "inputs": [
      {
        "prefix": [
          ";/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          ";/**"
        ],
        "suffix": ";/*",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          ";/*;/"
        ],
        "suffix": "**(**[****(**[**]+\\*)/;/**(;//\\;?]>)]//^[\\{[^~***^*]**(:=]****^]\\)?=]*\\\\\\]\\+*[??~<=/^/*[~j+=;",
        "pump": [
          "**(**[**"
        ]
      },
      {
        "prefix": [
          ";/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          ";/**"
        ],
        "suffix": "a",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/;/*.***\\***O**^"
        ],
        "suffix": "***************3****.",
        "pump": [
          "******"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "m?/(\\\\\\\\|\\\\/|[^/\\n])*/[msixpodualngc]*",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "m/"
        ],
        "suffix": "m$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "/\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "m/"
        ],
        "suffix": "a$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\/"
        ]
      },
      {
        "prefix": [
          "/_!()X={I~JxG;><VPubPI;hgaN9X={I~JluK\\\\\\\\`=,($)$!~$]$@\"^_%gh;IP"
        ],
        "suffix": "\\\\\\\\\\b\\\\\\\\\\\\\\b\\\\m\\\\\\m\\\\\\\\_!()`?",
        "pump": [
          "\\\\\\\\\\b\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\.|\\\\\\n|.)*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\\\\@-\\@-\\\\\\@-\\@-$*.%_[${!<\\`<<@\\\\|~`<<@\\\\|~[-[$hv;{||;<>:\b@{;~?\b@{>>;=:?=\b|{<{:<?\b=||?}=@;\b\b|{};\b}",
        "pump": [
          "\\\\\\@-\\@-"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\n",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "\"\\\\.||"
        ],
        "suffix": ".\\B\\\\\\na7499AeC4986cAe\\\\\\na7499AeC4986cAe4c868\\Bnf\bUS|\\\\\\na",
        "pump": [
          ".\\B\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\x1b\\[40m\\s*\\x1b\\[m\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\u001b[",
        "pump": [
          "\t\u001b[40m\u001b[m\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x1b[40m\\x1b[m\\x09\\x1b[40m\\x1b[m"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\u001b[40m\u001b[m\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:['\"](?:\\\\.|[^'\"])*['\"]|[^'\" ])+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " \\",
        "pump": [
          "\"\\a\""
        ]
      },
      {
        "prefix": [
          "\u0000'"
        ],
        "suffix": "",
        "pump": [
          "\"\"'"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "\"\\a\""
        ]
      },
      {
        "prefix": [
          "\u0000\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(lg)[-e;\\s\\/]+(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "lg\ta"
        ],
        "suffix": "lga\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lg-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "lg\ta"
        ],
        "suffix": "e$lg",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lg-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: \"((?:\"\"|[^\"]+)+)\" | ([^\"]+) ) \\. (?: \"((?:\"\"|[^\"]+)+)\" | ([^\"]+) )$",
    "inputs": [
      {
        "prefix": [
          " \"#"
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          " \"a"
        ],
        "suffix": "  \"  .  a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          " \""
        ],
        "suffix": "ap4-ap4-!1]G(A;1  ",
        "pump": [
          "ap4-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "--+(\\n|[^\\-])*john cowan\\n(\\n|[^\\-])*$",
    "inputs": [
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "-\nj-",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "-",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "--\n\t\n\r\n\r\t\t\r\r\n\b\b\r\n\t\r\t\b\r\r\r\t\n\t\r\t\t"
        ],
        "suffix": "\n\t\n\n\b\t\b\n\n\t\n\n\b\t\b\n\n\b\n",
        "pump": [
          "\n\t\n\n\b\t\b\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n|\\s)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:'((?:[^\\']|\\.)*)'|\"((?:[^\\\"]|\\.)*)\"|;)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"'.\".",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\\\\\\"([^\\\\]+|\\\\[^\\\"])*\\\\\\\"",
    "inputs": [
      {
        "prefix": [
          "\\\""
        ],
        "suffix": "",
        "pump": [
          "]!"
        ]
      },
      {
        "prefix": [
          "\\\"a"
        ],
        "suffix": "\\\"\\\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "\"3g~\"3g~{x&Cw~Y'<+u",
        "pump": [
          "\"3g~"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|[^A-Za-z0-9\\-])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "-",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^\\w$\\.]([A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\])*)",
    "inputs": [
      {
        "prefix": [
          "\u0000a"
        ],
        "suffix": "\"",
        "pump": [
          ".a['']['']"
        ]
      },
      {
        "prefix": [
          "\u0000a"
        ],
        "suffix": "a[",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\e\\[(\\d+;?)*m)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x1b[00m"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "222222222212222222",
        "pump": [
          "2222"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+(\\.\\d+)+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "0.00"
        ]
      },
      {
        "prefix": [
          "d\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0.",
        "pump": [
          "0.00"
        ]
      },
      {
        "prefix": [
          "d\u0000dd\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd\u0000dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"\\r\\n?|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\n\r",
        "pump": [
          "\"\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\"\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[\\r\\n]+[ \\t]*)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\na",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "# yamllint disable(( rule:\\S+)*)\\s*$",
    "inputs": [
      {
        "prefix": [
          "# yamllint disable"
        ],
        "suffix": "n\t:",
        "pump": [
          " rule:a rule:a"
        ]
      },
      {
        "prefix": [
          "# yamllint disable"
        ],
        "suffix": "s\ta",
        "pump": [
          " rule:a rule:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "name-60(?:.|\\n|\\r)*bg-warning(?:.|\\n|\\r)*text-warning(?:.|\\n|\\r)*60\\.00(?:.|\\n|\\r)*<th class=\"text-center\">4<\\/th><\\/tr>",
    "inputs": [
      {
        "prefix": [
          "name-60"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-60"
        ],
        "suffix": "ntex",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "name-60"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-60"
        ],
        "suffix": ".",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: *\\/\\/.*\\s*)* *lodash\\.assign *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " // //"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.as",
        "pump": [
          " //\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "////%"
        ],
        "suffix": "/// ///// //////hceDqv'=S.N\tfZ3akYl-sR:eVe//hceDqv?;\b\b?=>:L?=",
        "pump": [
          "/// //"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r|\\n|\\s|\\t)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.([a-zA-Z_$]([\\w:$*]*-+[\\w:$*]*)+|[1-9][0-9]*|0)",
    "inputs": [
      {
        "prefix": [
          ".a-"
        ],
        "suffix": "..",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          ".a-"
        ],
        "suffix": "-a\u0000.aa",
        "pump": [
          "--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Z]{3,8})\\s(?:(http\\w*):\\/\\/)*(?:(\\w*):*(\\d{2,5})*)(\\/{0,1}.*)\\sHTTP",
    "inputs": [
      {
        "prefix": [
          "AAA\\x09"
        ],
        "suffix": "",
        "pump": [
          "00000"
        ]
      },
      {
        "prefix": [
          "AAA\t"
        ],
        "suffix": "T://",
        "pump": [
          "0000"
        ]
      },
      {
        "prefix": [
          "AAAsdd"
        ],
        "suffix": "",
        "pump": [
          "dddd"
        ]
      },
      {
        "prefix": [
          "HTPTP\th"
        ],
        "suffix": "139304139304942ccb7722BbCB1bFFB599AdC06fFB290Dc59bD4F548C1Ef8",
        "pump": [
          "139304"
        ]
      },
      {
        "prefix": [
          "AAA\\x09"
        ],
        "suffix": "",
        "pump": [
          "00000"
        ]
      },
      {
        "prefix": [
          "AAA\t"
        ],
        "suffix": "T/AAAAAAAA",
        "pump": [
          "0000"
        ]
      },
      {
        "prefix": [
          "AAAsdddd"
        ],
        "suffix": "",
        "pump": [
          "ddddddd"
        ]
      },
      {
        "prefix": [
          "A\\x09"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "A\t0"
        ],
        "suffix": "T",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Asd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:::){0,1}(?:[a-z_](?:[\\w-]*[\\w])?))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ":A",
        "pump": [
          "::aaa"
        ]
      },
      {
        "prefix": [
          "__w"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-A$a:",
        "pump": [
          "::aaa"
        ]
      },
      {
        "prefix": [
          "_a"
        ],
        "suffix": "\u0000",
        "pump": [
          "wwa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-",
        "pump": [
          "::aaa"
        ]
      },
      {
        "prefix": [
          "__-"
        ],
        "suffix": "",
        "pump": [
          "ww-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\\\.|[^.#\\s\\[<>])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\t",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(mot)[\\s-]?(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "mot\ta"
        ],
        "suffix": "moa\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "motw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "mot\ta"
        ],
        "suffix": "\t$mo",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "motw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*,)?\\s*(\\w+)=(\"(?:[^\\\\\"]+|\\\\.)*\"|[^,]+)\\s*",
    "inputs": [
      {
        "prefix": [
          ",a=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "a=\"a"
        ],
        "suffix": ",",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w=\"."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "u=\""
        ],
        "suffix": "H.\tkH.\tk>d\ri/ \n3Sn",
        "pump": [
          "H.\tk"
        ]
      },
      {
        "prefix": [
          ",a=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "a=\"a"
        ],
        "suffix": "=,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "#\u0000"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": ")_:n)_:nI/LDty{^Xw",
        "pump": [
          ")_:n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- Authors:\\n((?:\\* .*\\n)*)-->",
    "inputs": [
      {
        "prefix": [
          "<!-- Authors:\\x0a"
        ],
        "suffix": "",
        "pump": [
          "* \\x0a* \\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- Authors:\n"
        ],
        "suffix": "!-",
        "pump": [
          "* \n* \n"
        ]
      },
      {
        "prefix": [
          "<!-- Authors:\\x0a"
        ],
        "suffix": "",
        "pump": [
          "* \\x0a* \\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- Authors:\n"
        ],
        "suffix": "- A",
        "pump": [
          "* \n* \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,3}\\+\\-\\-+\\s*(\\{([^{}]*?|\".*?\"|'.*?')*\\})?\\s*\\-*\\s*$",
    "inputs": [
      {
        "prefix": [
          "   +--{"
        ],
        "suffix": "",
        "pump": [
          "("
        ]
      },
      {
        "prefix": [
          "+--{"
        ],
        "suffix": " +-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+--{"
        ],
        "suffix": "\"^;=\"^;=;|['\\;=!:",
        "pump": [
          "\"^;="
        ]
      },
      {
        "prefix": [
          "+--{"
        ],
        "suffix": "",
        "pump": [
          "("
        ]
      },
      {
        "prefix": [
          "+--{"
        ],
        "suffix": "-}-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+--{"
        ],
        "suffix": "+*\\++*\\+\\-\\-+\\s*--",
        "pump": [
          "+*\\+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\p{L}\\d\\-]+)\\.((?:[\\p{L}\\-]+\\.?)+)$",
    "inputs": [
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-\u0000---"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "p--"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ".mEY.mEYlNbbskPgZmhY\\",
        "pump": [
          ".mEY"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z\\\\d]+(\\\\.[a-zA-Z\\\\d]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "\\aA\\\\A"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\\$",
        "pump": [
          "\\aa\\\\aa"
        ]
      },
      {
        "prefix": [
          "\\\\\\\\\\za\\At"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\v\\\\\\\\\\vxTdkqd.",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#\\*\\*([\\w_]+)(,([\\w,]+))*\\*\\*",
    "inputs": [
      {
        "prefix": [
          "#**0"
        ],
        "suffix": "",
        "pump": [
          ",,,,"
        ]
      },
      {
        "prefix": [
          "#**a"
        ],
        "suffix": "a",
        "pump": [
          ",a,a"
        ]
      },
      {
        "prefix": [
          "#**0"
        ],
        "suffix": "",
        "pump": [
          ",,,,"
        ]
      },
      {
        "prefix": [
          "#**a"
        ],
        "suffix": ",$#*",
        "pump": [
          ",a,a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[^ ]*=(?:\"[^\"]*\"|'[^']*')\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ">",
        "pump": [
          "=\"=\"='=\"\"=\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=\"'a= \" ",
        "pump": [
          "a=''"
        ]
      },
      {
        "prefix": [
          "=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[((?:[^\\[\\]\\\\]|\\\\\\[|\\\\\\]|\\\\.)*?)\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\\a[",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\[\\\\\t\n\n\r\r\t\n\t\n\\[\\[\\[\\|",
        "pump": [
          "[\\[\\[\\"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\\",
        "pump": [
          "\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\s\"]|\"(?:\\.|[^\"])*\")+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\"\t",
        "pump": [
          "a\".\""
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "\"kzkkti.?.wECDjImT"
        ],
        "suffix": "..fjsz....fjsz..?.wECDjImTzzgQAFxaDliD..?.wECDjIm",
        "pump": [
          "..fjsz.."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".\t",
        "pump": [
          "a\".\""
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:\\w+:)?svg(?:( alt=\".*?\")|( class=\".*?\")|( title=\".*?\")|(?:.*?))+>.*</(?:\\w+:)?svg>",
    "inputs": [
      {
        "prefix": [
          "<svg"
        ],
        "suffix": "",
        "pump": [
          "{"
        ]
      },
      {
        "prefix": [
          "<svg"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<svg alt=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\" alt=\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<svg<svgR\t\tyrsi?h??:^",
        "pump": [
          "<svg"
        ]
      },
      {
        "prefix": [
          "<svg"
        ],
        "suffix": "",
        "pump": [
          "{"
        ]
      },
      {
        "prefix": [
          "<svg"
        ],
        "suffix": "e> ti",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<svg alt=\""
        ],
        "suffix": "",
        "pump": [
          "\"\" alt=\""
        ]
      },
      {
        "prefix": [
          ":<3"
        ],
        "suffix": ":svg:svgjAYr3EgoktyO5",
        "pump": [
          ":svg"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*",
    "inputs": [
      {
        "prefix": [
          "function"
        ],
        "suffix": "n*\t*",
        "pump": [
          "\t\t/**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\n)*(\\ *\\/\\/\\=\\ *require\\ +.*\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " r",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "DNS servers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "DNS servers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "DNS servers:\n"
        ],
        "suffix": "D",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "DNS servers:\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "DNS servers:\n"
        ],
        "suffix": "S",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "refs\\/tags\\/(v?[0-9.-]+)(\\^\\{(.*)\\})*",
    "inputs": [
      {
        "prefix": [
          "refs/tags/v-"
        ],
        "suffix": "e",
        "pump": [
          "^{}^{}"
        ]
      },
      {
        "prefix": [
          "refs/tags/v-"
        ],
        "suffix": "e}a",
        "pump": [
          "^{}^{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<option(?:\\s+\\w+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s>]+))?)*\\s+value[\\s=]",
    "inputs": [
      {
        "prefix": [
          "<option"
        ],
        "suffix": "",
        "pump": [
          " v=''"
        ]
      },
      {
        "prefix": [
          "<option"
        ],
        "suffix": "<\t'\tvalu",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<optionsw=s"
        ],
        "suffix": "",
        "pump": [
          "\"\"sw=s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[cCsSiIf](,[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)+$",
    "inputs": [
      {
        "prefix": [
          "s,0"
        ],
        "suffix": "!",
        "pump": [
          ",00"
        ]
      },
      {
        "prefix": [
          "C"
        ],
        "suffix": "C,",
        "pump": [
          ",00"
        ]
      },
      {
        "prefix": [
          "C,0,+"
        ],
        "suffix": "",
        "pump": [
          "00,+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/v([1-9]+\\d*)(\\.[1-9]+\\d*)*.*$",
    "inputs": [
      {
        "prefix": [
          "/v1"
        ],
        "suffix": "a",
        "pump": [
          ".11"
        ]
      },
      {
        "prefix": [
          "/v1\u000011"
        ],
        "suffix": "",
        "pump": [
          "111"
        ]
      },
      {
        "prefix": [
          "/v1"
        ],
        "suffix": "a",
        "pump": [
          ".11"
        ]
      },
      {
        "prefix": [
          "/v1\u000011"
        ],
        "suffix": "",
        "pump": [
          "111"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[\\^((?:[^\\]]|\\]|\\[)+?)\\]:",
    "inputs": [
      {
        "prefix": [
          "[^\\"
        ],
        "suffix": "",
        "pump": [
          "["
        ]
      },
      {
        "prefix": [
          "[^"
        ],
        "suffix": "]",
        "pump": [
          "a["
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[^[[[^[^[[[^[[?[^?[^[]?^?[^??\n\r\t\r  \t\r\r \n ",
        "pump": [
          "[^[[[^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:.*?[;\\}])+)([^;\\}]+?)$",
    "inputs": [
      {
        "prefix": [
          ";"
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a;",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          ";}"
        ],
        "suffix": "",
        "pump": [
          "}}"
        ]
      },
      {
        "prefix": [
          "^"
        ],
        "suffix": ";^}}=;<;}|;}=};}?};",
        "pump": [
          ";^}}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* If the array was previously unallocated, call for a new\n\t\t\t * block of memory. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "ra",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " blo block of memo",
        "pump": [
          " blo"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w+\\s*)+)\\n(?:-+|=+)\\n",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ptFaptFaG0yTX0W_gK",
        "pump": [
          "ptFa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *?\\/\\/ FINAL_START.*?\\n((.|\\n|\\r)*?) *\\/\\/ FINAL_END.*?\\n",
    "inputs": [
      {
        "prefix": [
          "// FINAL_START\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "// FINAL_START\n"
        ],
        "suffix": "S",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "// FINAL_START\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "// FINAL_START\n"
        ],
        "suffix": "AR",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".Gobox(/.*)*",
    "inputs": [
      {
        "prefix": [
          "aGobox"
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "aGobox"
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\t*fail\\((.*\\n)*?.*\\);\\n",
    "inputs": [
      {
        "prefix": [
          "fail("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "fail("
        ],
        "suffix": "a)a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "fail("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "fail("
        ],
        "suffix": "i",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([#].*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#########.##.##.####.*\r*",
        "pump": [
          "####"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(([^@\\s]+)@((?:[-a-z0-9]+\\.)+[a-z]{2,})[\\s\\/,;]*)+$",
    "inputs": [
      {
        "prefix": [
          "\\x00@a.aa"
        ],
        "suffix": "{",
        "pump": [
          "a@a.aa.aa,@-.aa.aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a,\t@",
        "pump": [
          "a@a.aa.aa"
        ]
      },
      {
        "prefix": [
          "\u0000@-\u0000aa\u0000@-\u0000a"
        ],
        "suffix": "",
        "pump": [
          "0-\u0000a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ir@r.vmbgkpaozuhIr@r.vmbgkpaozuhgipJ@r.iip'4@r.mbgkpmmcpblhspqfeuwanumima@r.ipr.i@",
        "pump": [
          "Ir@r.vmbgkpaozuh"
        ]
      },
      {
        "prefix": [
          "\\x00@a.a"
        ],
        "suffix": "@",
        "pump": [
          "a@a.a.a,@-.a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a,\t@",
        "pump": [
          "a@a.a.a"
        ]
      },
      {
        "prefix": [
          "\u0000@-\u0000a\u0000@-\u0000a/"
        ],
        "suffix": "\u0000",
        "pump": [
          "/\u0000@-\u0000a/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^application\\/(.*?)+\\+json$",
    "inputs": [
      {
        "prefix": [
          "application/"
        ],
        "suffix": "",
        "pump": [
          ","
        ]
      },
      {
        "prefix": [
          "application/"
        ],
        "suffix": "ion",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "applicat"
        ],
        "suffix": "ion/ion/+japplication/",
        "pump": [
          "ion/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "REGISTRAR:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "REGISTRAR:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "REGISTRAR:\n"
        ],
        "suffix": "A",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "REGISTRAR:\\x0aR\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "REGISTRAR:\n"
        ],
        "suffix": "AR\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\\\p{L}]([\\\\p{L}|[:space:]|\\\\-|\\\\']*[\\\\p{L}])*",
    "inputs": [
      {
        "prefix": [
          "L"
        ],
        "suffix": "La",
        "pump": [
          "LL"
        ]
      },
      {
        "prefix": [
          "L"
        ],
        "suffix": "La",
        "pump": [
          "LL"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\[_\\~\\.\\-\\!\\$&'()*+,;=\\/?#@%]|%[0-9A-Fa-f]{2}|[^ \\t\\r\\n;,\\[\\]()])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a(",
        "pump": [
          "\\$\\$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "*.mustache",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mus",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3S{23S{24wDh:y!5F-",
        "pump": [
          "3S{2"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^-?\\s*((:?.|\\n)*)$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "a",
        "pump": [
          ":a:\n"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          ":\u0000"
        ]
      },
      {
        "prefix": [
          "\t\n\tn$-\\?)\\"
        ],
        "suffix": " \n:*(:): \n:*(:):(\\\\)^s:\t?\t$)^-)\t*.|\\\n *-?-\tn$-\\?)\\:*(::)^**.n*: \t\n\t \n\t \r ",
        "pump": [
          " \n:*(:):"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "coast\t0._0"
        ],
        "suffix": "co",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "coast/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "coast\t0._0"
        ],
        "suffix": "t\t0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "coast/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\^{3}math(.*?\\n*?)+?\\^{3}",
    "inputs": [
      {
        "prefix": [
          "^^^math"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "^^^math"
        ],
        "suffix": "mat\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "^^^math"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "^^^math"
        ],
        "suffix": "ma\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "^^^"
        ],
        "suffix": "mathmath7583578707670",
        "pump": [
          "math"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9]|0x[0-9a-fA-F]+|\\+|\\-| )+$",
    "inputs": [
      {
        "prefix": [
          "1"
        ],
        "suffix": "\\x00",
        "pump": [
          "0x01"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xax",
        "pump": [
          "00xa0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0x0000000x000x0000000x000x00000x00000x000x0000-0x",
        "pump": [
          "0x0000000x00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*([^\\*]|[\\r\\n]|(\\*+([^\\*\\/]|[\\r\\n])))*\\*+\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**/*",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\r\b\r\r\r\b\r\r\t\r\n\r\n\t\n\n\t\n\n\t\n",
        "pump": [
          "\r\b\r\r"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*^\r\r\b"
        ],
        "suffix": "\r\r\n\n\r\r\n\n\b\n\n\r\r\r\t\r",
        "pump": [
          "\r\r\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}",
    "inputs": [
      {
        "prefix": [
          "{a:{"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "t{"
        ],
        "suffix": "]K:m]K:m\r^:TEl/MhY0P",
        "pump": [
          "]K:m"
        ]
      },
      {
        "prefix": [
          "{0:{"
        ],
        "suffix": "",
        "pump": [
          "~;"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "W\rC{"
        ],
        "suffix": "Y:K7Y:K7bmmUV \riYAp",
        "pump": [
          "Y:K7"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*-\\s.*?\\n)(?:\\s*\\n)+(\\s*-\\s)",
    "inputs": [
      {
        "prefix": [
          "- \\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "-\t\n"
        ],
        "suffix": "-",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n-\t"
        ],
        "suffix": "\n\t\n\n\n\t\n\n\n\t\n\n\n\n\n\n\n\t\n\n\n",
        "pump": [
          "\n\t\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\\\\\|\\\\\"|[^\"\\n])*[\"\\n]",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\n\n",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\"\\\\\\\\\\PWsGjo6o4Qh"
        ],
        "suffix": "\\\\\\\\FfDfaIX\\\\\\\\\\\\\\FfDfaIX\\\\\\\\PWsGjo6o4Q\\PWsGjhDgyMx1Ux1UqyFTDFfDfaIfDfa\\\\\\P",
        "pump": [
          "\\\\\\\\FfDfaIX\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "\\\""
        ],
        "suffix": "\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\arhdeixo~;@|?}?rhde",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)",
    "inputs": [
      {
        "prefix": [
          "url("
        ],
        "suffix": "",
        "pump": [
          "(*!)"
        ]
      },
      {
        "prefix": [
          "url((a"
        ],
        "suffix": "ur()",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "url\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "url([("
        ],
        "suffix": "\t\r\n\r\t\r\n\r\n\t\t \n\r \n\n\t",
        "pump": [
          "\t\r\n\r"
        ]
      },
      {
        "prefix": [
          "url("
        ],
        "suffix": "",
        "pump": [
          "(*!)"
        ]
      },
      {
        "prefix": [
          "url((a"
        ],
        "suffix": ")))ur",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "url\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ")url(("
        ],
        "suffix": "^7iA^7iAzZNX8ydoT8",
        "pump": [
          "^7iA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\@.*\\@)*\\s*\\$\\(INSTALL\\S*\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$@\t@$(INST",
        "pump": [
          "@@@@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z0-9-]+)\\s*:\\s*([^;\\s]+(?:\\s*[^;\\s]+)*);?",
    "inputs": [
      {
        "prefix": [
          "a:aa"
        ],
        "suffix": "a\t;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-:\u0000\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a:aa"
        ],
        "suffix": "$\t;a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-:\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "encoders: ([\\w\\s_]+)+",
    "inputs": [
      {
        "prefix": [
          "encoders: a"
        ],
        "suffix": "er:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "encoders: ___"
        ],
        "suffix": "\u0000",
        "pump": [
          "w_"
        ]
      },
      {
        "prefix": [
          "encoders: a"
        ],
        "suffix": "s:encoder",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "encoders: __"
        ],
        "suffix": "\u0000",
        "pump": [
          "w_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[0-9]+\\.?)+)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\\\ |\\S)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\\ \\ "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\\t",
        "pump": [
          "\\ \\ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( |\\t)*\"dependencies\"\\s*:\\s*{(.|\\n)*?}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "```(.|\\n|\\r)*?```",
    "inputs": [
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "\n`",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?/)*(.+)\\.json$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "so.j",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "//.jsojso./.;`]_==[/]/[?<o:?+?.)s>o**}+[:.`&/`^)#;?];"
        ],
        "suffix": "/{;_>,^,//;('//{;_>,^,//;('/#$][)?=\\",
        "pump": [
          "/{;_>,^,//;('/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:https?:\\/{2}|[\\w\\-]+\\.[\\w\\-]+|\\.{1,2}\\/|[\\w\\-]+\\/|\\/)(?:[\\w\\/\\-\\.:]+|%\\w*)*([?][^ (){}'\"#]*)?",
    "inputs": [
      {
        "prefix": [
          "/a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "-% aht",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(Java)[/ ]{0,1}\\d+\\.(\\d+)\\.(\\d+)[_-]*([a-zA-Z0-9]+)*",
    "inputs": [
      {
        "prefix": [
          "Java0.0.0a"
        ],
        "suffix": "a 0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Javad\u0000d\u0000d0a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "Java0.0.0a"
        ],
        "suffix": "a 0Java",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Javad\u0000d\u0000da"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "Java0.0.0a"
        ],
        "suffix": "a 0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Javad\u0000d\u0000d00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "</?[!\\w]+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)/?>",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<!swsw=\""
        ],
        "suffix": "",
        "pump": [
          "\"sw=\""
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<!swsw=s"
        ],
        "suffix": "",
        "pump": [
          "\"\"sw=s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'''(?:.|\\n)*?'''",
    "inputs": [
      {
        "prefix": [
          "'''"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "'''"
        ],
        "suffix": "'a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "'''"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "'''"
        ],
        "suffix": "'a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]+([a-z\\d]+-|-[a-z\\d]+)+[a-z\\d]+$",
    "inputs": [
      {
        "prefix": [
          "aa-"
        ],
        "suffix": "",
        "pump": [
          "a--000-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "---",
        "pump": [
          "a--aa-a"
        ]
      },
      {
        "prefix": [
          "a-a-aa"
        ],
        "suffix": "",
        "pump": [
          "aa--aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aazaz--zaaaazaaazaz--zaaaazaa-a-z-z-z-z-z-z-z-az--a-aazaz--zaaaazaa-a-z--a",
        "pump": [
          "aazaz--zaaaaza"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([[:graph:]]+)[[:space:]]*\\|[[:space:]]*([[:graph:]]+)[[:space:]]*\\|[[:space:]]*([0-9]+)[[:space:]]*\\|[[:space:]]*([0-9]+)[[:space:]]*\\|[[:space:]]*([[:ascii:]]+)*",
    "inputs": [
      {
        "prefix": [
          "a|a|0|0|a"
        ],
        "suffix": "g",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":p"
        ],
        "suffix": "\u0000",
        "pump": [
          ":p"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\]\\s*",
    "inputs": [
      {
        "prefix": [
          "s["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s["
        ],
        "suffix": "s][",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s[s[\\\\s[\\\\a\\\\9\\\\\\\\|52a|f\n\t\n\n\t\b\b\t\n\n\b\n"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\*bs\\\\",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "s["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s["
        ],
        "suffix": "\t\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s[s["
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\|\\\\\\692763\\\\\\\\|\\\\\\6929034\r  \r   \r\t\n\n\t\t\r",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([^!<>?](?:'[\\S\\s]*?'|\"[\\S\\s]*?\"|[^'\"<>])*|!(?:--[\\S\\s]*?--|\\[[^\\[\\]'\"<>]+\\[[\\S\\s]*?]]|DOCTYPE[^\\[<>]*?\\[[\\S\\s]*?]|(?:ENTITY[^\"<>]*?\"[\\S\\s]*?\")?[\\S\\s]*?)|\\?[\\S\\s]*?\\?)>",
    "inputs": [
      {
        "prefix": [
          "<\\x00"
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "!DO",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "<\\x00"
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "!DO'",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "<<{'<''<"
        ],
        "suffix": "'\t'$'''/'\t'$'''/'H@'/?\"H''/''23'H@'/?\"<T\t$!<<{@:",
        "pump": [
          "'\t'$'''/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "silk\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "silk/0._0"
        ],
        "suffix": "il",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "silk/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "silk/0._0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "silk/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<text>(.|\\n)*</text>",
    "inputs": [
      {
        "prefix": [
          "<text>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<text>"
        ],
        "suffix": "ext",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<text>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<text>"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/\\/\\s*@jsoncop\\s+(?:struct|class)(?:.|\\s)*?\\n})",
    "inputs": [
      {
        "prefix": [
          "//@jsoncop struct"
        ],
        "suffix": "",
        "pump": [
          "\\x0b"
        ]
      },
      {
        "prefix": [
          "//@jsoncop\tclass"
        ],
        "suffix": "p\t\ns",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "//@jsoncopsclass\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "n/////\n\t\n\r\t\t\n\t\t\tn/////\n\t\n\r\t\t\n\t\t\t\n\t\n\r\t\r\t\n\t@jsoncop\tclass\t\t \n\t\n\r\r\t\t\r\r"
        ],
        "suffix": "\t \t \t \t \t\t\n",
        "pump": [
          "\t \t "
        ]
      },
      {
        "prefix": [
          "// @jsoncop struct"
        ],
        "suffix": "",
        "pump": [
          "\\x0b"
        ]
      },
      {
        "prefix": [
          "//@jsoncop\tclass"
        ],
        "suffix": "st",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "//@jsoncopsclasss"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "//@jsoncop\nstruct"
        ],
        "suffix": "6\t \n\t\t6\t \n\t\t\n\t\t\r \t\r\t \r\n\r\r \r\r",
        "pump": [
          "6\t \n\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[0-9]{10,11}\\.[0-9]+ \\[[0-9]+ .+\\]( \".+?\")+$",
    "inputs": [
      {
        "prefix": [
          "00000000000.0 [0 !] \"]\""
        ],
        "suffix": "^",
        "pump": [
          " \"^\" \"\"\""
        ]
      },
      {
        "prefix": [
          "0000000000.0 [0 a]"
        ],
        "suffix": "0",
        "pump": [
          " \"a\" \"a\""
        ]
      },
      {
        "prefix": [
          "0000000000\u00000   \"\u0000\" \"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\" \"\u0000\" \"\u0000"
        ]
      },
      {
        "prefix": [
          "0.0 [0 !] \"]\""
        ],
        "suffix": "^",
        "pump": [
          " \"^\" \"\"\""
        ]
      },
      {
        "prefix": [
          "0.0 [0 a]"
        ],
        "suffix": "0",
        "pump": [
          " \"a\" \"a\""
        ]
      },
      {
        "prefix": [
          "0\u00000   \"\u0000\" \"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\" \"\u0000\" \"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(@[\\w-]+)(?:\\s*(\\w+))*",
    "inputs": [
      {
        "prefix": [
          "@aa"
        ],
        "suffix": "-a@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(([^\"]*| \\\\\")*)\"$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "&h@\t&h@\t]9l&`ml}^",
        "pump": [
          "&h@\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\"\\\\]+|\\\\.)*)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Name Servers: \\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Name Servers: \\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name Servers: \n"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Name Servers: \\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name Servers: \n"
        ],
        "suffix": " ",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(!--|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*>)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          " a=\\x09!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "--\t",
        "pump": [
          "\ta=\ta"
        ]
      },
      {
        "prefix": [
          "as"
        ],
        "suffix": "",
        "pump": [
          "s-s"
        ]
      },
      {
        "prefix": [
          "w\n.=w\n.="
        ],
        "suffix": "\t w\n.=\t \t w\n.=\t \r\t h=\t w\n..h=\t ",
        "pump": [
          "\t w\n.=\t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\u001b\\]((?:.|;)*?)(\u0007)",
    "inputs": [
      {
        "prefix": [
          "\\x1b]"
        ],
        "suffix": "",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u001b]"
        ],
        "suffix": "\u001b",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u001b];"
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          "\u001b]\u001b\u001b\u001b]\u001b\u001b\u001b]]\u001b\u001b]\u001b\u001b]\u001b\u001b]]]\u001b\\}={?~{\b>>:>?>\b|~|<}{{:;<|{@;:\b\b}@@??|:"
        ],
        "suffix": ";;};?;;;};?;;~@;@:|",
        "pump": [
          ";;};?;"
        ]
      },
      {
        "prefix": [
          "\\x1b]"
        ],
        "suffix": "",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u001b]"
        ],
        "suffix": ";\u001b",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u001b];"
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:((`(?:([^\\n\\r\\\\`]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*`)))",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "a\\x00"
        ]
      },
      {
        "prefix": [
          "`a"
        ],
        "suffix": "ua\\u",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": " m6= m6=(/_}5]-{J",
        "pump": [
          " m6="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n *\\/\\/.*\\s*)* *lodash\\.isPlainObject *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a//\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ect",
        "pump": [
          "\n//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a//\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "n",
        "pump": [
          "\n//\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(\\\\[\\\\']|.+)+'\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "']"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000[']"
        ],
        "suffix": "",
        "pump": [
          "['][']"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "MDApMDApZHz_D4[:2K",
        "pump": [
          "MDAp"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\u0000\\d+\\u0000\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          "\u00000\u0000"
        ],
        "suffix": "\u00000\u00000",
        "pump": [
          "\t\u00000\u0000\t"
        ]
      },
      {
        "prefix": [
          "u0000du0000u0000du0000u0000du0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "su0000du0000"
        ]
      },
      {
        "prefix": [
          "\u00000\u0000"
        ],
        "suffix": "\u00000\u00000\u0000",
        "pump": [
          "\t\u00000\u0000\t"
        ]
      },
      {
        "prefix": [
          "u0000du0000u0000du0000u0000du0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "su0000du0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\u00000\u0000\u0000\t",
        "pump": [
          "\t\u00000\u0000\t"
        ]
      },
      {
        "prefix": [
          "u0000du0000u0000du0000s"
        ],
        "suffix": "\u0000",
        "pump": [
          "su0000du0000s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(( |\\t|\\r)*\\n( |\\t)*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\r",
        "pump": [
          " \n "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          " \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "info\\.GetReturnValue\\(\\)\\.Set\\(((\\n|.)+?)\\);",
    "inputs": [
      {
        "prefix": [
          "info.GetReturnValue().Set(!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "info.GetReturnValue().Set("
        ],
        "suffix": "e(",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "info.GetReturnValue().Set(j"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "info.GetReturnValue().Set("
        ],
        "suffix": "nf",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z_$]+[0-9a-zA-Z_$]*(\\.[a-zA-Z_$]+[0-9a-zA-Z_$]+)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0..",
        "pump": [
          ".aaa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\u0000",
        "pump": [
          ".aaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\\\(.|\\n))|([^'\\\\]))*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\n'",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "cigar:\\s+(.+)\\s+([0-9]+)\\s+([0-9]+)\\s+([\\+\\-\\.])\\s+(.+)\\s+([0-9]+)\\s+([0-9]+)\\s+([\\+\\-\\.])\\s+([^\\s]+)(\\s+(.*)\\s*)*",
    "inputs": [
      {
        "prefix": [
          "cigar:\ta\t0\t0\t+\ta\t0\t0\t+\ta\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "cigar:s\u0000s0s0s+s\u0000s0s0s+s\u0000s\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss\u0000"
        ]
      },
      {
        "prefix": [
          "cigar:\ta\t0\t0\t+\ta\t0\t0\t+\ta\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "cigar:s\u0000s0s0s+s\u0000s0s0s+s\u0000ss"
        ],
        "suffix": "\u0000",
        "pump": [
          "sss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\t)*\\n+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\u000b",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\r\t\t\t\t\r\r\r\t\t",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var noArgsEnum;|.+?noArgsEnum *=.+",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "a**/\nvar noArgsE",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a \\x00noArgsEnum=\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "a**/",
        "pump": [
          "a**a*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([a-z0-9\\-]+?)((?:\\s+?[^=]+?=(?:\"[^\"]*?\"|'[^']*?'|[^\\s>]*))*?)(\\s*\\/)?>|<\\/([a-z0-9\\-]+?)>|([^<]+)",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09\\x09="
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "</'=\t/\"",
        "pump": [
          "\t\ta="
        ]
      },
      {
        "prefix": [
          "<-ss"
        ],
        "suffix": "",
        "pump": [
          "s\u0000=ss"
        ]
      },
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09\\x09="
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "</a",
        "pump": [
          "\t\ta="
        ]
      },
      {
        "prefix": [
          "<-s"
        ],
        "suffix": "",
        "pump": [
          "s\u0000=s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?",
    "inputs": [
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": ".:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "d-"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "s:h..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "tp0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "d-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(?:\\s*\\n)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a\n",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(-|\\+)?(([0-9]+\\.[0-9]*)|(\\.[0-9]))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0.+",
        "pump": [
          "0.0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/(\\[.+\\])+\\n.*",
    "inputs": [
      {
        "prefix": [
          "//[!]"
        ],
        "suffix": "",
        "pump": [
          "[^][]]"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "a",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "//[/]"
        ],
        "suffix": "",
        "pump": [
          "[^][]]"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "a",
        "pump": [
          "[a][a]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "decoders: ([\\w\\s_]+)+",
    "inputs": [
      {
        "prefix": [
          "decoders: a"
        ],
        "suffix": "er:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "decoders: ___"
        ],
        "suffix": "\u0000",
        "pump": [
          "w_"
        ]
      },
      {
        "prefix": [
          "decoders: a"
        ],
        "suffix": "s:decoder",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "decoders: __"
        ],
        "suffix": "\u0000",
        "pump": [
          "w_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^&?(?:.*::)*(\\w+)\\s*[(]?.*[)]?\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "&"
        ],
        "suffix": "a::",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "::\u0000"
        ]
      },
      {
        "prefix": [
          "Q::::?"
        ],
        "suffix": ":::::::::::::::::?uf[`cHNAOGTZSQ|{?{?=;=\b<><}\b~>@{<<\b~~|?\b:",
        "pump": [
          "::::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain Servers in listed order:\\n((?:.+\\n)+)",
    "inputs": [
      {
        "prefix": [
          "Domain Servers in listed order:\n"
        ],
        "suffix": "i",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain Servers in listed order:\n"
        ],
        "suffix": " la",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "__version__ = [\\'\\\"]v((\\d+\\.?)+)[\\'\\\"]",
    "inputs": [
      {
        "prefix": [
          "__version__ = 'v0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "__version__ = \"v0"
        ],
        "suffix": "0.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "__version__ = \"vddd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "__version__ = \"v"
        ],
        "suffix": "048504851341922872",
        "pump": [
          "0485"
        ]
      },
      {
        "prefix": [
          "__version__ = 'v0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "__version__ = \"v0"
        ],
        "suffix": "n_",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "__version__ = \"vddd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          " __version__ = \"v"
        ],
        "suffix": "021802180453820217",
        "pump": [
          "0218"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[(?:\\\\.|[^\\]])*?\\]|\\\\.|\\(\\?[:=!]|(\\()",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "?a]?",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "?]a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "[^"
        ],
        "suffix": "\\:*\\9\\i\\\\:*\\9\\i\\ie\\|\\^[\\cpg\\|\\^[\\!xNC\\?d",
        "pump": [
          "\\:*\\9\\i\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:use\\s+[^(;]+;\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "us;\t",
        "pump": [
          "use\t\ta;\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e\t",
        "pump": [
          "use\t\ta;\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{(?:.|\\s)+\\}",
    "inputs": [
      {
        "prefix": [
          "{!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "}a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "{{{{{{{{\r\r\b"
        ],
        "suffix": "\t\r\t\n\t\t\t\r\t\n\t\t\n\t\t\r\r\r\n\t\r\b\b\r\t\r",
        "pump": [
          "\t\r\t\n\t\t"
        ]
      },
      {
        "prefix": [
          "{|"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "}\t",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "\t\n \r \t\t\n \r \t\n\n\r \n\t\n\n \t \n\n\r\n  \n\t",
        "pump": [
          "\t\n \r \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\n|#[^\\n]*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#\n\n##\n\n#\n\n\n#\n\n#\n#\n\n\n\n#\n^\n",
        "pump": [
          "#\n\n#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((http|ftp)(s)?:\\/\\/([^\\s\\\"]|[\\~\\?\\&\\@\\=])+)",
    "inputs": [
      {
        "prefix": [
          "ftps://"
        ],
        "suffix": "\t",
        "pump": [
          "a&"
        ]
      },
      {
        "prefix": [
          "ftp://\u0000\""
        ],
        "suffix": "s",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "ftps://"
        ],
        "suffix": "ps:f\thtt",
        "pump": [
          "a&"
        ]
      },
      {
        "prefix": [
          "ftp://\u0000\""
        ],
        "suffix": "s",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w.=-]+\\@\\w+(?:[\\w.-]+\\.)+\\w+)",
    "inputs": [
      {
        "prefix": [
          "a@aa."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "-@.",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "-@w-\u0000-w"
        ],
        "suffix": "",
        "pump": [
          "w-w"
        ]
      },
      {
        "prefix": [
          "a@aa."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "-@$",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "-@w-\u0000."
        ],
        "suffix": "",
        "pump": [
          "w-\u0000."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain servers in listed order:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain servers in listed order:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain servers in listed order:\n"
        ],
        "suffix": "r",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain servers in listed order:\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain servers in listed order:\n"
        ],
        "suffix": " ord",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([[:ascii:]]+)*\\|[[:space:]]*([[:ascii:]]+)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "i||",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":c"
        ],
        "suffix": "\u0000",
        "pump": [
          "sc"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "iasciascisciscasci",
        "pump": [
          "iasc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[-+]?(\\d*,\\d*)+(?:\\.)?\\d*\\s*%$",
    "inputs": [
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",0,"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "++",
        "pump": [
          "0,0"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "",
        "pump": [
          "d,"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": ",2,29592,2,29592092959678,6709,786,,67,",
        "pump": [
          ",2,29592"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*\\n)*----- OUTPUT -----\\r?\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\s\\w]|_|[0-9])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "$0"
        ]
      },
      {
        "prefix": [
          "\u00000"
        ],
        "suffix": "s",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "$0"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "0\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " \"(?: \\\\. | \\\\\" | [^\"\\n])*\" ",
    "inputs": [
      {
        "prefix": [
          " \""
        ],
        "suffix": "",
        "pump": [
          " \\  "
        ]
      },
      {
        "prefix": [
          " \""
        ],
        "suffix": "a",
        "pump": [
          " \\\" "
        ]
      },
      {
        "prefix": [
          " \" "
        ],
        "suffix": "",
        "pump": [
          "\" "
        ]
      },
      {
        "prefix": [
          "\" \""
        ],
        "suffix": " \\   \\   \\   \\   \\   \\   \\   \\   \\   \\\\  \\   \\   \\   \\   \r     \\   \r   \\  ",
        "pump": [
          " \\   \\   \\   \\  "
        ]
      },
      {
        "prefix": [
          " \""
        ],
        "suffix": "",
        "pump": [
          " \\  "
        ]
      },
      {
        "prefix": [
          " \""
        ],
        "suffix": "a \"",
        "pump": [
          " \\\" "
        ]
      },
      {
        "prefix": [
          " \" "
        ],
        "suffix": "",
        "pump": [
          "\" "
        ]
      },
      {
        "prefix": [
          "v \" \\   \\     \\"
        ],
        "suffix": " \\   \\   \\   \\   \\   \\   \\   \\     \\     \\ \\   \\   \\   \\ \\    ",
        "pump": [
          " \\   \\   \\   \\  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":link([\\s]*)+",
    "inputs": [
      {
        "prefix": [
          ":link"
        ],
        "suffix": "in\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ":link"
        ],
        "suffix": "\t:",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\\\.|[^\\s>])+|[\\s>])",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\t\t",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ">",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ">",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((([#\\.]?[\\w-]+)?(\\[([\\w!]+(=\"([^\"]|\\\\\")+\")? {0,})+\\])?)+)",
    "inputs": [
      {
        "prefix": [
          ".a#a[!"
        ],
        "suffix": "",
        "pump": [
          "_!"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "!",
        "pump": [
          "[a]aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\u0000",
        "pump": [
          "w--"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "02ff02ffEB3eeeEf1",
        "pump": [
          "02ff"
        ]
      },
      {
        "prefix": [
          ".a#a[!"
        ],
        "suffix": "",
        "pump": [
          "_!"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "[",
        "pump": [
          "[a]aa"
        ]
      },
      {
        "prefix": [
          "-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-w"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "ffniffniyutcwpuse",
        "pump": [
          "ffni"
        ]
      },
      {
        "prefix": [
          ".a#a[!"
        ],
        "suffix": "",
        "pump": [
          "_!"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "!=",
        "pump": [
          "[a]aa"
        ]
      },
      {
        "prefix": [
          "-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-w"
        ]
      },
      {
        "prefix": [
          "b0["
        ],
        "suffix": "4829482957839878",
        "pump": [
          "4829"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title class=\"klass\">Default Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "\"",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "e</ti",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(Add|Remove).*?(?:(?:To|From).+?)*(?:To|From)((?:To|From)?.*?)$",
    "inputs": [
      {
        "prefix": [
          "Add"
        ],
        "suffix": "Toa",
        "pump": [
          "ToaToa"
        ]
      },
      {
        "prefix": [
          "AddTo\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "From\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "Add"
        ],
        "suffix": "ToaT",
        "pump": [
          "ToaToa"
        ]
      },
      {
        "prefix": [
          "AddTo\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "From\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\d+(\\.?\\d?)*\\s*",
    "inputs": [
      {
        "prefix": [
          "0."
        ],
        "suffix": "0.\t.",
        "pump": [
          "0.."
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s*(\\.?\\w+)\\s*\\:\\s*((\\w+\\.*)+)\\s*(\\|\\s*(\\w+)\\s*)?);?)",
    "inputs": [
      {
        "prefix": [
          ".a:a"
        ],
        "suffix": "|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w:ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ".a:a"
        ],
        "suffix": "|$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w:ww\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "w\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^s\\d(-s\\d)??(:c\\d{1,4}((.c\\d{1,4})?,c\\d{1,4})*(.c\\d{1,4})?(,c\\d{1,4}(.c\\d{1,4})?)*)?$",
    "inputs": [
      {
        "prefix": [
          "s0:c0"
        ],
        "suffix": ":",
        "pump": [
          ",c0,c0"
        ]
      },
      {
        "prefix": [
          "s0:c0"
        ],
        "suffix": "00c0,",
        "pump": [
          "ac0,c0,c0,c0"
        ]
      },
      {
        "prefix": [
          "sd:cd,cd"
        ],
        "suffix": "\u0000",
        "pump": [
          ",cd,cd"
        ]
      },
      {
        "prefix": [
          "s3:c11,c1,c1,c13,c1,c1"
        ],
        "suffix": "1,c1,c1,c1,c13,c1,c31,",
        "pump": [
          "1,c1,c1,c1,c"
        ]
      },
      {
        "prefix": [
          "s0:c0"
        ],
        "suffix": ":",
        "pump": [
          ",c0,c0"
        ]
      },
      {
        "prefix": [
          "s0:c0"
        ],
        "suffix": "0:c",
        "pump": [
          "ac0,c0,c0,c0"
        ]
      },
      {
        "prefix": [
          "sd:cd,cd"
        ],
        "suffix": "\u0000",
        "pump": [
          ",cd,cd"
        ]
      },
      {
        "prefix": [
          "s0:c"
        ],
        "suffix": "0,c0,c00,c0,c00,c0,c00,c0,c00,c0,c00,c03175627600000,c000,c0,c7,c0s",
        "pump": [
          "0,c0,c00,c0,c0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\w-]+(\\.[\\w\\s-]+|\\(.*\\))*)\\s+AS\\s*([\\w-]+)$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "A\t",
        "pump": [
          ".a()()"
        ]
      },
      {
        "prefix": [
          "-\u0000s"
        ],
        "suffix": "",
        "pump": [
          "w-\u0000s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\"\\\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ":='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "\"a\"\\\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ":='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z](?:[A-Za-z0-9._-]|-)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "-A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\^((?:\\\\[^a-zA-Z0-9]|[^\\\\\\[\\]\\^$*+?.()|{}]+)*)",
    "inputs": [
      {
        "prefix": [
          "^a"
        ],
        "suffix": "\\a^",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*XImage;\\n",
    "inputs": [
      {
        "prefix": [
          "typedef struct {\\x0a"
        ],
        "suffix": "",
        "pump": [
          "~\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "typedef struct{\n"
        ],
        "suffix": "e;\n{a",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "%(\\\\[\\\\%]|[^%])*%[egimosx]*",
    "inputs": [
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "%a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "%a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\n([ ]*)+(\\*|\\d+\\.) /g",
    "inputs": [
      {
        "prefix": [
          "/\\x0a"
        ],
        "suffix": "",
        "pump": [
          " "
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "  *.",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "/\n"
        ],
        "suffix": "                 ",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "/\\x0a"
        ],
        "suffix": "",
        "pump": [
          " "
        ]
      },
      {
        "prefix": [
          "/\n"
        ],
        "suffix": " ",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "//\n"
        ],
        "suffix": "                 ",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<i>((.|\\n|\\r\\n)*?)<\\/i>",
    "inputs": [
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "</i",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "i\r\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:(?:.*)/)*([0-9A-Z][0-9a-zA-Z_]*))Controller\\..+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a/0Contr",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-Za-z]+[0-9A-Za-z]*(\\\\.[A-Za-z]+[0-9A-Za-z]*)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\$0",
        "pump": [
          "\\aaa"
        ]
      },
      {
        "prefix": [
          "A.A.a"
        ],
        "suffix": "\u0000",
        "pump": [
          "A.a"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "00$a0",
        "pump": [
          "\\aaa"
        ]
      },
      {
        "prefix": [
          "A.A.Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "A.Aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"\"\"(?:(?:\"|\"\")?(?:[^\"\\\\]|#))*\"\"\"",
    "inputs": [
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "#"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "a\"\"\"\"",
        "pump": [
          "#"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "#"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "a\"\"\"\"",
        "pump": [
          "#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z0-9\\-+~_%]+[a-zA-Z0-9\\-+~_%.]*@([a-z0-9]+[a-z0-9\\-]*\\.)+[a-z][a-z]+",
    "inputs": [
      {
        "prefix": [
          "~.@a."
        ],
        "suffix": "",
        "pump": [
          "00."
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a0.a0-",
        "pump": [
          "aa."
        ]
      },
      {
        "prefix": [
          "%@0\u00000"
        ],
        "suffix": "",
        "pump": [
          "0\u00000"
        ]
      },
      {
        "prefix": [
          "~.~@a."
        ],
        "suffix": "",
        "pump": [
          "00."
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a@a..",
        "pump": [
          "aa."
        ]
      },
      {
        "prefix": [
          "%@0\u000000"
        ],
        "suffix": "",
        "pump": [
          "000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[(.*)\\]((\\.[a-zA-Z]{1}.*?\\))+))",
    "inputs": [
      {
        "prefix": [
          "[]"
        ],
        "suffix": "]",
        "pump": [
          ".a).a)"
        ]
      },
      {
        "prefix": [
          "[]"
        ],
        "suffix": "a",
        "pump": [
          ".a).a)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-z0-9!#$%&'*+/=?^_{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
    "inputs": [
      {
        "prefix": [
          "a.a@[250.250.250.2500:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "2a\"@[26.26.26.",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "a\"a\"@a-.a@a.a!\\x0ea\"@[250.250.250.2500:\\x7f"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "-",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(ipad)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)",
    "inputs": [
      {
        "prefix": [
          "ipados"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "ipadosa"
        ],
        "suffix": "\tl",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ipadosw"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "Hipados\r"
        ],
        "suffix": "operoperaCTJILlike",
        "pump": [
          "oper"
        ]
      },
      {
        "prefix": [
          "ipados"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "ipadosa"
        ],
        "suffix": "ma\tio",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ipadosw"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "ipad?ipa"
        ],
        "suffix": "drosdrosjlwxmnrplbfwl",
        "pump": [
          "dros"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z]+(_*[a-zA-Z0-9]+)*",
    "inputs": [
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a0_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s+([\\w.-]+)\\s+\\((.+)\\)\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\ta\t(a)\n"
        ],
        "suffix": "a",
        "pump": [
          "\ta\t(a)\n\ta\t(a)\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\ta\t(a)\n\ta\t(a)\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\x1b\\[((?:\\d{1,3};?)+|)m",
    "inputs": [
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "1930193029216227317",
        "pump": [
          "1930"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "8238823823493823496",
        "pump": [
          "8238"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(>[^\\n]*\\n?)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a>"
        ],
        "suffix": "\\x0a!",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": ">\n\n",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": ">n>]>\\>n>]>\\>]>\\>]>\\?n\tn\r?+n>]>\\ZHBcf2HweA\br0qovzTNXn3mYx4JdbJ65boQY5boQY7ku37T8r{VZl>l7B\nn",
        "pump": [
          ">n>]>\\"
        ]
      },
      {
        "prefix": [
          "\\x0a>"
        ],
        "suffix": "\\x0a!",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": ">\na\n",
        "pump": [
          ">>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\d.\\s]*The (?:\\w+, )*(?:(?:\\w+ )?and )*\\w+ elements?\\s*$",
    "inputs": [
      {
        "prefix": [
          "The "
        ],
        "suffix": "",
        "pump": [
          "and and "
        ]
      },
      {
        "prefix": [
          "The "
        ],
        "suffix": "e",
        "pump": [
          "a and and and "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^---\\n((?:.*\\n)*)---",
    "inputs": [
      {
        "prefix": [
          "---\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "---\n"
        ],
        "suffix": "-a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]{1}([_]{0,1}[a-zA-Z0-9]{1,})+$",
    "inputs": [
      {
        "prefix": [
          "aa"
        ],
        "suffix": "!",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "aa_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aavbaavbCUaavbCUruxB}",
        "pump": [
          "aavb"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "aa_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "al5mal5mKhgdcTc7WVUX-",
        "pump": [
          "al5m"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s<((\\/[^>]+?){2,})>",
    "inputs": [
      {
        "prefix": [
          " </?/0"
        ],
        "suffix": "",
        "pump": [
          "/!/0"
        ]
      },
      {
        "prefix": [
          "\t</a"
        ],
        "suffix": "<a>>",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "s</\u0000/\u0000/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          " </?/0"
        ],
        "suffix": "",
        "pump": [
          "/!/0"
        ]
      },
      {
        "prefix": [
          "\t</a"
        ],
        "suffix": "<",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "s</\u0000/\u0000/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          " </!"
        ],
        "suffix": "",
        "pump": [
          "/!/0"
        ]
      },
      {
        "prefix": [
          "\t<"
        ],
        "suffix": "/",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "s</\u0000/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          "\r\n<"
        ],
        "suffix": "/\r/!\n</!\r//\r/!\n</!\r/!8O\n</!/\n\r/!#U~v@4s|y\b~ZP\n</\r/!8O/!\r/!8O\n<",
        "pump": [
          "/\r/!\n</!\r/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?://([-\\w\\.]+)+(:\\d+)?(/([\\S+]*(\\?\\S+)?)?)?)",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps\tht",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*-\\w+\\s+[\\d\\.]+\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "-a .\\x09-0\\x09."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-a.",
        "pump": [
          "\t-a\t.\t"
        ]
      },
      {
        "prefix": [
          "-ws."
        ],
        "suffix": "\u0000",
        "pump": [
          "s-ws."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-a\t9\t\n \r   \t\t\r-a\t9\t\n \r   \t\t\r\t\t\r\t \t \n \n\r\r\n\t\t\n\r\n\r\t\t\r-a\t22\t  \n\t\n \r\r  \t\n\t\t\t\n\t\r\t\r\r\r \r\n  \n\r   \n\t\r\n\r\t \t-",
        "pump": [
          "-a\t9\t\n \r   \t\t\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^UID:.*\\r\\n(?: .*\\r\\n)*",
    "inputs": [
      {
        "prefix": [
          "UID:\r\n"
        ],
        "suffix": "U\r",
        "pump": [
          " \r\n \r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*[\\n]+)+?([ \\t]*)",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t\u000b ",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\@.*\\@)*\\s*\\$\\(mkinstalldirs\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "n",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          "@$@@@@@@@r"
        ],
        "suffix": "@@@@@r(m@@@rsta@@^\\(m$@@@rs@",
        "pump": [
          "@@@@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n.*object-model(.|\\n)*object-model.*",
    "inputs": [
      {
        "prefix": [
          "\\x0aobject-model"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\nobject-model"
        ],
        "suffix": "object-mod",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "\\x0aobject-model"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\nobject-model"
        ],
        "suffix": "objec",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "DESCRIPTION:.*?\\n(?:\\s+.*?\\n)*",
    "inputs": [
      {
        "prefix": [
          "DESCRIPTION:\n"
        ],
        "suffix": "ESCa",
        "pump": [
          "\t\n\t\n"
        ]
      },
      {
        "prefix": [
          "DESCRIPTION:\n"
        ],
        "suffix": "CRI",
        "pump": [
          "\t\n\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\\/\\s-]?([\\w\\.-]+)*",
    "inputs": [
      {
        "prefix": [
          "linpus\ta"
        ],
        "suffix": "b\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arch."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "linpus\ta"
        ],
        "suffix": "k\t$umpscfaldgento",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arch-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^# yamllint disable( rule:\\S+)*\\s*$",
    "inputs": [
      {
        "prefix": [
          "# yamllint disable"
        ],
        "suffix": "n\t:",
        "pump": [
          " rule:a rule:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n        ^\n        -?          # number can start with minus, but can't start with plus\n                    # is scalar starts with plus it is not number\n\n        [0-9]+      # then there should be some numbers\n\n        ( \\. [0-9]+ )?      # there can be decimal part, which is optional\n\n        ( e [+-] [0-9]+ )?  # then there can be optional exponential notation part\n        \\z\n    ",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^\\#.*(\\\\\\n.*)*",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "a",
        "pump": [
          "\\\n\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(specify|it)\\s+('(.*)'|\"(.*)\")+\\s*(\\{|do)",
    "inputs": [
      {
        "prefix": [
          "specify ''"
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "it\t"
        ],
        "suffix": "\t",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "it\t"
        ],
        "suffix": "'''''''''''''''dit\t''\tf25bf8Ce6aff5629CCEE7cB2BCbFDc1935d58b'''aff5629CCEE7cB2BCbFD'''''\t\b",
        "pump": [
          "''''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([[:cntrl:]]|[[:space:]])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          ":s"
        ],
        "suffix": "\u0000",
        "pump": [
          "cs"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "l$",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "\u0000",
        "pump": [
          "c:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\d+\\.\\d+\\.\\d+([-|+].*)*$",
    "inputs": [
      {
        "prefix": [
          "0.0.0"
        ],
        "suffix": "a",
        "pump": [
          "++"
        ]
      },
      {
        "prefix": [
          "d\u0000d\u0000d+"
        ],
        "suffix": "\u0000",
        "pump": [
          "|+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}",
    "inputs": [
      {
        "prefix": [
          "{a:{"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "h:j+h:j+Af(Q,Hsl&Kd",
        "pump": [
          "h:j+"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "a:a{a:",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "function ([^( ]+)+",
    "inputs": [
      {
        "prefix": [
          "function a"
        ],
        "suffix": "f ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "function \u0000\u0000"
        ],
        "suffix": " ",
        "pump": [
          ")\u0000"
        ]
      },
      {
        "prefix": [
          "function a"
        ],
        "suffix": "  func",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "function \u0000\u0000"
        ],
        "suffix": " ",
        "pump": [
          ")\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+(?:\\.\\d+)?)\\s*([^\\d]+)*",
    "inputs": [
      {
        "prefix": [
          "0a"
        ],
        "suffix": "0\t0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d\u0000"
        ],
        "suffix": "d",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d\u0000"
        ],
        "suffix": "d",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^crop-([\\d]{1,3})-([\\d]{1,3})*$",
    "inputs": [
      {
        "prefix": [
          "crop-0-"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "crop-0-"
        ],
        "suffix": "p-00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "crop-d-dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "crop-1-"
        ],
        "suffix": "160916093614477843560c",
        "pump": [
          "1609"
        ]
      },
      {
        "prefix": [
          "crop-0-"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "crop-0-0"
        ],
        "suffix": "p",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "crop-d-d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "crop-7-"
        ],
        "suffix": "7645764530335019895-",
        "pump": [
          "7645"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([ \\t,]+|and)*",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\tann",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t,"
        ],
        "suffix": "\u0000",
        "pump": [
          " ,"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "\u0000",
        "pump": [
          " ,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*((.|\\n)*)\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(\\\\[\\\\']|.+)+'\\s*.*",
    "inputs": [
      {
        "prefix": [
          "']"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000[']"
        ],
        "suffix": "",
        "pump": [
          "['][']"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "[Xjj[Xjjc+aK8/tygw",
        "pump": [
          "[Xjj"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[\\/]?[a-zA-Z0-9\\_]*)*)",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "#",
        "pump": [
          "a//"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "$",
        "pump": [
          "a//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[([0-9]*(\\.[0-9]+)?)?(\\s*,\\s*[0-9]*(\\.[0-9]+)?)*\\]$",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          ",\\x09,"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "[0",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": ",\t\r\n\r \r\n\n ,\t\r\n\r \r\n\n \r\r,\r\t\r \r \r\n\n \r\r,,\t\r\t\r \r \r\n",
        "pump": [
          ",\t\r\n\r \r\n\n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*)*\\s*mixin\\(lodash\\).+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t//mixin",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "#/////BT>0y8aY1//BT>0y8=01FIYa!*"
        ],
        "suffix": "/////BT8+na;///////BT8+na;//BT>0y8+\"Iifr}+Y\b5uMFl||a?L.2",
        "pump": [
          "/////BT8+na;//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t//m/",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          "//\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/////////////mix///mixin/dash).///mixin(ash//m///lodas",
        "pump": [
          "//////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z_][a-zA-Z0-9_]*|\"[^\"]*\"|'[^']*'|[0-9]+|\\*|\\?|\\||&|\\(|\\)|\\{|\\}|::|:|,|=>|->|\\.\\.\\.|\\s+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "$",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "KOWdKOWd9ib0ntGo}'",
        "pump": [
          "KOWd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\.|\"(?:\\\\.|[^\"])*\"|\\([^)]*\\)|[^,])+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "),\",",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\",",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "\"#P77\rG&\nR\\*W%*S\\V\\jVMI)\\qr[??|S[Oi.?(\n&\nR\\*W%*SSL\\ViOspNoT\n}-|5t`SSL*W%"
        ],
        "suffix": "\\(Y\\O\\*W%*S\\\\(Y\\O\\*W%*S\\V\\jV",
        "pump": [
          "\\(Y\\O\\*W%*S\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<meta name=\"title\"([^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<meta name=\"title\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"title\""
        ],
        "suffix": "tl",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "9<meta name=\"ti"
        ],
        "suffix": "tle\"tle\"q6O~*\n\b3Ym\r{aR",
        "pump": [
          "tle\""
        ]
      },
      {
        "prefix": [
          "<meta name=\"title\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"title\""
        ],
        "suffix": "it",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<meta name=\"ti"
        ],
        "suffix": "tle\"tle\"h)eI(\tmIo%e(_x",
        "pump": [
          "tle\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-('([^']+|'')*'|)",
    "inputs": [
      {
        "prefix": [
          "-'a"
        ],
        "suffix": "-a'-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-'"
        ],
        "suffix": ";<`&;<`&^_*-:_:<.*=",
        "pump": [
          ";<`&"
        ]
      },
      {
        "prefix": [
          "-'a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-'"
        ],
        "suffix": "thhgthhgdvrdvryixn",
        "pump": [
          "thhg"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(http|https|socket)://([0-9a-zA-Z]+\\.?)+:\\d+",
    "inputs": [
      {
        "prefix": [
          "http://0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "http://a"
        ],
        "suffix": "0a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "SFzxSFzxIAxuiiczAt",
        "pump": [
          "SFzx"
        ]
      },
      {
        "prefix": [
          "http://t"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "http://a"
        ],
        "suffix": "ets:https:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":https://"
        ],
        "suffix": "GSREGSRETYVFQRCEAM",
        "pump": [
          "GSRE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "gpgsig -----BEGIN PGP SIGNATURE-----[\\n\\r](.*[\\n\\r])*? -----END PGP SIGNATURE-----[\\n\\r]",
    "inputs": [
      {
        "prefix": [
          "gpgsig -----BEGIN PGP SIGNATURE-----\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "gpgsig -----BEGIN PGP SIGNATURE-----\n"
        ],
        "suffix": "N PG",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "gpgsig -----BEGIN PGP SIGNATURE-----\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "gpgsig -----BEGIN PGP SIGNATURE-----\n"
        ],
        "suffix": "ND PGP SIGNAT",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:'(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^'\\\\])*')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x09"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'a'\t",
        "pump": [
          "\\\t"
        ]
      },
      {
        "prefix": [
          "'?"
        ],
        "suffix": "\\\t\\\t\\\t\\\t\\\t\\\t\\\t\\\tX\\\t?\\\tYC\b7|86brlpsmzubhdv\\\t?\\\tX]c;X^Q<v\ruoUtvbPsEjUL5csfpgsuKp975NG5v",
        "pump": [
          "\\\t\\\t\\\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":\\[([^:]+:[^:]+)+\\]",
    "inputs": [
      {
        "prefix": [
          ":[;:!"
        ],
        "suffix": "",
        "pump": [
          ";:!^^:!"
        ]
      },
      {
        "prefix": [
          ":["
        ],
        "suffix": "]a::",
        "pump": [
          "a:aa"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "[+:[+++H~1|e[+:[+++H~1|ekIcM~BszK<w=9IJ1AfC5Xc=a{V97S9|sL:vgdwL8IcM~BszK<w=9IJ1AfC5Xc=a{V97S9|sL",
        "pump": [
          "[+:[+++H~1|e"
        ]
      },
      {
        "prefix": [
          ":[;:\\"
        ],
        "suffix": "",
        "pump": [
          ";:!^^:!"
        ]
      },
      {
        "prefix": [
          ":["
        ],
        "suffix": "]a",
        "pump": [
          "a:aa"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "[\\:O;tIH:[lr[\\:O;tIH:[lrzKFnCjgZKW:O;tIH:[lrzKFnCjgZKWvze",
        "pump": [
          "[\\:O;tIH:[lr"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\{+((?:.|\\n)*?)\\}+$",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "{",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r\\n?|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*(((y{1,4}|m{1,5}|d{1,4}|h{1,2}|s{1,2}).*)+).*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "yy"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "yy"
        ]
      },
      {
        "prefix": [
          "dhh"
        ],
        "suffix": "",
        "pump": [
          "hhh"
        ]
      },
      {
        "prefix": [
          "y"
        ],
        "suffix": "a",
        "pump": [
          "yy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\033\\[(\\d+)*m",
    "inputs": [
      {
        "prefix": [
          "\\x1b["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "\u001b[[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b\u001b["
        ],
        "suffix": "630263029025826586",
        "pump": [
          "6302"
        ]
      },
      {
        "prefix": [
          "\\x1b["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "0\u001b[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "R\u001b["
        ],
        "suffix": "217421747228452490",
        "pump": [
          "2174"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$",
    "inputs": [
      {
        "prefix": [
          ":a: "
        ],
        "suffix": "a",
        "pump": [
          " +\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n *\\/\\/.*\\s*)* *lodash\\.forOwn *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a//\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " /",
        "pump": [
          "\n//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n//  \n//i\t \t\n//  \n//i\t \t\n// \n //e5Aaaeh6E1eE1A0e5AaaeE1 /  \n//iiF~AuKX@Fc@qkyOk{t \t \t\r\n\r \n\t\n\t",
        "pump": [
          "\n//  \n//i\t \t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a//\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " /",
        "pump": [
          "\n//\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:\\s|\\n)+'",
    "inputs": [
      {
        "prefix": [
          "'\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'\n",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "'Des<u{z'\n\n\t \r\t\n\t \n \n\r\n \r"
        ],
        "suffix": "\n\n\n\n\n\n\n\n \t\t\t\t \n\t",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "'\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "''''\n\r\n\n\t\t\t \r \r\t\n\r\n\t\r\t\r"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n \t  \t\t\n\r",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*public\\/scripts\\/templates\\/foo.ejs",
    "inputs": [
      {
        "prefix": [
          "Views!Foo = Backbone!View!extend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "ie",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "ViewsVFoo = BackboneVViewsextend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "mp",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+.)*\\d+:\\d+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "000;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0a:",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "4484448464716552809602",
        "pump": [
          "4484"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "000;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0:a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d"
        ],
        "suffix": "",
        "pump": [
          "dd\u0000d"
        ]
      },
      {
        "prefix": [
          "9B54a9H"
        ],
        "suffix": "947139947139301391394",
        "pump": [
          "947139"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(module)\\s+((?:(?:::)?[A-Z]\\w*)+)",
    "inputs": [
      {
        "prefix": [
          "module\t"
        ],
        "suffix": ":a",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "module\t"
        ],
        "suffix": "e\t::",
        "pump": [
          "::AA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(@element.*?\\{([^}]*?\\{[^}]*?\\}[^}]*?)*\\}).*",
    "inputs": [
      {
        "prefix": [
          "@element{"
        ],
        "suffix": "a",
        "pump": [
          "{}{{}"
        ]
      },
      {
        "prefix": [
          "@element{"
        ],
        "suffix": "a",
        "pump": [
          "{}{{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\\\w!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[\\\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\\\w](?:[\\\\w-]*[\\\\w])?\\\\.)+[a-zA-Z0-9](?:[\\\\w-]*[\\\\w])?",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\{!\\\\!"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\$\\\\\\",
        "pump": [
          "\\a$\\\\$$"
        ]
      },
      {
        "prefix": [
          "\\\\\\%&'*#+"
        ],
        "suffix": "\\\\\\\\\\w!\\\\\\\\\\\\w!\\w!#\\=\\=?^\\%&\\=\\",
        "pump": [
          "\\\\\\\\\\w!\\"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\{!\\\\!"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\ww-@\\-\\-",
        "pump": [
          "\\a$\\\\$$"
        ]
      },
      {
        "prefix": [
          "@\\\\w!#"
        ],
        "suffix": "$%\\\\w!\\$%\\$%\\\\w!\\$%\\\\w\\%&'*+&'*w!#$*w!#$\\w!#$%&'*+*\\@",
        "pump": [
          "$%\\\\w!\\$%\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Ā(((.*)*)*x)",
    "inputs": [
      {
        "prefix": [
          "\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "Ā"
        ],
        "suffix": "Ā",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ā2f@Ā2f@w ~>",
        "pump": [
          "Ā2f@"
        ]
      },
      {
        "prefix": [
          "\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "Ā"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "HĀklHĀklR;prZ",
        "pump": [
          "HĀkl"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\pL|\\pN)+([- _.]+|\\pN+|\\pL+)+$",
    "inputs": [
      {
        "prefix": [
          "0 "
        ],
        "suffix": "#",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "pL _"
        ],
        "suffix": "\u0000",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "FGZKFGZKBXDZWTDZFC\n\n",
        "pump": [
          "FGZK"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\\\(.|\\n))|([^\"\\\\]))*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\"",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9a-z]+[0-9a-z\\-]+\\.)+[0-9a-z]+[0-9a-z\\-]+$",
    "inputs": [
      {
        "prefix": [
          "aa."
        ],
        "suffix": "",
        "pump": [
          "000."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a..",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "0-\u00000"
        ],
        "suffix": "",
        "pump": [
          "0-\u00000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mmn.jtcfwvytmmn.jtcfwvytyjbvbvsgxnosgkadoqrlvkjxtzyeqnqedvxcmccoiqaraosyofjtkjxtzye.0eudxcmccoi.0",
        "pump": [
          "mmn.jtcfwvyt"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "< *(\\w+) *((?: *:?\\w+ *= *\\\"[^\\\"]*\\\" *)*) *(/)? *>",
    "inputs": [
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " :a=\"\" A=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": " a>\"/",
        "pump": [
          " a=\"\" "
        ]
      },
      {
        "prefix": [
          "<ww=\"\""
        ],
        "suffix": "",
        "pump": [
          " w=\"\""
        ]
      },
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " :a=\"\" A=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": " a>\"a=",
        "pump": [
          " a=\"\" "
        ]
      },
      {
        "prefix": [
          "<ww=\"\""
        ],
        "suffix": "",
        "pump": [
          " w=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^';]*|('[^']*')*)+;",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "fF(%fF(%bj8q|M\r,",
        "pump": [
          "fF(%"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "E\n2rE\n2r\\\r=#\\)BV",
        "pump": [
          "E\n2r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#EXT-X-STREAM-INF:(\\w+=\\w+)+",
    "inputs": [
      {
        "prefix": [
          "#EXT-X-STREAM-INF:"
        ],
        "suffix": "-I",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "#EXT-X-STREAM-INF:w=ww=ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww=ww"
        ]
      },
      {
        "prefix": [
          "#EXT-X-STREAM-INF:"
        ],
        "suffix": "-",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "#EXT-X-STREAM-INF:w=ww=w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww=w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#\\s*([a-zA-Z0-9_]+)\\s*\\{(\\s*(((\"([^\"\\\\]|\\\\\")*\")|\\[\\s*((\"([^\"\\\\]|\\\\\")*\"\\s*),?)*\\])\\s*,?\\s*)*\\s*)\\}",
    "inputs": [
      {
        "prefix": [
          "#a{"
        ],
        "suffix": "",
        "pump": [
          "\"\"\\x09"
        ]
      },
      {
        "prefix": [
          "#a{"
        ],
        "suffix": "#",
        "pump": [
          "\"\"\t"
        ]
      },
      {
        "prefix": [
          "#V{"
        ],
        "suffix": "\"#\"\r\n\t\r \n \t\n\"#\"\r\n\t\r \n \t\n\n\r\r\n\t\t\t\n\t\t\t   \t\r\t\t\t\n\r \n\t \t\t\t \r\r \t   \t\n\t\t\n",
        "pump": [
          "\"#\"\r\n\t\r \n \t\n"
        ]
      },
      {
        "prefix": [
          "#a{"
        ],
        "suffix": "",
        "pump": [
          "\"\"\\x09"
        ]
      },
      {
        "prefix": [
          "#a{"
        ],
        "suffix": "a",
        "pump": [
          "\"\"\t"
        ]
      },
      {
        "prefix": [
          "#aa{\"\""
        ],
        "suffix": "\r\"\"\r\t\r\"\" \t\r\"\"\r\t\r\"\" \t\t \n\t\n\r\n\r\r\r\t\t \r\t\n\r\n\r\n ",
        "pump": [
          "\r\"\"\r\t\r\"\" \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:(?:\\[[^\\]]+\\])|(?:[^\\s\\+\\>~:]))+)((?:::?[^\\s\\+\\>\\~\\(:]+(?:\\([^\\)]+\\))?)*\\s*[\\s\\+\\>\\~]?)\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[)::",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          ":\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[(\t]:",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000"
        ],
        "suffix": "()",
        "pump": [
          "?:\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\${([^{}]*|{[^{}]*})*}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(([^|\\n]+ *\\| *)+([^|\\n]+\\n))((:?\\-+:?\\|)+(:?\\-+:?)*\\n)((([^|\\n]+ *\\| *)+([^|\\n]+)\\n)+)",
    "inputs": [
      {
        "prefix": [
          "\\x0a}|"
        ],
        "suffix": "",
        "pump": [
          "! |"
        ]
      },
      {
        "prefix": [
          "\na|a\n:-:|:-"
        ],
        "suffix": "-|\n",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "\\x0a}|"
        ],
        "suffix": "",
        "pump": [
          "! |"
        ]
      },
      {
        "prefix": [
          "\na|a\n:-:|:-"
        ],
        "suffix": "-| a\n-a\na| a\n-|-:",
        "pump": [
          "--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "QChar(?:[^\\w]+(?:.*?))+?$",
    "inputs": [
      {
        "prefix": [
          "QChar$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "QChar$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([ \\t\\r]*(#.*)?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t#\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w|.)+@\\w+(\\.\\w+){1,2}",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$@a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "FI_oFI_o@Sal_PbNa",
        "pump": [
          "FI_o"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_>UY_>_>UY_>{l'[Y$QGU^1j",
        "pump": [
          "_>UY_>"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "w\u0000"
        ]
      },
      {
        "prefix": [
          ">"
        ],
        "suffix": "ZfCTZfCTwQ0PB,XR",
        "pump": [
          "ZfCT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\'((\\\\.|[^\\'])*)\\'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'\\=\\<==.()\\)!\\-]\\-?,[\\\"^@|%%\\&]"
        ],
        "suffix": ";\\\\\\.\\.|{\\)",
        "pump": [
          ";\\\\\\.\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<('[^']*'|'[^']*'|[^''>])*>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "'>a",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "<\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      },
      {
        "prefix": [
          "<<'<;<<<"
        ],
        "suffix": "''']''<'['''']''<'[']''')<<<<<<''<<<<)^RI'*8F\nn{[V\rD]*D3",
        "pump": [
          "''']''<'['"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "'>a",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "<''"
        ],
        "suffix": "",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "<'^''['^'>>*[^'|\t^"
        ],
        "suffix": "''(\b''['^'^)''''(\b''['^'^)'''|.*[\b>'\t']''?[[>*[>||\n']'^(]",
        "pump": [
          "''(\b''['^'^)''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(__[a-zA-Z0-9-_]+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "__a__a"
        ]
      },
      {
        "prefix": [
          "__-__A"
        ],
        "suffix": "\u0000",
        "pump": [
          "__-__A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "__a___a"
        ]
      },
      {
        "prefix": [
          "__-__a"
        ],
        "suffix": "\u0000",
        "pump": [
          "__-__a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\*\\s*(\\w+\\s*)+\\s*\\(at.*coffee.coffee:[0-9]+\\)",
    "inputs": [
      {
        "prefix": [
          "*0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "*a"
        ],
        "suffix": "e:0coffee",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "acofacoffee\t\n\t\t\n\t\r\n\t\r\t\t\t\n\r \r \r\r \t\t\r\r\n\r  \n\r\r\r \r\r\n\t\n\n\t\t",
        "pump": [
          "acof"
        ]
      },
      {
        "prefix": [
          "*0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "*a"
        ],
        "suffix": "e*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "cesscessrJLWJmRaLt",
        "pump": [
          "cess"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\@.*\\@)*\\s*(-?rm.*) \\S*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-@\t-@",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "",
        "pump": [
          "@@@@"
        ]
      },
      {
        "prefix": [
          "@@@@U"
        ],
        "suffix": "@@@@@@@@@@@@@@@>?:\b|<<\b@?~}=?|\b<>=<}}@@}@;@|>.^1F!Bfxb]Zbr@@@?~}=?|\b<>=<}\bg",
        "pump": [
          "@@@@@@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?:\\/\\/|www\\.)([-\\w\\.]+)+(:\\d+)?(\\/([\\w\\/_\\.]*(\\?\\S+)?)?)?",
    "inputs": [
      {
        "prefix": [
          "www.a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www.a"
        ],
        "suffix": "psa\th",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s*\\\"((?:\\\\.|.)*?)\\\"|\\s*(.+)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+:)?\\/(([^=]+=.[^=;]*;?)+)",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "===:",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "/\u0000=\u0000\u0000=\u0000\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000=\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "=:=",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "/\u0000=\u0000\u0000=\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000=\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*\\*((.*|\\s*)*?)\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/**",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/**h/**h@NmX%c$?*{&D",
        "pump": [
          "/**h"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"/**\"/**dg&Qm1gN\np\b#.m",
        "pump": [
          "\"/**"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* compute the power at this frequency *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "er",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "CKx~CKx~Z$'k!Y]pUw",
        "pump": [
          "CKx~"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*\\/\\*(?:.*)\\*\\/)*\\s*(\\w+)\\(\\{",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " /**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "({*",
        "pump": [
          "\t/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[?(?:[a-zA-Z0-9-:\\]_]+\\.?)+$",
    "inputs": [
      {
        "prefix": [
          "]"
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "lbePlbePTVgJlertIG+",
        "pump": [
          "lbeP"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"([^\\n\\r\\f\\\\\"]|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!\\0 "
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\\aaaa",
        "pump": [
          "\\aa\t"
        ]
      },
      {
        "prefix": [
          "\"[0-9a-f]]"
        ],
        "suffix": "",
        "pump": [
          "\t[0-9a-f]]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\ff\\ff\\f91\\ff\\ff\\f912575014279982959\\ff\\ff\\\"\\?>:};\b@|}~}\\r^^n\\r\\\"?-[,\\c)ogbe|nf\\\\ppfa) }9[f\\aca)^) }9\\aca",
        "pump": [
          "\\ff\\ff\\f91"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!\\0 "
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\aa\t"
        ]
      },
      {
        "prefix": [
          "\"[0-9a-f] "
        ],
        "suffix": "",
        "pump": [
          "[0-9a-f][0-9a-f] "
        ]
      },
      {
        "prefix": [
          "\"\\ff"
        ],
        "suffix": "fffff\\ffr\\fffff\\ffr\\fffffr\\ffffr\\^\\\\\\ffrf^\\^\\n\\ff\r\\n\\",
        "pump": [
          "fffff\\ffr\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r?\\n|\\r)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "jika( *|\\n*)*?\\((.*?)\\)",
    "inputs": [
      {
        "prefix": [
          "jika"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "jika"
        ],
        "suffix": "(",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "jika"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "jika"
        ],
        "suffix": "ikj",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(((\\w|_)+(\\.|::))+)((\\w|_)+)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_:.",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "_\u0000__"
        ],
        "suffix": "",
        "pump": [
          "w__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(\"(\\\\\\\\|[^\\\"])*\"|'(\\\\\\\\|[^\\'])*'|[;}{:])\\s*",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"\\'\\\"\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'\\"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a\"\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'\\"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'\\\\\\\\\\\\\""
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\eb\"}\\f34d463\\",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?\\??$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": ".:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.nhh.nhb3nhbthtphttp:",
        "pump": [
          "h.nh"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "tps://",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.aJh.aJOVG8Lnetp.aJ\\.",
        "pump": [
          "h.aJ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<style>(\\n|.)*?(<\\/style>)",
    "inputs": [
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "<styl",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*NOTE:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*NOTE:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*NOTE:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([\\s\\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "//bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//bower"
        ],
        "suffix": "\n///",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "// bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//bower"
        ],
        "suffix": "endbo",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{tr\\}\\}((.|\\n)*?)\\{\\{\\/tr\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{tr}}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{tr}}"
        ],
        "suffix": "tr}",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "{{tr}}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{tr}}"
        ],
        "suffix": "{tr}",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test4Module(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "mpo",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "imports: [ ["
        ],
        "suffix": " [   [  \n \t\t\t\t\t \r\t\t",
        "pump": [
          " [  "
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "Test4Test4ModuleModuleimports: [\b\n\t\r\r\b\b\r"
        ],
        "suffix": "\t\t\b\t\r\t\t\t\b\t\r\t\n\t\t\b\r\r\t\b\r\n\n\b\b\b\t\r\r\t\n\b\r\n\b\n\b",
        "pump": [
          "\t\t\b\t\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[[:blank:]]*(\\\\r?\\\\n)[[:blank:]]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "a\\r\\na"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\a",
        "pump": [
          "a\\r\\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*!START_DEBUG(?:.|[\\n\\r])*?END_DEBUG\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*!START_DEBUG"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*!START_DEBUG"
        ],
        "suffix": "E",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*!START_DEBUG"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*!START_DEBUG"
        ],
        "suffix": "END_D",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(.|\\n)*?>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*?)\\s*<-\\s*(.*?)(?:\\s*\\[upto\\s+(.*)\\])*$",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "^",
        "pump": [
          "[upto\\x09][upto\\x09]"
        ]
      },
      {
        "prefix": [
          "<-"
        ],
        "suffix": "\t",
        "pump": [
          "\t[upto\t\t]"
        ]
      },
      {
        "prefix": [
          "<-."
        ],
        "suffix": "\u0000",
        "pump": [
          "s."
        ]
      },
      {
        "prefix": [
          "<-"
        ],
        "suffix": "^",
        "pump": [
          "[upto\\x09][upto\\x09]"
        ]
      },
      {
        "prefix": [
          "<-"
        ],
        "suffix": "\t",
        "pump": [
          "\t[upto\t\t]"
        ]
      },
      {
        "prefix": [
          "<-)"
        ],
        "suffix": "\u0000",
        "pump": [
          "s)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\s|\\\\+)+",
    "inputs": [
      {
        "prefix": [
          "\\"
        ],
        "suffix": "ss",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^# VAGRANT-BEGIN(.|\\s)*# VAGRANT-END\\n",
    "inputs": [
      {
        "prefix": [
          "# VAGRANT-BEGIN"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "# VAGRANT-BEGIN"
        ],
        "suffix": "-E# VAG",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "# VAGRANT-BEGIN\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "# VAGRANT-BEGIN"
        ],
        "suffix": "#   #   V V V\t\r\t\r\t \n\t\n\t\n \n",
        "pump": [
          "#   "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\s*?)(\\r\\n|\\n|\\r)+([^\\S\\n\\r])+)",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\t\n",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\r\r\r\r\r\n\r\r\n\r\n\r\r\n\r\r\n\r\n\r"
        ],
        "suffix": "\r\n\r\n\r\n",
        "pump": [
          "\r\n\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s*script([^>]*)(?:\\/>|>((?:.|\\r?\\n)*?)<\\s*\\/script[^<>]*>)",
    "inputs": [
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "\ns/",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "i<></sc",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^arn:(\\w|-)*:iam::\\d+:role\\/?(\\w+|-|\\/|\\.)*$",
    "inputs": [
      {
        "prefix": [
          "arn::iam::0:role"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "arn::iam::0:role/a"
        ],
        "suffix": "::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arn::iam::1:"
        ],
        "suffix": "roleroletxzbtwlrzkqxyn:",
        "pump": [
          "role"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\_$a-z][\\_$a-z0-9]*(\\[.*?\\])*(\\.[\\_$a-z][\\_$a-z0-9]*(\\[.*?\\])*)*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "^",
        "pump": [
          ".a[][]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0\u0000",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s*(\\w+)\\s*\\:\\s*((\\w+\\.*)+)\\s*);?)",
    "inputs": [
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "\ta.:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w:ww\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "w\u0000"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": ";a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w:ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "trailer[\\s]*<<(.*)>>[\\s\\r\\n]+(?:[%].*[\\r\\n]+)*startxref[\\s\\r\\n]+",
    "inputs": [
      {
        "prefix": [
          "trailer<<>>\\x09"
        ],
        "suffix": "",
        "pump": [
          "%\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\t"
        ],
        "suffix": "r\t\n",
        "pump": [
          "%\n\n"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\\x09"
        ],
        "suffix": "",
        "pump": [
          "%\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "trailer<<>>\t"
        ],
        "suffix": "i",
        "pump": [
          "%\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([/\\w\\.-]*)+\\(([\\d]+),([\\d]+)\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Y3WoY3Wo3hAIxNh1V",
        "pump": [
          "Y3Wo"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "st9vst9vmt6vEa5jX_",
        "pump": [
          "st9v"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((http[s]?:\\/\\/)([a-zA-Z0-9_.-]+)(\\:(d+))?)?([\\/]?[~]?(\\.?[^.]+[~]?)*)",
    "inputs": [
      {
        "prefix": [
          "/~.a"
        ],
        "suffix": "/.:.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ".",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|[^\"'\\s\\,]+)+",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t\"\\\t'\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"."
        ],
        "suffix": "",
        "pump": [
          "\"\"."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\'\\s\\,\\s\\'\\s\\,\\s\\'\\s\\A\\s\\,8|x0{\\s\\\\?",
        "pump": [
          "\\'\\s\\,\\s"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+){1,}",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'((\\\\.|[^'])*)'|(\\d+)",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "0a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "0\\\\\\Q\\0\\\\\\Q\\\\.3cb0c\\po\\d+j\rchF|muZdmd+uZdmcj\rchF|muZdmcjj<F_9\\}@cH\\<~{8k*|()r9V).:{dfqG:)^4?SqZj@(LW",
        "pump": [
          "0\\\\\\Q\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(('([^']|'')*'|[^*#@0,.E])*)(\\*.)?((([#,]*[0,]*0+)(\\.0*[0-9]*#*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".0,",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "''''''''C\tZy-;\\''CG\tO''C\tZy-V''CG\tO_|''C\t",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$(random|dist_(chi_square|erlang|exponential|normal|poisson|t|uniform))\\b",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*(?:\\s|.)*?\\*/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*/*\r"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\r\t\r\t\r \r\t \n\n\r \r\r\r",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*/*3/*\t\r"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\b\t\t\t\t",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(\\?=([^()]|\\\\.)*?\\)$",
    "inputs": [
      {
        "prefix": [
          "(?="
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "(?="
        ],
        "suffix": "=",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "(?==\\\\\\="
        ],
        "suffix": "\\\\\\\\\\\\\\\\?=\\\\\\\\\\=\\  \r\r\t \n \n\t \n\r\t\r \r ",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "(?="
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "(?="
        ],
        "suffix": "(?)(?",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\\(?"
        ],
        "suffix": "=\\=\\\\\\=\\=\\\\\\?\\\\=\\?*|?:.\\\\?=BDVNRMYUTRXSNTKNUVJEYNYIUTRXSNT./\"{^\\\\?=BEYNYIMR",
        "pump": [
          "=\\=\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!-- node types -->\\n+)((?:\\s|.)*?)(\\n+<!-- \\/node types -->)",
    "inputs": [
      {
        "prefix": [
          "<!-- node types -->\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0b"
        ]
      },
      {
        "prefix": [
          "<!-- node types -->\n"
        ],
        "suffix": "-- node types --",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<!-- node types -->\n\n<<! /node ty-->\n\n<<! /no -->\n\n<<!"
        ],
        "suffix": " /node types   /node types  types -->",
        "pump": [
          " /node types  "
        ]
      },
      {
        "prefix": [
          "<!-- node types -->\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0b"
        ]
      },
      {
        "prefix": [
          "<!-- node types -->\n"
        ],
        "suffix": "-- n",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((-?\\w*)*)",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "#",
        "pump": [
          "a--"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "$",
        "pump": [
          "a--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+.+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w\u0000ww"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w\u0000ww"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\\\w-]{1,}\\\\s?){1,}$",
    "inputs": [
      {
        "prefix": [
          "w\\"
        ],
        "suffix": "!",
        "pump": [
          "-\\\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s-s",
        "pump": [
          "-\\"
        ]
      },
      {
        "prefix": [
          "-_"
        ],
        "suffix": "\u0000",
        "pump": [
          "B_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\\\w\\\\\\\\\\w\\\\w\\\\\\\\w\\\\\\\\w\\\\w-\\\\ww",
        "pump": [
          "\\\\\\w\\\\"
        ]
      },
      {
        "prefix": [
          "w\\"
        ],
        "suffix": "!",
        "pump": [
          "-\\\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s-s",
        "pump": [
          "-\\"
        ]
      },
      {
        "prefix": [
          "-_"
        ],
        "suffix": "\u0000",
        "pump": [
          "B_"
        ]
      },
      {
        "prefix": [
          "w"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\w\\\\\\w\\\\\\\\-",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(\\w+)\\s*((\\w+)?\\s*=\\s*(\\\"[^\\\"]*\\\"|\\((\\s*\\\"[^\\\"]*\\\"\\s*,?)*\\)|(\\w+)\\s+JOINING\\s+(\\*?)(\\w+)\\.(\\w+)|\\w+))?,?",
    "inputs": [
      {
        "prefix": [
          "aa a =("
        ],
        "suffix": "",
        "pump": [
          "\"\"\\x09\"\""
        ]
      },
      {
        "prefix": [
          "a=("
        ],
        "suffix": "NG\ta",
        "pump": [
          "\"\"\t\"\","
        ]
      },
      {
        "prefix": [
          "DU=("
        ],
        "suffix": "\"\"\t\n \t\t \n   \"\"\t\n \t\t \n   \r\t\r\n\r\r\n\"\"\t\n \t\t \n   \r\t\r\n\r\r\n \r\r\t\n\t\t \n \t  \r\n\t \t\n\t\r\r\n\r\n\n \t\n\t\n\r \n\n\t\r\t \t",
        "pump": [
          "\"\"\t\n \t\t \n   "
        ]
      },
      {
        "prefix": [
          "aa a =("
        ],
        "suffix": "",
        "pump": [
          "\"\"\\x09\"\""
        ]
      },
      {
        "prefix": [
          "a=("
        ],
        "suffix": "a=\",a=",
        "pump": [
          "\"\"\t\"\","
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\u0001.*?\u0002)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\u0001\u0002\u0001\u0002"
        ]
      },
      {
        "prefix": [
          "\u0001\u0002\u0001\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0002\u0001\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\u0001\u0002\u0001\u0002"
        ]
      },
      {
        "prefix": [
          "\u0001\u0002\u0001"
        ],
        "suffix": "",
        "pump": [
          "\u0002\u0001\u0002\u0001"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "sie-(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "sie-a"
        ],
        "suffix": "sa-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sie-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "sie-a"
        ],
        "suffix": "iesa$sie",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sie-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<!--[\\S\\s]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)",
    "inputs": [
      {
        "prefix": [
          "<("
        ],
        "suffix": "",
        "pump": [
          "\"\"'\"'\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\"a>-\"'a",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "<<<\r"
        ],
        "suffix": "\"\"'\"\"\"\"\"'\"\"\"'!?:<-<-<*]-<<|{?\r\"\"'~L)*<<\"'!]~LV<\"\"'!*@}?*<-<^\"\"'!*@}?'\"*:+oa5L)#]~L@\"~^-['^\bYEDZISHCLIS",
        "pump": [
          "\"\"'\"\"\""
        ]
      },
      {
        "prefix": [
          "<="
        ],
        "suffix": "",
        "pump": [
          "\"\"'\"'\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "!",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          "<<\"\"'\":"
        ],
        "suffix": "\"'\"'\"'\"'\"'\"'\"\"'\"'\"'\"'\"\"--0",
        "pump": [
          "\"'\"'\"'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^method.request.header.((?:\\w+-?)+\\w+)$",
    "inputs": [
      {
        "prefix": [
          "method!request!header!0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "methodarequestaheaderaa"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "method\u0000request\u0000header\u0000ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "methodhrequest-he"
        ],
        "suffix": "aderadermethethhreques)",
        "pump": [
          "ader"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*%node_var%((?:.|[\\s\\S])*?)%(.*?)%(\\d+)%\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*%node_var%"
        ],
        "suffix": "",
        "pump": [
          "&"
        ]
      },
      {
        "prefix": [
          "/*%node_var%"
        ],
        "suffix": "v",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%node_var%s"
        ],
        "suffix": "",
        "pump": [
          "Ss"
        ]
      },
      {
        "prefix": [
          "/*%node_"
        ],
        "suffix": "var%var%Ki%,pHoMkv\\4T",
        "pump": [
          "var%"
        ]
      },
      {
        "prefix": [
          "/*%node_var%"
        ],
        "suffix": "",
        "pump": [
          "&"
        ]
      },
      {
        "prefix": [
          "/*%node_var%"
        ],
        "suffix": "%no",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%node_var%s"
        ],
        "suffix": "",
        "pump": [
          "Ss"
        ]
      },
      {
        "prefix": [
          "/*%node_"
        ],
        "suffix": "var%var%\\/\\*%node_var%",
        "pump": [
          "var%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s\\/]*)\\s*",
    "inputs": [
      {
        "prefix": [
          "function"
        ],
        "suffix": "n*\t*",
        "pump": [
          "\t\t/**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\x0b((:?.|\\r|\\n)+)\\x1c\\r",
    "inputs": [
      {
        "prefix": [
          "\\x0b;"
        ],
        "suffix": "",
        "pump": [
          ":;"
        ]
      },
      {
        "prefix": [
          "\u000b"
        ],
        "suffix": "\r\u001c",
        "pump": [
          ":a:\n"
        ]
      },
      {
        "prefix": [
          "x0b\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ":\u0000"
        ]
      },
      {
        "prefix": [
          "\\x0b;"
        ],
        "suffix": "",
        "pump": [
          ":;"
        ]
      },
      {
        "prefix": [
          "\u000b"
        ],
        "suffix": "\r\u001c",
        "pump": [
          ":a:\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":\u000b::n::\u000b::n:\b::.(:|\b(\n1x(r\\x\t).\\\t*\n(\nx.)r(b+()\r.\\\\x\\^|\\x\b1)c^c:n(1:\b::.(r0\\b\\|nb\\0(?)",
        "pump": [
          ":\u000b::n:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s@(\\\\\\\\|\\\\@|[^@])*@(\\\\\\\\|\\\\@|[^@])*@[msixpodualngc]*",
    "inputs": [
      {
        "prefix": [
          "s@"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s@"
        ],
        "suffix": "@$@$@$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s@@@"
        ],
        "suffix": "",
        "pump": [
          "\\@"
        ]
      },
      {
        "prefix": [
          "s@\\@\\\\\\\\|"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\\\\\\\\\\\\",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "s@"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s@"
        ],
        "suffix": "@$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s@@"
        ],
        "suffix": "",
        "pump": [
          "\\@"
        ]
      },
      {
        "prefix": [
          "s@\\\\aukyybqoxoijpizwzkdvwdwogherosirgqn"
        ],
        "suffix": "\\\\\\\\\\|\\\\\\\\\\\\\\|\\\\hxielgwprd(:EI\ndrr\\\\\\\\\\|\\\\hxielgwprd(:EI\ndr",
        "pump": [
          "\\\\\\\\\\|\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$([\\w]+)+\\Q.getDataValue()).get\\E([\\w]+)\\(\\)",
    "inputs": [
      {
        "prefix": [
          "$0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "Da",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-$"
        ],
        "suffix": "7z6A7z6APmjtgMm5il",
        "pump": [
          "7z6A"
        ]
      },
      {
        "prefix": [
          "$0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ".$"
        ],
        "suffix": "aZYTaZYTWLKHNGTJBA",
        "pump": [
          "aZYT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\d+\\.?)+)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{([^\\}\\}]+)+\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{!"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{{a"
        ],
        "suffix": "{}{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{{8\t{{8\t\bC)Fl0SC5N*r",
        "pump": [
          "{{8\t"
        ]
      },
      {
        "prefix": [
          "{{|"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{{a"
        ],
        "suffix": "}}{{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "d{{8d{{88hhg|WPZ[I<<s",
        "pump": [
          "d{{8"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[\\w+@\\S+(\\s?\\S+)*\\]\\s?>\\s?$",
    "inputs": [
      {
        "prefix": [
          "[a@\\x00"
        ],
        "suffix": "",
        "pump": [
          "^^"
        ]
      },
      {
        "prefix": [
          "[a@a\ta"
        ],
        "suffix": "[a\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[Y@&[Y@&|[`@FY2KJsH\t$%",
        "pump": [
          "[Y@&"
        ]
      },
      {
        "prefix": [
          "[a@\\"
        ],
        "suffix": "",
        "pump": [
          "^^"
        ]
      },
      {
        "prefix": [
          "[a@a\ta"
        ],
        "suffix": "]a[a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "%[_@%[_@G0MLoqjNiyr\bnQ",
        "pump": [
          "%[_@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(([-a-zA-Z]+):(([^()]*(\\([^()]*\\))?)*)\\)",
    "inputs": [
      {
        "prefix": [
          "(a:"
        ],
        "suffix": "",
        "pump": [
          "()"
        ]
      },
      {
        "prefix": [
          "(a:"
        ],
        "suffix": "()((",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-:\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "E("
        ],
        "suffix": "Co:6Co:6hR8JH 5\rYgV8",
        "pump": [
          "Co:6"
        ]
      },
      {
        "prefix": [
          "(a:"
        ],
        "suffix": "",
        "pump": [
          "()"
        ]
      },
      {
        "prefix": [
          "(a:"
        ],
        "suffix": ")()",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-:\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":("
        ],
        "suffix": "-:8e-:8eTe[Y GGi_C\b",
        "pump": [
          "-:8e"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^test/(.+?/)*test_.+?\\.rb$",
    "inputs": [
      {
        "prefix": [
          "test/"
        ],
        "suffix": "",
        "pump": [
          "u///"
        ]
      },
      {
        "prefix": [
          "test/"
        ],
        "suffix": "t_/te",
        "pump": [
          "a/a/"
        ]
      },
      {
        "prefix": [
          "test/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "test/te"
        ],
        "suffix": "/e/te/e//e/te/e/t/e/,/e/te/e/t/test_est/",
        "pump": [
          "/e/te/e/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*%node_textline%(.*?)%\\*\\/((?:.|[\\s\\S])*?)\\/\\*%node_textline_end%(\\d+)%\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*%node_textline%%*/"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "/*%node_textline%%*/"
        ],
        "suffix": "e",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%node_textline%/S"
        ],
        "suffix": "",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "/*%node_textline"
        ],
        "suffix": "%%*/%%*//*%node_textl",
        "pump": [
          "%%*/"
        ]
      },
      {
        "prefix": [
          "/*%node_textline%%*/"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "/*%node_textline%%*/"
        ],
        "suffix": "%0%",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%node_textline%/s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "/*%node_textline"
        ],
        "suffix": "%%*/%%*/\\/\\*%node_tex",
        "pump": [
          "%%*/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^Compile[\\w]+\\s.+?\\s((?:\\\\.|[^ ])+\\/((?:\\\\.|[^ ])+\\.(?:m|mm|c|cc|cpp|cxx|swift)))\\s.*",
    "inputs": [
      {
        "prefix": [
          "Compilea ! ]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "Compilea\ta\t"
        ],
        "suffix": "\\a\\/\\/",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "Compilews\u0000s\u0000/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "Compilec\t^ "
        ],
        "suffix": "+\\C\\\\s.\\+\\C\\\\s.\\s|c)C/SFyJFHs\\]?sfa:cmo(\\\\slJ(q\\:/)\\s|T+r\\(]Ns",
        "pump": [
          "+\\C\\\\s.\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z0-9]-*)*[a-z0-9]+\\.?)*([a-z0-9]+))(\\/[\\w?=\\.-]*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "hu"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-0-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "hhtthhtttpmjg\\",
        "pump": [
          "hhtt"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+)+\\s(\\w+)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0\ta\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "39593959957655057",
        "pump": [
          "3959"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "$",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "^"
        ],
        "suffix": "34393439653965274",
        "pump": [
          "3439"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:---(?:\\s+~?)?\\s+)+$",
    "inputs": [
      {
        "prefix": [
          "---\\x09"
        ],
        "suffix": "\\x00",
        "pump": [
          "---\\x09\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-\t~",
        "pump": [
          "---\t\t"
        ]
      },
      {
        "prefix": [
          "---s---ss"
        ],
        "suffix": "",
        "pump": [
          "ss---ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\([a-zA-Z]:[^*,\\\\]*[,]?)+\\*[0-9A-Fa-f]{2}(\\\\.*)?$",
    "inputs": [
      {
        "prefix": [
          "\\a:"
        ],
        "suffix": "",
        "pump": [
          "a:A:"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "$",
        "pump": [
          "a:a:"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "q:D:mDt:W\neq:mq:D:mDt:W\neq:mDt!xf\rVT:m\rUt!xfT:v< \tBmD:mDt!xf<Deq:mDt!xf\rVT:m\rUt!xf\rVT:v< \tBmD(q",
        "pump": [
          "q:D:mDt:W\neq:m"
        ]
      },
      {
        "prefix": [
          "\\a:"
        ],
        "suffix": "",
        "pump": [
          "a:A:"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "$",
        "pump": [
          "a:a:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$",
    "inputs": [
      {
        "prefix": [
          "^.^@[250.250.250.2500:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "2a\"@[26.26.26.",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\"\\\\]*|\\\\.)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "O3'dO3'd.yL<&Z\tP\t",
        "pump": [
          "O3'd"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "tKM$tKM$\r[2+fgRCh",
        "pump": [
          "tKM$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<div class=\"revision\">((.|\\n)*?)<\\/div>",
    "inputs": [
      {
        "prefix": [
          "<div class=\"revision\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<div class=\"revision\">"
        ],
        "suffix": "</div",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<div class=\"revision\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<div class=\"revision\">"
        ],
        "suffix": "n\"",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a+|b)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)",
    "inputs": [
      {
        "prefix": [
          "(*"
        ],
        "suffix": "(a*(",
        "pump": [
          "(**)"
        ]
      },
      {
        "prefix": [
          "(*"
        ],
        "suffix": ")(a*",
        "pump": [
          "(**)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(>=|>|<|<=|!=|\\^|~)?\\d+(\\.(\\*|(\\d+(\\.(\\d+|\\*))?)))?((\\s*\\|\\|)?\\s*(>=|>|<|<=|!=|\\^|~)?\\d+(\\.(\\*|(\\d+(\\.(\\d+|\\*))?)))?)*\\s*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "|\t0.00.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "1298129840243654>",
        "pump": [
          "1298"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\>(\\n|\\r|\\r\\n| |\\t)*\\<",
    "inputs": [
      {
        "prefix": [
          ">"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ">"
        ],
        "suffix": "\r\n<\n",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          ">>"
        ],
        "suffix": "\r\n\n\r\n\t\r\n\r\n\n\r\n\t\r\n\r\n \r\n\t\r\n\r\n \r\n\r\n\t\t \r\r\t\t \n \t\n\t\n\n\t\t \n\t\n\t\n\t\r",
        "pump": [
          "\r\n\n\r\n\t\r\n"
        ]
      },
      {
        "prefix": [
          ">"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ">"
        ],
        "suffix": "\r",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          ">\r\n\r\n \r\n "
        ],
        "suffix": "\r\n\r\n\r\n\r\n\r\n\r\n \r\n \t\t\r\n\r\n \t\r\n\r\n \r\t\t",
        "pump": [
          "\r\n\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( *\\@charset [^;]+; *)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "h",
        "pump": [
          " @charset a; "
        ]
      },
      {
        "prefix": [
          "@charset \u0000;@charset \u0000; "
        ],
        "suffix": "\u0000",
        "pump": [
          " @charset \u0000; "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( *\\[\\^([^\\]]+)\\]: *)([^\\n]+(\\n+ +[^\\n]+)*)",
    "inputs": [
      {
        "prefix": [
          "[^a]:a"
        ],
        "suffix": "]:\n",
        "pump": [
          "\n  a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^---(.*\\n)*---$",
    "inputs": [
      {
        "prefix": [
          "---"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "-a\n--",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*(?:.|\\r|\\n)*\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\n",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[${][a-z][a-zA-Z0-9]*(\\.?[a-z][a-zA-Z0-9]*)*}",
    "inputs": [
      {
        "prefix": [
          "{a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "0.",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "n1aqn1aqdtttxnplbib",
        "pump": [
          "n1aq"
        ]
      },
      {
        "prefix": [
          "{a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "0",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          "}$"
        ],
        "suffix": "aacvaacvraqmnpxgzd",
        "pump": [
          "aacv"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|\\n)+\\s+at new.+",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\nat new",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\nat new",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>",
    "inputs": [
      {
        "prefix": [
          "<("
        ],
        "suffix": "",
        "pump": [
          "\"\"'\"'\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\">'a",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "<<<<?<\n<"
        ],
        "suffix": "\"\"\"'\"z'C'\"\"\"\"'\"z'C'\"\"'\"zBkr\"J*Ogb*f\"W|WlGHMqG[c[r[Cr\"H<[p'CV+G)i\"'\"zB2\"\"'\"zBkr*Ogb*f\"",
        "pump": [
          "\"\"\"'\"z'C'\""
        ]
      },
      {
        "prefix": [
          "<="
        ],
        "suffix": "",
        "pump": [
          "\"\"'\"'\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\">a'<",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "<*<.<''\"<"
        ],
        "suffix": "\"'\"\"''\"'\"\"'''''''\".*?*?.T[O?YSpRvBEkKO<.*?*|",
        "pump": [
          "\"'\"\"''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "a(?:.|\\n)+a",
    "inputs": [
      {
        "prefix": [
          "a!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "ab"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\s*<br[^>]*>\\s*)+\\s*$",
    "inputs": [
      {
        "prefix": [
          "<br>"
        ],
        "suffix": "\\x00",
        "pump": [
          " <br>\\x09<br>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<b>>",
        "pump": [
          "\t<br>\t"
        ]
      },
      {
        "prefix": [
          "<br><br>s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<br>s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([ \\t]*)#\\s*bower:*(\\S*))(\\n|\\r|.)*?(#\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "#bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "#bower"
        ],
        "suffix": "\tendb",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "#bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "#bower"
        ],
        "suffix": "\n",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.*::)*(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a:",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.|\\n)*Running (.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aRu",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+\\/)*(\\d+-\\d+-\\d+)-(.*)(\\.[^.]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/.",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "/-/4/4-//-/4/4-/4/4-/-/4-/4/4-/4-0-0---/4/",
        "pump": [
          "/-/4/4-/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\\\=]+|\\\\.)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\a=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\a=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000."
        ],
        "suffix": "=",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[\"((?:\\\\\"|.)*)\"\\]",
    "inputs": [
      {
        "prefix": [
          "[\""
        ],
        "suffix": "",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "[\""
        ],
        "suffix": "]\\a",
        "pump": [
          "\\\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\r\\n)?\\s)*(\\[[^\\]]+\\])(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "][",
        "pump": [
          "\r\n\t\r\n\t"
        ]
      },
      {
        "prefix": [
          "\r\r\n\t\r\r\n\r\t"
        ],
        "suffix": "\r\n\r\r\n\r\r\n\r\n\r\n\r\r\n\r\r\n\r\n\r\n   \t\n\r\t\t \n\r\n\r\t\n\r\n \n\r\n\t\n\r \n \n\n \t\r\t\n ",
        "pump": [
          "\r\n\r\r\n\r\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<a.*?https?:\\/\\/.*?[^a]>)+?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "tph$",
        "pump": [
          "<ahttp://http://$>"
        ]
      },
      {
        "prefix": [
          "<ahttp://\u0000><ahttp://"
        ],
        "suffix": "",
        "pump": [
          "b><a\u0000><ahttp://"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "t",
        "pump": [
          "<ahttp://http://$>"
        ]
      },
      {
        "prefix": [
          "<ahttp://\u0000><a"
        ],
        "suffix": "",
        "pump": [
          "http://http://\u0000><a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*(.|\\s)*\\*\\/$",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "*\t \t\n\t*\t \t\n\t\t\t\r\t \t\r \r\r\n\r\r \t",
        "pump": [
          "*\t \t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "<.?a(.|\\n)*?>",
    "inputs": [
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "<>\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "\n<>\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^#[^\\n]*\\n+(?:- .+\\n)*\\n*",
    "inputs": [
      {
        "prefix": [
          "#\n"
        ],
        "suffix": "-a",
        "pump": [
          "- a\n- a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*\\[(\\d*[^\\d\\[\\]]+\\d*)+\\].*",
    "inputs": [
      {
        "prefix": [
          "[\\"
        ],
        "suffix": "",
        "pump": [
          "^0!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\t<Ay["
        ],
        "suffix": "!hBl!hBli,#T%\"V",
        "pump": [
          "!hBl"
        ]
      },
      {
        "prefix": [
          "[\\"
        ],
        "suffix": "",
        "pump": [
          "^0!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "e~["
        ],
        "suffix": "=G\nw=G\nwb\reCz8I\\v",
        "pump": [
          "=G\nw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "DECRYPT\\((?:\\s*\\w*\\s*\\,?)*\\)",
    "inputs": [
      {
        "prefix": [
          "DECRYPT("
        ],
        "suffix": "",
        "pump": [
          ","
        ]
      },
      {
        "prefix": [
          "DECRYPT("
        ],
        "suffix": "E",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "DECRYPTs"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "DECRYPT("
        ],
        "suffix": "DEDEDEDECRYECRYPT",
        "pump": [
          "DEDE"
        ]
      },
      {
        "prefix": [
          "DECRYPT("
        ],
        "suffix": "",
        "pump": [
          ","
        ]
      },
      {
        "prefix": [
          "DECRYPT("
        ],
        "suffix": "Y)DEC",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "DECRYPTs"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "DDECRYPT("
        ],
        "suffix": "b625b625Ff89abC57",
        "pump": [
          "b625"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:[^\"]|\\\\.)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/a*",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*",
    "inputs": [
      {
        "prefix": [
          "L--"
        ],
        "suffix": "\tL",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "\u0000",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "L--"
        ],
        "suffix": "-L",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "-e"
        ],
        "suffix": "\u0000",
        "pump": [
          "-e"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\W|[_-])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "A",
        "pump": [
          "$-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$a",
        "pump": [
          "$-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|[-_])+\\s*\\??=",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_\t-",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "_-"
        ],
        "suffix": "_-_-___-_-___-_-_-__-74-_",
        "pump": [
          "_-_-__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+(\\d|.){1,}\\ )\\-(.+(\\d|.){1,})\\ per\\ item",
    "inputs": [
      {
        "prefix": [
          "!:"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          "!:"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "it0 ",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000 -\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          "\"[ qEZ|hT(X}F"
        ],
        "suffix": "841a\\1841a\\1\tU3",
        "pump": [
          "841a\\1"
        ]
      },
      {
        "prefix": [
          "!:"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          "$'{V"
        ],
        "suffix": "8jE!@z@3Z%tF[Y}3,>\tR\tW=x\bl(Ig>",
        "pump": [
          "8jE!@z@3Z%tF[Y}3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\\\.|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "func3(.|\\n)*func2(.|\\n)*func1",
    "inputs": [
      {
        "prefix": [
          "func3"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "func3"
        ],
        "suffix": "1\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "func3"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "func3"
        ],
        "suffix": "u",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\"]|\\\\.)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s+(,|:\\s+)?|struct\\s+)(\\w+)\\s*<((\\s*(typename\\s+)?\\w+\\s*(=\\s*.*|<(\\s*\\w+\\s*,?)+>\\s*)?,?)+)\\s*>\\s+((struct|class).*?)?$",
    "inputs": [
      {
        "prefix": [
          " ,a <u"
        ],
        "suffix": "",
        "pump": [
          "typename\\x09u"
        ]
      },
      {
        "prefix": [
          "\ta<a"
        ],
        "suffix": "a=,atypename",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sw<ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "\ry<"
        ],
        "suffix": "MMtyMMtypenamest",
        "pump": [
          "MMty"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<project([^>]|\\n)*>",
    "inputs": [
      {
        "prefix": [
          "<project"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<project"
        ],
        "suffix": "pr>>",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<project"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<project"
        ],
        "suffix": "o><projec",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<project<project\nFUTWect  "
        ],
        "suffix": "\n\r\t \n\t\n\n\n\r\t \n\t\n\n  \n \r\n\t\t\t\n\t \n  \r\t\n\r",
        "pump": [
          "\n\r\t \n\t\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "e++",
        "pump": [
          "0.0.00.0.0"
        ]
      },
      {
        "prefix": [
          "\u0000d\u0000d\u0000ded"
        ],
        "suffix": "",
        "pump": [
          "ddd\u0000ded"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e",
        "pump": [
          "0.0.0.00.0.0"
        ]
      },
      {
        "prefix": [
          "\u0000d\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*[dyms])+(\\s*[xX]+)$",
    "inputs": [
      {
        "prefix": [
          "d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "d",
        "pump": [
          "ad"
        ]
      },
      {
        "prefix": [
          "ds"
        ],
        "suffix": "",
        "pump": [
          "ms"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "msmPsHmsmPsHdPxsHdPx;Kz@ydmPG0sHdPx",
        "pump": [
          "msmPsH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)([0-9]*)*?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "n"
        ],
        "suffix": "11691169972532001q",
        "pump": [
          "1169"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*%(node_in|node_out|node_param)%\\*\\/\\s*((?:.|[\\s\\S])*?);\\s*\\/\\*%(?:node_in_end|node_out_end|node_param_end)%(.*?)%(.*?)%(\\d+)%\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*%node_in%*/"
        ],
        "suffix": "",
        "pump": [
          "<"
        ]
      },
      {
        "prefix": [
          "/*%node_in%*/"
        ],
        "suffix": "\t/*%nod",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%node_in/S"
        ],
        "suffix": "",
        "pump": [
          "sS"
        ]
      },
      {
        "prefix": [
          "//*%node_para"
        ],
        "suffix": "m%*/m%*/nr%eAen_s?_\\s",
        "pump": [
          "m%*/"
        ]
      },
      {
        "prefix": [
          "/*%node_in%*/"
        ],
        "suffix": "",
        "pump": [
          "<"
        ]
      },
      {
        "prefix": [
          "/*%node_in%*/"
        ],
        "suffix": "\t/*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%node_in/s"
        ],
        "suffix": "",
        "pump": [
          "Ss"
        ]
      },
      {
        "prefix": [
          "%/*%node_i"
        ],
        "suffix": "n%*/n%*//*%node_in_en",
        "pump": [
          "n%*/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\n,]+, *\\n|[^\\n]+)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": ",\n,\n",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "-=0+",
        "pump": [
          "0+=00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "0+=00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\.|)\\/(.+|))+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "./a./a"
        ]
      },
      {
        "prefix": [
          "./(((/($+)`@%mCfwu/()+\t/.($(+|/.((\\($(/..)))..$+)`@%mC"
        ],
        "suffix": "f/()/.($(+|/f/()/.($(+|/.((\\($\r(",
        "pump": [
          "f/()/.($(+|/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "./a./a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "./g/y/./g/y/./).%_TEj/NDsPA /\\/\b?$)((+$.(.|)\bi<Ea|]3q^p7On%X1s`yL\n\r",
        "pump": [
          "./g/y/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[-+]?\\$\\s*(\\d*,\\d*)+(?:\\.)?\\d*$",
    "inputs": [
      {
        "prefix": [
          "-$,"
        ],
        "suffix": "!",
        "pump": [
          ",0,"
        ]
      },
      {
        "prefix": [
          "+$"
        ],
        "suffix": "++",
        "pump": [
          "0,0"
        ]
      },
      {
        "prefix": [
          "+$"
        ],
        "suffix": ",2,2,,01,2,2,,0110883,2,,,,,,,,,0,,2,,,,,,,,,2,,,21/",
        "pump": [
          ",2,2,,01"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*(\\/\\*+|\\/\\/|\\*+\\/|\\*)+\\s?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t/\t",
        "pump": [
          "/***/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[([\\w-!]+(=\"?([^\"]|\\\\\")+\"?)? {0,})+\\])",
    "inputs": [
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "_!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "=]a\\ $\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "J3uDJ3uDuQR0LmuTc",
        "pump": [
          "J3uD"
        ]
      },
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "_!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "=]a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@["
        ],
        "suffix": "m7WKm7WKKKx4DQ1yA",
        "pump": [
          "m7WK"
        ]
      },
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "_!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "=]a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "am8aam8a_dPzgnSRaL",
        "pump": [
          "am8a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z]:\\\\([^\\\\]+\\\\?)*",
    "inputs": [
      {
        "prefix": [
          "a:\\a"
        ],
        "suffix": "a\\\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a:\\a"
        ],
        "suffix": "a\\\\a:",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\D*\\d\\D*){7,})$",
    "inputs": [
      {
        "prefix": [
          "000000"
        ],
        "suffix": "0",
        "pump": [
          "a0a"
        ]
      },
      {
        "prefix": [
          "dddddddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "Dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "a0a"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "Dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\w+:.*\\n)*\\w+:.*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "a:\na:\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-z0-9!#$%&*+/=?^_`{|}~-]+(?:[\\.a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])+",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "^."
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "-@a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-z0a-z0-9!#$%&*+",
        "pump": [
          "a-z0"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "^."
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "-@a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "a-z0a-z0-9!#$%&*+",
        "pump": [
          "a-z0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<script>((?:.|\\n)*?)<\\/script>$",
    "inputs": [
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "ipt",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9a-f]+)(?:;(?:[\\w-]*)(?:=(?:(?:[\\w-]*)*|\"(?:[^\\r\\n])*\"))?)*\\r\\n",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          ";=-"
        ]
      },
      {
        "prefix": [
          "a;="
        ],
        "suffix": "-=\r",
        "pump": [
          ";=="
        ]
      },
      {
        "prefix": [
          "0;=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\";=\"\u0000"
        ]
      },
      {
        "prefix": [
          "0;="
        ],
        "suffix": "0313031319578110",
        "pump": [
          "0313"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\n){3,}",
    "inputs": [
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\/\\*.*?\\*\\/)*[\\(\\w]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " /**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/$*//",
        "pump": [
          "\t/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(%[-_0^#:]*(\\d+)*[EO]?d|%[-_0^#:]*(\\d+)*[EO]?e)(.*)(%b)",
    "inputs": [
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "10"
        ]
      },
      {
        "prefix": [
          "%0"
        ],
        "suffix": "%#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%%"
        ],
        "suffix": "14241424794284898",
        "pump": [
          "1424"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "10"
        ]
      },
      {
        "prefix": [
          "%0"
        ],
        "suffix": "a%",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|[#][^\\n]*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "#\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t#\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{: ( (?:[^:]+|:[^}])* ) :\\}\\s*(\\()?",
    "inputs": [
      {
        "prefix": [
          "{:  "
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "{:  a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "v{:"
        ],
        "suffix": "  h]  h]zX]'\rZ\\t\n)/K",
        "pump": [
          "  h]"
        ]
      },
      {
        "prefix": [
          "{:  "
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "{:  a"
        ],
        "suffix": "\t({:{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{:"
        ],
        "suffix": "  Mf  Mf!9B#[B|#.N4B",
        "pump": [
          "  Mf"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([!?\\/])?([A-Za-z0-9\\-_\\:\\.]+)((?:\\s+[^\"\\'>]+(?:(?:\"[^\"]*\")|(?:\\'[^\\']*\\')|[^>]*))*|\\/|\\s+)>",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<!a"
        ],
        "suffix": "<!>'>a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<-s\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"s\u0000"
        ]
      },
      {
        "prefix": [
          "A<LI\t0}xIZCvr%^%"
        ],
        "suffix": "\rNn{!\t\rNn{!\tbPPV\tT5*,",
        "pump": [
          "\rNn{!\t"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<!a"
        ],
        "suffix": "<a\"<\"",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<-s\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "s<"
        ],
        "suffix": "vA\n\rvA\n\rH,WNE4<e8&1\tk/]o#}u\t(k\ta$",
        "pump": [
          "vA\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<s>((.|\\n|\\r\\n)*?)<\\/s>",
    "inputs": [
      {
        "prefix": [
          "<s>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<s>"
        ],
        "suffix": "</s",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<s>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<s>"
        ],
        "suffix": "s\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/?#!\\/.*|\\/(api|anothersection)\\/?(\\?.*)*|\\/index[^\\.]*\\.html.*)$",
    "inputs": [
      {
        "prefix": [
          "/api/"
        ],
        "suffix": "a",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          "/api/"
        ],
        "suffix": "a",
        "pump": [
          "??"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\.]*)*\\.json",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "soa.n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x&A*x&A*vY*)!`tV}",
        "pump": [
          "x&A*"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "soa.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{d\t^{d\t^WhC\rYZ}rH",
        "pump": [
          "{d\t^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:&amp;|[$@%*]|\\$#)\\$?[a-zA-Z_](\\w+|::)*",
    "inputs": [
      {
        "prefix": [
          "$$aa"
        ],
        "suffix": ":&",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "$$aa"
        ],
        "suffix": "mpa\u0000&a",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\\\,|.)+?)(?:,(.+))?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\,\\,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}",
    "inputs": [
      {
        "prefix": [
          "{a:{"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "--:n--:nhjbrxbrrx--:",
        "pump": [
          "--:n"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "{a}{:\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "~\n{"
        ],
        "suffix": "B:M^B:M^1IL:d^9??)[)",
        "pump": [
          "B:M^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*,\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([ ]*[a-z0-9&#*=?@>\\\\<:\\-,()$\\[\\]_.{}!+%^]+)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
    "inputs": [
      {
        "prefix": [
          "a@a.a0"
        ],
        "suffix": "!",
        "pump": [
          "a0000"
        ]
      },
      {
        "prefix": [
          "a@a."
        ],
        "suffix": "a.",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          ".@0."
        ],
        "suffix": "293Up2293Up2cpLTzFVHC6vsmqY508t@",
        "pump": [
          "293Up2"
        ]
      },
      {
        "prefix": [
          "a@a.0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a.a"
        ],
        "suffix": "-@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "..@a."
        ],
        "suffix": "pn22pn22OdJecAJKO5 ",
        "pump": [
          "pn22"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:.+\\#)*)(.+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a#",
        "pump": [
          "a#"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "#\u0000#\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a#"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "#\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "start_bmp.*{(([^}]|\\r\\n?|\\n)*)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^'\\\\]+|\\\\.)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\''",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Z][^.\\s]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x09",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": ".",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "X0"
        ],
        "suffix": "NFCTNFCTyEUSMzUG>T@\nD",
        "pump": [
          "NFCT"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x09",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\t",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA\u0000"
        ],
        "suffix": ".",
        "pump": [
          "A\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "KU|H+ZKU|H+Z_N,V9R$39Bp^r!JqH!)h:{p/pK\t",
        "pump": [
          "KU|H+Z"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(_\\`((?:.|\\n)+)\\`: *)(.*)",
    "inputs": [
      {
        "prefix": [
          "_`!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "_`"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title>Default Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "ti",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": " Tit",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g",
    "inputs": [
      {
        "prefix": [
          "/#\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "/#\""
        ],
        "suffix": "/g\"",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "/#\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "/#\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "/#\""
        ],
        "suffix": "/g\"\n/#",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "/#\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|\\d|_|-)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "84818481194c0a6224Db\t",
        "pump": [
          "8481"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,2}([ ]?\\_[ ]?){3,}[ \\t]*$",
    "inputs": [
      {
        "prefix": [
          "   _  __"
        ],
        "suffix": "\\x00",
        "pump": [
          "_ _"
        ]
      },
      {
        "prefix": [
          " _  _ "
        ],
        "suffix": "\t_",
        "pump": [
          " _ _"
        ]
      },
      {
        "prefix": [
          "____"
        ],
        "suffix": "\u0000",
        "pump": [
          " _"
        ]
      },
      {
        "prefix": [
          "_"
        ],
        "suffix": "\\x00",
        "pump": [
          "_ _"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t_",
        "pump": [
          " _ _"
        ]
      },
      {
        "prefix": [
          "__"
        ],
        "suffix": "\u0000",
        "pump": [
          " _"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+,)*.+[^,]$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!,,,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "),~,/),,),~,/),,~/;\"?<'\\\\@$*\\,=-}',_$!;\\)<:|)*]/[:`/-,=-}'/},_$!;\\)<:|)*]/[:,{,)+#,+,",
        "pump": [
          "),~,/),,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z_][a-z0-9_]*([A-Z_][a-z0-9_]*)*$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "!",
        "pump": [
          "A_"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "A_"
        ]
      },
      {
        "prefix": [
          "_A"
        ],
        "suffix": "\u0000",
        "pump": [
          "_A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "enum\\(('.+?'(?:,'.+?')*)\\)",
    "inputs": [
      {
        "prefix": [
          "enum('!'"
        ],
        "suffix": "",
        "pump": [
          ",'!','''"
        ]
      },
      {
        "prefix": [
          "enum('a'"
        ],
        "suffix": ",a",
        "pump": [
          ",'a',','a'"
        ]
      },
      {
        "prefix": [
          "enum'\u0000','\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "','\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "enum('enum('."
        ],
        "suffix": "','',',',','','',',',',''.','',','(m','?'.',',','?+.enu'enu','",
        "pump": [
          "','',',',','"
        ]
      },
      {
        "prefix": [
          "enum('e'"
        ],
        "suffix": "",
        "pump": [
          ",'!','''"
        ]
      },
      {
        "prefix": [
          "enum('a'"
        ],
        "suffix": ",a'",
        "pump": [
          ",'a',','a'"
        ]
      },
      {
        "prefix": [
          "enum'\u0000','\u0000"
        ],
        "suffix": "",
        "pump": [
          "','\u0000','\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\?a=cid-for-abc\\&b=amp-([a-zA-Z0-9_-]+){10,}",
    "inputs": [
      {
        "prefix": [
          "?a=cid-for-abc&b=amp-aaaaaaaaaa"
        ],
        "suffix": "=amp-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "?a=cid-for-abc&b=amp-a"
        ],
        "suffix": "=am",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "}(\\s|\\t)*$",
    "inputs": [
      {
        "prefix": [
          "}"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "}"
        ],
        "suffix": "\n}",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "}}\r\t\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\n\t\t \t\t\r\r\r\r|",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "}"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "}"
        ],
        "suffix": "\na",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "}"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:@[^ @]+)(?:\\s+@[^ @]+)*$",
    "inputs": [
      {
        "prefix": [
          "@\\x00"
        ],
        "suffix": "@",
        "pump": [
          " @\\x00\\x09 @\\x00"
        ]
      },
      {
        "prefix": [
          "@a"
        ],
        "suffix": "@a@",
        "pump": [
          "\t@a\t"
        ]
      },
      {
        "prefix": [
          "@\u0000s@\u0000"
        ],
        "suffix": " ",
        "pump": [
          "ss@\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "@^\n\n\n\n\t\t\t\t\r @^\n\n\n\n\t\t\t\t\r  @\t\t\n\t\n\t\r  @\t\t\n\t\n\n\n\r\n\t\n\n\n\n\t\t\t\t\r \r\n\t\n\n\n\n\t\t\t\t\r",
        "pump": [
          "@^\n\n\n\n\t\t\t\t\r "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\\\n*\\",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\\\n*\\",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n(?:\\s*))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+[\\_]?[\\-]?)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[[[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\/\n",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "/[ec\\q[h]\\/rg|[5+(]m.\\?nmo"
        ],
        "suffix": "[hz+][q[hz[z+][hz+][q[hz[z+]\\q[hz+]v]+zh]\\/[hz+",
        "pump": [
          "[hz+][q[hz[z+]"
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[[[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "/\u0000."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[[[]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          "/\u0000+"
        ],
        "suffix": "",
        "pump": [
          ".+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\[rn]|[\\r\\n]+)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\n\\nn",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\na\\",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\s*(?:(;[^\\n]*\\n))?)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ";\na",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<<\\s*([\\w\\.]+)\\s*(?:=([^>]*))*>>",
    "inputs": [
      {
        "prefix": [
          "<<."
        ],
        "suffix": "",
        "pump": [
          "=="
        ]
      },
      {
        "prefix": [
          "<<a"
        ],
        "suffix": "\ta>a",
        "pump": [
          "=="
        ]
      },
      {
        "prefix": [
          "<<.=\u0000"
        ],
        "suffix": "",
        "pump": [
          "=\u0000"
        ]
      },
      {
        "prefix": [
          "<<."
        ],
        "suffix": "",
        "pump": [
          "=="
        ]
      },
      {
        "prefix": [
          "<<a"
        ],
        "suffix": "\ta<><<\ta\t",
        "pump": [
          "=="
        ]
      },
      {
        "prefix": [
          "<<.=\u0000"
        ],
        "suffix": "",
        "pump": [
          "=\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\e\\[(?:\\d+;?)+m",
    "inputs": [
      {
        "prefix": [
          "\\e[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\e[0"
        ],
        "suffix": "0;;",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\\\e["
        ],
        "suffix": "258825880232582230",
        "pump": [
          "2588"
        ]
      },
      {
        "prefix": [
          "\\e[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\e[0"
        ],
        "suffix": "ma\\",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\e["
        ],
        "suffix": "015501551556255625",
        "pump": [
          "0155"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"([^\"\\\\]|\\\\\"|\\\\\\\\|\\\\[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\\\"\\\\\\\"\\\"\\\\\\\"\\\\\\\"\n\n\r\t\t\r\t\n\b\b\n\r\n\r\n\r\b\n\r\t\r\b"
        ],
        "suffix": "\t\\\\\b\\\\\\\\\\\\\t\\\\\b\\\\\\\\\\\\\b\r\n\\\r\nGybSJbygexYfEs\\\\B4Fc",
        "pump": [
          "\t\\\\\b\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[0-9]* ?(?:💃|🤦‍♀️|🤷) ?[0-9]*(?:, | \\| )?)+$",
    "inputs": [
      {
        "prefix": [
          " \\xff\\xff\\xff\\xff"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "️ 0??",
        "pump": [
          "0🤷 🤷"
        ]
      },
      {
        "prefix": [
          "ðð¤¦ââï¸"
        ],
        "suffix": "\u0000",
        "pump": [
          "0ð¤¦ââï¸"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "💃748💃748💃748💃748💃484💃7💃748💃787 ",
        "pump": [
          "💃748💃748"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\t*debug_dump_data\\((.*\\n)*?.*\\);\\n",
    "inputs": [
      {
        "prefix": [
          "debug_dump_data("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "debug_dump_data("
        ],
        "suffix": "u",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "debug_dump_data("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "debug_dump_data("
        ],
        "suffix": "at",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\`{1,3}(\\s*?.*?)*?\\`{1,3}",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "`s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "d9L<d9L<dP]2yP_Zh",
        "pump": [
          "d9L<"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "`s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "r`"
        ],
        "suffix": "-KM>-KM>c%\\7/{, $",
        "pump": [
          "-KM>"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "`\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "[`"
        ],
        "suffix": "_Ap!_Ap!>}j^#\t-$3",
        "pump": [
          "_Ap!"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\u001b\\[(\\d+)*m",
    "inputs": [
      {
        "prefix": [
          "\\x1b["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ƻ[0"
        ],
        "suffix": "ƻ[[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "130613061430472280",
        "pump": [
          "1306"
        ]
      },
      {
        "prefix": [
          "\\x1b["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ƻ[0"
        ],
        "suffix": "0ƻ[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "689868982489363361",
        "pump": [
          "6898"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\t|\\n|\\r)*?-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!--\\<--t|\\<>\n\r\r\n   \n  "
        ],
        "suffix": "\t\t\t\t\t\t\t\t \n \r \n\n\r\t\r\r\t\n\t\t\t\n\r\r\t\n\r\n\n\t",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "\t<!--\t\r\t\t\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t \n\r\n\r\t\r\n\n\t\n \n\t",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([ \\t]*)\\/!?\\s*bower:(\\S*))(\\n|\\r|.)*?(\\/!?\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "/!bower:"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/!bower:"
        ],
        "suffix": " a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "/!bower:"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/!bower:"
        ],
        "suffix": "endbo",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:,.+?)*,\\s*(\\S+)\\s*:",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",!,;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\t",
        "pump": [
          ",a,a"
        ]
      },
      {
        "prefix": [
          ",\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000,\u0000"
        ]
      },
      {
        "prefix": [
          ":,\\s*,.N=uskOrirTO2"
        ],
        "suffix": ",\\?;=}}>|,\\s*,2,,\\?;=}}>|,\\s*,2,\\?;=}>|,|?;=}>|,\\s,s*,.|?",
        "pump": [
          ",\\?;=}}>|,\\s*,2,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",!,;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\t",
        "pump": [
          ",a,a"
        ]
      },
      {
        "prefix": [
          ",\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ",,ig,.+,.+,&,`"
        ],
        "suffix": ".,7,,,.,7,,,.,,,,",
        "pump": [
          ".,7,,,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\n *){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          " \n "
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\na",
        "pump": [
          " \n "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          " \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* mostly equivalent to Perl code above *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ent",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "w~X3w~X3Q5K.p'i~7)",
        "pump": [
          "w~X3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:http|ftp|https)?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "inputs": [
      {
        "prefix": [
          "://"
        ],
        "suffix": "#",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "://"
        ],
        "suffix": "g%f\u0000h:f",
        "pump": [
          "aA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\w-]*-(\\d+)+$",
    "inputs": [
      {
        "prefix": [
          "-0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": "-a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "355035506230811388-",
        "pump": [
          "3550"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^HZ_([A-Z]+([_]?[A-Z]+)*)$",
    "inputs": [
      {
        "prefix": [
          "HZ_A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "HZ_A_A"
        ],
        "suffix": "H__",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "HZ_AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "HZ_"
        ],
        "suffix": "HZZZHZZZZZZZZZZZZ__",
        "pump": [
          "HZZZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+",
    "inputs": [
      {
        "prefix": [
          "#If"
        ],
        "suffix": "a",
        "pump": [
          "\t_\r\t_\r"
        ]
      },
      {
        "prefix": [
          "#If\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000__\r"
        ]
      },
      {
        "prefix": [
          "#If"
        ],
        "suffix": "a",
        "pump": [
          "\t_\r\t_\r"
        ]
      },
      {
        "prefix": [
          "#If\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000__\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:[^>\"']+|\"(?:\\\\.|[^\\\\\"]+)*\"|'(?:\\\\.|[^\\\\']+)*')*>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "?!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\\'\">a'a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<C-{<C-{&CgPa!w`F%+",
        "pump": [
          "<C-{"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "?!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\\'\">a'<\\\"\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "y<!fy<!f5K50AE,/6NcB",
        "pump": [
          "y<!f"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([0-9]+[^0-9]?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "aa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0aa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "name-70(?:.|\\n|\\r)*bg-success(?:.|\\n|\\r)*text-success(?:.|\\n|\\r)*70\\.00(?:.|\\n|\\r)*<th class=\"text-center\">1<\\/th><\\/tr>",
    "inputs": [
      {
        "prefix": [
          "name-70"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-70"
        ],
        "suffix": "ntex",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "name-70"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-70"
        ],
        "suffix": ".",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(<a .+?a>|[^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*')",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "<a <a aa>"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"a\\",
        "pump": [
          "<a \\a>"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "<a <a aa>"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\$<\"a",
        "pump": [
          "<a \\a>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.|[\\n\\r])*:\\*\\*(?:.|[\\n\\r])+?\\n\\n?((?:.|[\\n\\r])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:**a:\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:**a:\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(.|\\s)*?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "'s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "  \t   \t \n\t\r\t\t\t \t \t\t",
        "pump": [
          "  \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "file:/{2,}(-\\.)?([^\\s/?\\.#-]+\\.?)+(/[^\\s]*)?",
    "inputs": [
      {
        "prefix": [
          "file://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "file://\u0000\u0000"
        ],
        "suffix": "##",
        "pump": [
          "$\u0000"
        ]
      },
      {
        "prefix": [
          "file://a"
        ],
        "suffix": "il.f\tf",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "file://\u0000\u0000\u0000"
        ],
        "suffix": "##",
        "pump": [
          "$\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "file:/a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "file:/\u0000\u0000"
        ],
        "suffix": "##",
        "pump": [
          "$\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--EXAMPLE-USAGE-->((?:.|[\\r\\n])*)<!--END-EXAMPLE-USAGE-->",
    "inputs": [
      {
        "prefix": [
          "<!--EXAMPLE-USAGE-->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--EXAMPLE-USAGE-->"
        ],
        "suffix": "!--",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--EXAMPLE-USAGE-->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--EXAMPLE-USAGE-->"
        ],
        "suffix": "MPLE",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/ -- BEGIN UMD WRAPPER AFTERWORD --(\\n|.)*\\/\\/ -- END UMD WRAPPER AFTERWORD --",
    "inputs": [
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER AFTERWORD --"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER AFTERWORD --"
        ],
        "suffix": "END UMD WRAPPER AFTERWO",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER AFTERWORD --"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER AFTERWORD --"
        ],
        "suffix": "U",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(;.*?)*,\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",a",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          ";\u0000"
        ],
        "suffix": "",
        "pump": [
          ";\u0000"
        ]
      },
      {
        "prefix": [
          "\b\t;|;~\b{=}:;{~<=??|{:;?}}|<<~}|>~<;|>?~>}@:;}\b>@=|?=;:?\b:?~>>={@\b>{"
        ],
        "suffix": "?;;;@>@;{:",
        "pump": [
          "?;;;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ta",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wsw="
        ],
        "suffix": "",
        "pump": [
          "''sw="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\[\\s*\"((?:\\\\\"|.)*?)\"\\s*\\]",
    "inputs": [
      {
        "prefix": [
          "[\""
        ],
        "suffix": "",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "[\""
        ],
        "suffix": "[",
        "pump": [
          "\\\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(\\s*(('((\\\\.|[^'])*)'|\\d+)(\\s*,\\s*('((\\\\.|[^'])*)'|\\d+))*)\\s*\\)",
    "inputs": [
      {
        "prefix": [
          "(0"
        ],
        "suffix": "",
        "pump": [
          " ,'\\\\'"
        ]
      },
      {
        "prefix": [
          "('"
        ],
        "suffix": "(\\'a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "d,'"
        ],
        "suffix": "",
        "pump": [
          ".','"
        ]
      },
      {
        "prefix": [
          "(0"
        ],
        "suffix": "",
        "pump": [
          " ,'\\\\'"
        ]
      },
      {
        "prefix": [
          "('"
        ],
        "suffix": ",\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "d,'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*\\.?\\s*(([\\w_]+)(\\(\\s*(,?\\s*([\\d\\.]+|\\\".+\\\"|\\'.+\\'|\\{\\d+\\}))*\\s*\\))?)",
    "inputs": [
      {
        "prefix": [
          ".a("
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ".a(,."
        ],
        "suffix": "\",",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ".a("
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ".a(,."
        ],
        "suffix": "\"",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ")s("
        ],
        "suffix": ".913.913546490985",
        "pump": [
          ".913"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\\\{}\\s]+|\\\\[\\\\{}])+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\{{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/%((?:.|\\n)*?)%\\/",
    "inputs": [
      {
        "prefix": [
          "/%"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/%"
        ],
        "suffix": "/\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/%"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/%"
        ],
        "suffix": "%",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^https?://([\\S]+\\.)*[\\S]+(:[\\d]{2,})*(/+[\\S+]*)*$",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "\\x09",
        "pump": [
          "\\x00..."
        ]
      },
      {
        "prefix": [
          "https://a/"
        ],
        "suffix": "\t",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "http://\\.^[//\\.^2"
        ],
        "suffix": "//:///:/2///\\.^x/\r\b",
        "pump": [
          "//:/"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "\\x09",
        "pump": [
          "\\x00..."
        ]
      },
      {
        "prefix": [
          "https://a/"
        ],
        "suffix": "\t",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "http://+"
        ],
        "suffix": "\\///\\///+//t///+\\p://+\\\t",
        "pump": [
          "\\///"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/.*)*\\.(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//////////5/////5eFDB",
        "pump": [
          "////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:((([0]|(([1-9])([0-9]+)*))\\.([0-9]+)*(([eE])([+-]?[0-9]+))?)|(\\.([0-9]+)(([eE])([+-]?[0-9]+))?)|(([0]|(([1-9])([0-9]+)*))(([eE])([+-]?[0-9]+))?)))",
    "inputs": [
      {
        "prefix": [
          "1"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "10"
        ],
        "suffix": "1E++",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "10"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3474347446289454269",
        "pump": [
          "3474"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "puffin\t0._0"
        ],
        "suffix": "f",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "puffin/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "puffin\t0._0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "puffin/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( (?:\\$shell)? ( (?:->|->|\\xA3) (?:\\S+->)* (?:[\\[\\{].*?[\\]\\}])* )) (\\S*)$",
    "inputs": [
      {
        "prefix": [
          " $shell  -> "
        ],
        "suffix": "",
        "pump": [
          "!->-->"
        ]
      },
      {
        "prefix": [
          "   £ "
        ],
        "suffix": " £\t",
        "pump": [
          "a->a->"
        ]
      },
      {
        "prefix": [
          "   £ ?:"
        ],
        "suffix": "->|->|->?:->->|->|->?:->|->?:->|->?:->|->|->|->|\\xA3?:\\->",
        "pump": [
          "->|->|->?:->"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:\\*/)?\\s*(?:/\\*.*?\\*/)*\\s*((?:\\*|//)\\s*=\\s*require((?:_directory|_tree)?)\\s+(.+))",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "/**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/**/*\t",
        "pump": [
          "/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?:)?//((\\w+).)+(\\w+)/",
    "inputs": [
      {
        "prefix": [
          "https://a{"
        ],
        "suffix": "",
        "pump": [
          "000{"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "ps:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "scdwscdwZU26qxnP9fjbEIQ",
        "pump": [
          "scdw"
        ]
      },
      {
        "prefix": [
          "https://hu"
        ],
        "suffix": "",
        "pump": [
          "000{"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "tpa/$//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "httphttpVUQZZFQSMPBDQBSW",
        "pump": [
          "http"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\s){1,}?-->",
    "inputs": [
      {
        "prefix": [
          "<!--!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<!---<!--"
        ],
        "suffix": "-\t \n\t -\t \n\t \r \n\t\n  \t\r\n\t\n\t",
        "pump": [
          "-\t \n\t "
        ]
      },
      {
        "prefix": [
          "<!--="
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "-<!--^\t\n\t\r"
        ],
        "suffix": "\t  \t\t  \t \t \t\t\r \r",
        "pump": [
          "\t  \t"
        ]
      },
      {
        "prefix": [
          "<!--!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<!--<!--"
        ],
        "suffix": "\t \n \t \n \t \t\r\t \n \t \t",
        "pump": [
          "\t \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s|(?:#[^\\n\\r]*))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t#\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t#\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[_a-z0-9-]+((\\.|\\+)[_a-z0-9-]+)*@([\\w]*-?[\\w]*\\.)+[a-z]{2,4}$",
    "inputs": [
      {
        "prefix": [
          "a+a@."
        ],
        "suffix": "",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a@-.a",
        "pump": [
          "aa."
        ]
      },
      {
        "prefix": [
          "a+a@."
        ],
        "suffix": "",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a@",
        "pump": [
          "aa."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
    "inputs": [
      {
        "prefix": [
          "^.^@[250.250.250.2500:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "2a\"@[26.26.26.",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "^\"^\"@a-.^@a.a!\\x0e^\"@[250.250.250.2500:\\x7f"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "-",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+(=\\'?\\\"?[\\w-]?\\'?\\\"?)?(&\\w+(=\\'?\\\"?[\\w-]*\\'?\\\"?)?)*)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "='\"&&",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w&w='"
        ],
        "suffix": "\u0000",
        "pump": [
          "\"&w='"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "OrAXOrAXE1VeKxDdgg[",
        "pump": [
          "OrAX"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)",
    "inputs": [
      {
        "prefix": [
          ":global("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ":global("
        ],
        "suffix": "lo[))a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\r:global("
        ],
        "suffix": "nUiUnUiUnn^ak#P\n\\",
        "pump": [
          "nUiU"
        ]
      },
      {
        "prefix": [
          ":global("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ":global("
        ],
        "suffix": "))][:g",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "o:global("
        ],
        "suffix": "`7#o`7#ouZ7 =X&st",
        "pump": [
          "`7#o"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s*)\\n)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "uh\t\r\n\r \t\r\t\n\n  \t"
        ],
        "suffix": "\n\r\n\t\n\n\n\r\n\t\n\n \n\t\r\t\n \r\n   \r\t\t\r",
        "pump": [
          "\n\r\n\t\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\\\w\\\\d_-]+\\\\.[\\\\w\\\\d_-]+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "-\\--"
        ]
      },
      {
        "prefix": [
          "-.--._"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-._"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aa-\\\\",
        "pump": [
          "-\\--"
        ]
      },
      {
        "prefix": [
          "-.--._"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-._"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([#.](?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+)\\s*\\(",
    "inputs": [
      {
        "prefix": [
          ".-"
        ],
        "suffix": "",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "a\t",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          ".-"
        ],
        "suffix": "",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\673\\673E3\\673\\673E373a673\\673E373aE1BB22AFlfOjCkgk",
        "pump": [
          "\\673\\673E3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$",
    "inputs": [
      {
        "prefix": [
          ";\\x0a"
        ],
        "suffix": "",
        "pump": [
          ";\\x0a;\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a\na\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[ers]*([-+]?[\\ddwmy]+)+",
    "inputs": [
      {
        "prefix": [
          "+0"
        ],
        "suffix": "e+0e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "+0"
        ],
        "suffix": "+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "wd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"((?:[^\"\\\\]+|\\\\.)*)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "^C10^C104^X^a\rq^o_",
        "pump": [
          "^C10"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": ",tf&,tf&*/Ch#2>f8,Z",
        "pump": [
          ",tf&"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)\\.*(?:\\t|\\s)*(\\d{1,2})\\w*,*(?:\\t|\\s)*(\\d{4})(?:\\t|\\s)*(?:\\-|to)(?:\\t|\\s)*(\\w+)\\.*(?:\\t|\\s)*(\\d+)\\w*,*(?:\\t|\\s)*(\\d{4})",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "000toa\n00",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "toa0\n0000\n",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\((\\\\[\\\\\\)]|[^\\)])*\\)[egimosx]*",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": ")a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": ")\\a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*)\\.fileName = \"(.*\\/)*(.*\\.vmdk)\"$",
    "inputs": [
      {
        "prefix": [
          ".fileName = \""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ".fileName = \""
        ],
        "suffix": "= ",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "\u0000fileName = \"\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s\\w)|(\\w+)|\\?{0,2})\\s([\\w\\+\\-\\/\\\\\\.]+)(\\s->\\s)?([\\w\\+\\-\\/\\\\\\.]+)*\\n{0,1}",
    "inputs": [
      {
        "prefix": [
          "\taa"
        ],
        "suffix": "\na\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\taa"
        ],
        "suffix": "\n?a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\taa"
        ],
        "suffix": "?\t",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```javascript(.|\\n|\\r)*?```",
    "inputs": [
      {
        "prefix": [
          "```javascript"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "```javascript"
        ],
        "suffix": "`j``",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "```javascript"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "```javascript"
        ],
        "suffix": "sc",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(#[-a-z\\d_]*)?$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2tkb2tkbbiqfakwtgmx",
        "pump": [
          "2tkb"
        ]
      },
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "hhbehhbeckctrcbcybz",
        "pump": [
          "hhbe"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\".*?\"|[^#\"])*)#.*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"\"i\"\"\"\"\"i\"\"{)(\"\"\";|@;=;@?}<{\"DlXEHjAgJEZvpMtxn\"\"\"A\"\"\"A^\")*|<\b?~",
        "pump": [
          "\"\"\"i\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "MSIE\\s+([^;)]+)+",
    "inputs": [
      {
        "prefix": [
          "MSIE\ta"
        ],
        "suffix": ")",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "MSIEs\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "MSIE\ta"
        ],
        "suffix": "IE\t)M",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "MSIEs\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(([^\"\\\\]+|\\\\([\\\\\"nt]))+)\"",
    "inputs": [
      {
        "prefix": [
          "\"!"
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "W*2aW*2ac4 ~)[`o(T",
        "pump": [
          "W*2a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*\\$\\{.*\\}.*(\\$\\{.*\\}.*)*)$",
    "inputs": [
      {
        "prefix": [
          "${}"
        ],
        "suffix": "a",
        "pump": [
          "${}}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<[Hh][Tt][Mm][Ll]>((?:.|\\n)*?)<\\/[Hh][Tt][Mm][Ll]>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<HTML>"
        ],
        "suffix": "ML",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<HTML>"
        ],
        "suffix": "<HTML",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{(?:([^{}]+):)*([a-zA-Z][a-zA-Z0-9_]*)\\}",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "|:::"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "{$:{",
        "pump": [
          "a:a:"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "|:::"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "a}{$",
        "pump": [
          "a:a:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( {4}[^\\n]+(?: *\\n)*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "    a \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!\\[CDATA\\[([^\\]]+|\\][^\\]]|\\]\\][^>])*\\]\\]>",
    "inputs": [
      {
        "prefix": [
          "<![CDATA["
        ],
        "suffix": "",
        "pump": [
          "^!"
        ]
      },
      {
        "prefix": [
          "<![CDATA[a"
        ],
        "suffix": "A",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<![CD"
        ],
        "suffix": "ATA[ATA[As-\nt0T5%*\bK(d",
        "pump": [
          "ATA["
        ]
      },
      {
        "prefix": [
          "<![CDATA["
        ],
        "suffix": "",
        "pump": [
          "^!"
        ]
      },
      {
        "prefix": [
          "<![CDATA[a"
        ],
        "suffix": "]>]]><![C",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\\<![CD"
        ],
        "suffix": "ATA[ATA[?2ly\\29uNm\tGB;",
        "pump": [
          "ATA["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\[\\\\\"]|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\\\\\\\\\\U"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\UmITZAxxKgBl\\\\\\UmITZAxxFKgBlHqADiu11ksKXLGXdzpnw",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^@]+?)@(([a-z0-9]-*)*[a-z0-9]+\\.)+([a-z0-9]+)$",
    "inputs": [
      {
        "prefix": [
          "A@a."
        ],
        "suffix": "",
        "pump": [
          "00."
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "-$@.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "\u0000@0\u00000\u0000"
        ],
        "suffix": "",
        "pump": [
          "00\u0000"
        ]
      },
      {
        "prefix": [
          "^@0zkyo"
        ],
        "suffix": "rkiewwrawa9.rkiewwrawa9.0zkyorkiewwrawa9.a-zajggunwosom",
        "pump": [
          "rkiewwrawa9."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([\\$\\&\\#])([a-zA-Z_0-9]+)(\\s*[^>]*)*>",
    "inputs": [
      {
        "prefix": [
          "<&0"
        ],
        "suffix": "",
        "pump": [
          "{"
        ]
      },
      {
        "prefix": [
          "<$a"
        ],
        "suffix": "<>>",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<&7o<&7oNqKp'PQBa\ty",
        "pump": [
          "<&7o"
        ]
      },
      {
        "prefix": [
          "<&0"
        ],
        "suffix": "",
        "pump": [
          "{"
        ]
      },
      {
        "prefix": [
          "<$a"
        ],
        "suffix": "$a<><",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<#eP<#eP!Us/3Q_oG)'l",
        "pump": [
          "<#eP"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^\\\\\\/]*|\\\\.)*)\\/(?:\\(([mygi]+)\\))?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "+>I7+>I7%aQ cg)##",
        "pump": [
          "+>I7"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\S+)(\\s*)([^\\[]*)(\\[.*\\]\\s*)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "][\t]a[",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*[\\r\\n]){3,}",
    "inputs": [
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "\n\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n\n"
        ],
        "suffix": "\n\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\$[wnoitsgz><]|\\$[lh]\\[.+\\]|\\$[lh]|\\$[0-9a-f]{3})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "<$$",
        "pump": [
          "$<$h[a]$h[a]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<$",
        "pump": [
          "$<$h[a]$h[a]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\|@?[a-z0-9_]+(:.*)?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "|a:|a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)((\\[(.*?)\\])+)$",
    "inputs": [
      {
        "prefix": [
          "[]"
        ],
        "suffix": "^",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{html\\s+([\\w\\$\\-]+(\\.|\\s)?[\\w\\$\\-]*)+\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{html $"
        ],
        "suffix": "",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "{{html\ta"
        ],
        "suffix": "m",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{{h"
        ],
        "suffix": "tml\ttml\tODAATLEHNN",
        "pump": [
          "tml\t"
        ]
      },
      {
        "prefix": [
          "{{html $"
        ],
        "suffix": "",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "{{html\ta"
        ],
        "suffix": "{h",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{{html\t"
        ],
        "suffix": "tmlhtmlhtmlml\th",
        "pump": [
          "tmlh"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Name servers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Name servers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name servers:\n"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Name servers:\\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name servers:\n"
        ],
        "suffix": "s:\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+\\\\/)*(.+)\\\\.(.+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\/\\a\\/",
        "pump": [
          "a\\/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\/\\a\\a",
        "pump": [
          "a\\/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<pagetitle> (?:<[^<>]*>)* ( \\s* (?:[^<\\s]+\\s*?)* )\\s*\n\t\t<",
    "inputs": [
      {
        "prefix": [
          "<pagetitle>    a"
        ],
        "suffix": "e",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<pagetitle>    "
        ],
        "suffix": "\\s*e\\s*etitle>    \\s* ",
        "pump": [
          "\\s*e"
        ]
      },
      {
        "prefix": [
          "<pagetitle>    a"
        ],
        "suffix": " \ta<page",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<pagetitle>    "
        ],
        "suffix": "\\s*\b\\s*\b\b\b\b\b\b\r\t\t\r\n\n\b\b\b\t\r\t\t\n\b\r\r\r\t\r\b\t\n\t\b",
        "pump": [
          "\\s*\b"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\w\\d]+([\\w\\d\\!\\#\\$\\%\\&\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~\\.]*[\\w\\d]+)*@([\\w\\d]+\\.)+[\\w]{2,}$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "0.@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "lCGxlCGxST4n+K8f",
        "pump": [
          "lCGx"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "0.@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pmvGpmvGdc?_OSnJ",
        "pump": [
          "pmvG"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-z]+?:\\/\\/([-\\w\\.]+[-\\w])+(:\\d+)?(\\/([\\w\\/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "inputs": [
      {
        "prefix": [
          "a://"
        ],
        "suffix": "-:.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "/\ta://a-a/#a.",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)(>.*)*#",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#a",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          ">\u0000"
        ],
        "suffix": "",
        "pump": [
          ">\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#a",
        "pump": [
          ">>"
        ]
      },
      {
        "prefix": [
          ">\u0000"
        ],
        "suffix": "",
        "pump": [
          ">\u0000"
        ]
      },
      {
        "prefix": [
          "r>oAMz|W>:<:|::\b:\b\b\b~~=|{\b\b;?\b}{<=>~~<;"
        ],
        "suffix": "=>?>\b>{>=>?>\b>{>=>{",
        "pump": [
          "=>?>\b>{>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#([a-z0-9_:\\-]+)|\\.([a-z0-9_:\\-]+)|\\[([a-z0-9_:\\-]+)(=\"((?:\\\\.|[^\"])*)\"|='((?:\\\\.|[^'])*)'|=((?:\\\\.|[^\\]])*))?\\s*\\]|\\s*(\\S)",
    "inputs": [
      {
        "prefix": [
          "[a="
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "[a=\""
        ],
        "suffix": "\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "[h=\""
        ],
        "suffix": "'\\(\\\\-)\\'\\(\\\\-)\\\\.=\\PI\\)\\'0\\\\(m\\:z=]|\\0-",
        "pump": [
          "'\\(\\\\-)\\"
        ]
      },
      {
        "prefix": [
          "[a="
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "[a=\""
        ],
        "suffix": ".]\\a#\"]\\",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(((\\\\.)|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a|b|(((.*)*)*x))Ā",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "bĀa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=i%k=i%k;2_",
        "pump": [
          "=i%k"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "b",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ĀaxaĀaxa|b|",
        "pump": [
          "Āaxa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a+)+$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaaaaaaaaaaaaaaava",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aaa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaaaaaaaaaaaaaa.",
        "pump": [
          "aaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[0-9]+(?:[\\._]?[0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0.0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "078607867740186342\r\r",
        "pump": [
          "0786"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\r|\\t| ]*\\n[\\r|\\t| ]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\n\t"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "",
        "pump": [
          "|\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\n\t"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "",
        "pump": [
          "|\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Object\\.create\\(\\s+((THREE.)?(\\w+)\\.prototype[,]?\\s*)+\\)",
    "inputs": [
      {
        "prefix": [
          "Object.create( THREEaa.prototype"
        ],
        "suffix": "",
        "pump": [
          "THREE.prototypeT.prototype"
        ]
      },
      {
        "prefix": [
          "Object.create(\t"
        ],
        "suffix": "o",
        "pump": [
          "THREEaa.prototypeTHREEaa.prototype"
        ]
      },
      {
        "prefix": [
          "Object.create( THREEaaObject.prototype"
        ],
        "suffix": "",
        "pump": [
          "THREE.prototypeT.prototype"
        ]
      },
      {
        "prefix": [
          "Object.create(\t"
        ],
        "suffix": "E",
        "pump": [
          "THREEaa.prototypeTHREEaa.prototype"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+\\/[\\w\\+]+)(;.*)*$",
    "inputs": [
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "a",
        "pump": [
          ";;"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+)(?::((?:[\\w\\.]+,?)+))?$",
    "inputs": [
      {
        "prefix": [
          "a:."
        ],
        "suffix": "!",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "a.:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w:.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a:"
        ],
        "suffix": "sMcasMcamMtXHUKebm:w",
        "pump": [
          "sMca"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:insert_object|text_editor|texteditor|page_list|pagelist|snippet)\\()((?:\\(.*?\\)|[^()]*?)*)(\\))",
    "inputs": [
      {
        "prefix": [
          "insert_object("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "snippet("
        ],
        "suffix": "p",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "pagelist("
        ],
        "suffix": "snipsnippenipppag",
        "pump": [
          "snip"
        ]
      },
      {
        "prefix": [
          "insert_object("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "snippet("
        ],
        "suffix": "t_edit",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ")text_editor("
        ],
        "suffix": "?:in?:insert_obje",
        "pump": [
          "?:in"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\t|\\x0a|\\x0d|\\s)+$",
    "inputs": [
      {
        "prefix": [
          " "
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\r\n\n\n\r\r\n\n\r\n\t\r\n\n\b",
        "pump": [
          "\n\n\n\r"
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\t\r\n\r\t\r\n\r \r \r\r\r\r \t \tO",
        "pump": [
          "\r\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\.?[^.]+)+)\\.([^.]*)$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "/!"
        ]
      },
      {
        "prefix": [
          ".a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aJCFaJCF)gb\t43cNor",
        "pump": [
          "aJCF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$bar(.|\\n)*\\$baz",
    "inputs": [
      {
        "prefix": [
          "$bar"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "$bar"
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "$bar"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "$bar"
        ],
        "suffix": "a$b",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"((?:\\\\.|.)*?)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\"\\:\\?\\?\\?"
        ],
        "suffix": "\\?\\?\\\\\\?\\?\\\\MMfB:M}zO4NEOi0vj28gqhGdIIaRfsbSYtOznjkvlRXsKsOyVTnjDBgc",
        "pump": [
          "\\?\\?\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^url\\((\"([^\\\\\"]|\\.)*\")\\)",
    "inputs": [
      {
        "prefix": [
          "url(\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "url(\""
        ],
        "suffix": "ur\"",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "url\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "#\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^# \\d+ \"/usr/lib/.*\\n(([^#\\n].*)?\\n)*",
    "inputs": [
      {
        "prefix": [
          "# 0 \"/usr/lib/\n"
        ],
        "suffix": "usr",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:\\{(?:.|\\n)*\\}|\\[(?:.|\\n)*\\])\\s*$",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "[",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@\"(?:\\.|(\\\\\\\")|[^\\\"\"\\n])*\"",
    "inputs": [
      {
        "prefix": [
          "@\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "@\""
        ],
        "suffix": "@\\\"\".",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "@\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "@\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "@\""
        ],
        "suffix": "@\\",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "@\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\\@\"?:\\"
        ],
        "suffix": "..g\\.`_]:...g\\.`_]:.;..\\:3\\\\\\|.\\:77kc\\)ru|hyo)\\\\\\\\|.\\.|\\\\.|\\\\",
        "pump": [
          "..g\\.`_]:."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z_$][a-zA-Z_$0-9]*(\\[([1-9]\\d*)*\\])*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "!",
        "pump": [
          "[11]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "1a[[",
        "pump": [
          "[11]"
        ]
      },
      {
        "prefix": [
          "a["
        ],
        "suffix": "19691969972030929619",
        "pump": [
          "1969"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w\\.-]*)*\\/?\\S",
    "inputs": [
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "s:.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "s:ahttps:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "d-"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "ps://",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "d-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\s|\\n)*?-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!--",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "\n<!--P5}$U\nkNZb)3P[=;M:;`jh\nS\n&}\rj&r5#EDICty|{&=1W\tO)|LM"
        ],
        "suffix": ".\n\n*\t54\n.\n\n*\t54\nU\t{)/NUk\nGC}!x",
        "pump": [
          ".\n\n*\t54\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          ";FV!p0\\\\-e3%\b_c<!-- gVm\n*0z(=Oj'o!|j\t{JjbW"
        ],
        "suffix": "\t  \t\t  \t\r;RWQw57q$x1CD\tHc6&\"{tS1ufa#72Ab&VX3y@y7'\t\"4[",
        "pump": [
          "\t  \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "class\\s*=\\s*((\\\").*?\\\"|(\\{.*?\\}|\\S)+)",
    "inputs": [
      {
        "prefix": [
          "class="
        ],
        "suffix": "ass\t",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          "class="
        ],
        "suffix": "ass\tclas",
        "pump": [
          "{}{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\\\/?\\\\w+((\\\\s+\\\\w+(\\\\s*=\\\\s*(?:\\\".*?\\\"|'.*?'|[\\\\^'\\\">\\\\s]+))?)+\\\\s*|\\\\s*)\\\\/?>",
    "inputs": [
      {
        "prefix": [
          "<\\/\\w\\s\\w"
        ],
        "suffix": "",
        "pump": [
          "\\s\\w\\=\\''"
        ]
      },
      {
        "prefix": [
          "<\\/\\w"
        ],
        "suffix": "=\\s",
        "pump": [
          "\\s\\w\\=\\s\""
        ]
      },
      {
        "prefix": [
          "<0\t0\t0=\t\f"
        ],
        "suffix": "",
        "pump": [
          "\r\t0=\t\f"
        ]
      },
      {
        "prefix": [
          "<\\/\\w\\s\\w"
        ],
        "suffix": "",
        "pump": [
          "\\s\\w\\=\\''"
        ]
      },
      {
        "prefix": [
          "<\\/\\w"
        ],
        "suffix": "=\\",
        "pump": [
          "\\s\\w\\=\\s\""
        ]
      },
      {
        "prefix": [
          "<0\t0\t0A"
        ],
        "suffix": "",
        "pump": [
          "\r0=\t\t0A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z0-9]+((\\_)([a-z0-9]+))*)+((\\.)[a-z0-9]+((\\_)([a-z0-9]+))*)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0\u00000\u00000_a"
        ],
        "suffix": "\u0000",
        "pump": [
          "_0_a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaaaaa29f1a471",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a_$a_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0\u00000\u00000"
        ],
        "suffix": "\u0000",
        "pump": [
          "_0\u00000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0354035492330986",
        "pump": [
          "0354"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\w\\d]*[-_]*[\\w\\d]*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d"
        ],
        "suffix": "\u0000",
        "pump": [
          "wd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "LYqeLYqesHh8*",
        "pump": [
          "LYqe"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r\\n|\\r|\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\r"
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w\\-:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\n8=\"\\iX\\w8iiX='\\w\n8iX=  \r\r\r\r"
        ],
        "suffix": "\\w\n8\\w8\\iX\\w\\w\n8\\w8\\iX\\w8iiX='\\w\n8iX=  \r\r\r\r\\w\n8iX\\w8i",
        "pump": [
          "\\w\n8\\w8\\iX\\w"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a$'a\\\ta\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "w='"
        ],
        "suffix": "\\\\\\w\\\\\\\\\\w\\\\8w\\\\3aFe\\\\w868ea29C5F1wNU83RBKFJmsTtwrbrKYFItOpMjTZ;kDk<e6@>SnV=TSf5\\w\\\\ww",
        "pump": [
          "\\\\\\w\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(\\/?)([-a-zA-Z:0-9_.]+|{[^{}]*}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{.*?}))*\\s*(\\/?)\\s*>",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:%\\s+%|%\"|.)*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "%\\x09%"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "%\t",
        "pump": [
          "%\t%"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "%\"\u0000"
        ]
      },
      {
        "prefix": [
          "\"JEOCZT"
        ],
        "suffix": "%\t%\t%\t%\t%A%\t%\t%\t%\t%\t%A%\t%WAXz%%\t%AK%\t%WALJEEbOqHBrEOCZTDK%\t%%\t%AK%\t%WALJEOCCZT\t%W",
        "pump": [
          "%\t%\t%\t%\t%A%\t"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "%\\x09%"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "%\t",
        "pump": [
          "%\t%"
        ]
      },
      {
        "prefix": [
          "\"%\""
        ],
        "suffix": "",
        "pump": [
          "%\"%\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(and|or)\\s+(.*?)([<>=!]+)(.*?)\\s*((and |or ).*)*$",
    "inputs": [
      {
        "prefix": [
          "or\t!"
        ],
        "suffix": "$",
        "pump": [
          "and and "
        ]
      },
      {
        "prefix": [
          "ors!and "
        ],
        "suffix": "",
        "pump": [
          "or and "
        ]
      },
      {
        "prefix": [
          "and"
        ],
        "suffix": " =n=and and and  =n=and and and and =o|ol=and \"glnd =z{vdOgand and and nda\n.",
        "pump": [
          " =n=and and and "
        ]
      },
      {
        "prefix": [
          "or\t!"
        ],
        "suffix": "$",
        "pump": [
          "and and "
        ]
      },
      {
        "prefix": [
          "ors!or \u0000"
        ],
        "suffix": "",
        "pump": [
          "or \u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+?)=(\\S+::\\S*(?::\\s*,\\s*\\S+::\\S*)*)?$",
    "inputs": [
      {
        "prefix": [
          "!==::"
        ],
        "suffix": " ",
        "pump": [
          ":,;:::,:::"
        ]
      },
      {
        "prefix": [
          "a=a::"
        ],
        "suffix": "\t,:",
        "pump": [
          ":,a:::,a::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+[\\_]?[\\-]?)+\\[\\d+\\]{1}",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-a[a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "VuaCVuaCKkcwyHhfx",
        "pump": [
          "VuaC"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "]a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ogDdogDdr95yQYxwwn",
        "pump": [
          "ogDd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:@endpoint)?\\(?((?:[a-z]+:\\s*[a-z_:,\\.\\[\\]\\/0-9]+)+)[ ]*\\)?",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "@endpoint",
        "pump": [
          "a:aa"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "\t",
        "pump": [
          "a:aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^+\\-0-9:\\s\\/\\]\"'`\\.]([^:\\s\\/\\]\"'`]*[^:\\s\\/\\]\"'`\\.])*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "+.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "+.",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(gnu)\\s?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "gnu\ta"
        ],
        "suffix": "gn\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "gnu.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "gnu\ta"
        ],
        "suffix": "uagn$gn",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "gnu.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-zA-Z0-9]*)(\\.[a-zA-Z0-9]+)?)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          ".0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "\u0000",
        "pump": [
          "00A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "YtvDYtvDG5oAov1lHh.",
        "pump": [
          "YtvD"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:[A-Fa-f0-9]{0,4}:){2,7}[A-Fa-f0-9]{0,4},? ?)+|",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a, a",
        "pump": [
          "a::a::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a, $aa",
        "pump": [
          "a::aa::"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "a,  ",
        "pump": [
          "::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s*/*\\s*script(.*?)*>",
    "inputs": [
      {
        "prefix": [
          "</ script"
        ],
        "suffix": "",
        "pump": [
          "?"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "\tsc",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "G<\tsc"
        ],
        "suffix": "riptript*w|46IAQ<\tsc&",
        "pump": [
          "ript"
        ]
      },
      {
        "prefix": [
          "</ script"
        ],
        "suffix": "",
        "pump": [
          "?"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "ia<",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "><sc"
        ],
        "suffix": "riptripttV0hjrACqNWPix",
        "pump": [
          "ript"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(context|describe)\\s+('(.*)'|\"(.*)\")+\\s*(\\{|do)",
    "inputs": [
      {
        "prefix": [
          "context ''"
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "context\t"
        ],
        "suffix": "c",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:[^\\n\\r%][^\\n\\r]*(\\r\\n|\\n|\\r)+)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\r\n%",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:https?:\\/\\/)?(?:(?:[a-z0-9]?(?:[a-z0-9\\-]{1,61}[a-z0-9])?\\.[^\\.|\\s])+[a-z\\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\\d{1,5})*[a-z0-9.,_\\/~#&=%+?\\-\\\\(\\\\)]*)",
    "inputs": [
      {
        "prefix": [
          "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.\\x00"
        ],
        "suffix": "",
        "pump": [
          "00000000000000000000000000000000000000000000000000000000000000.\\x00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$0aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "pump": [
          "a.aaaa.a"
        ]
      },
      {
        "prefix": [
          "https://httpshttpshttpshttpshttpshttpshttpshttpshttpshttpshttpshttpshtt.{"
        ],
        "suffix": "",
        "pump": [
          "00000000000000000000000000000000000000000000000000000000000000.\\x00"
        ]
      },
      {
        "prefix": [
          "https://aa.\\x00"
        ],
        "suffix": "",
        "pump": [
          "000.\\x00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://26.25",
        "pump": [
          "a.aaaa.a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^http(s)?:\\/\\/[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(\\/[^#|]*)?(\\?[^#|]*)?$",
    "inputs": [
      {
        "prefix": [
          "https://-"
        ],
        "suffix": "{",
        "pump": [
          ":---"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "#a:",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "1y1yt11y1yt1ywhttphttpst+",
        "pump": [
          "1y1yt1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-+(?: *\\n*)*rediscover the web(?:\\n|.)*$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": " rediscov",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": " rediscover",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "r-------"
        ],
        "suffix": "        \n  \n    ",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*app\\/scripts\\/templates\\/foo.ejs",
    "inputs": [
      {
        "prefix": [
          "Views!Foo = Backbone!View!extend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "mpla",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "ViewsVFoo = BackboneVViewsextend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "j",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "version (1\\.([0-9]{2})\\.([0-9]*\\.*)*)* ",
    "inputs": [
      {
        "prefix": [
          "version "
        ],
        "suffix": "",
        "pump": [
          "1.00.."
        ]
      },
      {
        "prefix": [
          "version 1.00."
        ],
        "suffix": "0",
        "pump": [
          "1.00.."
        ]
      },
      {
        "prefix": [
          "version 1\u000000\u0000"
        ],
        "suffix": "",
        "pump": [
          "01\u000000\u0000"
        ]
      },
      {
        "prefix": [
          "vversion 1."
        ],
        "suffix": "61.161.1.61.606.1.606.16",
        "pump": [
          "61.1"
        ]
      },
      {
        "prefix": [
          "version "
        ],
        "suffix": "",
        "pump": [
          "1.00.."
        ]
      },
      {
        "prefix": [
          "version 1.00."
        ],
        "suffix": "1.1",
        "pump": [
          "1.00.."
        ]
      },
      {
        "prefix": [
          "version 1\u000000\u00000"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "version 1.11.11..21...vversion 1.21..1.311"
        ],
        "suffix": ".........21..",
        "pump": [
          "...."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z]+[a-z\\d\\$]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "FACDFACDFAVQRCAMGvn\b",
        "pump": [
          "FACD"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((.+\\n)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\)([\\s\\n\\t]+?|\\/\\/*.*?\\*\\/|\\/\\/[^\\n]*\\n)*?\\{",
    "inputs": [
      {
        "prefix": [
          ")"
        ],
        "suffix": "",
        "pump": [
          "//*/\\x0a/*/"
        ]
      },
      {
        "prefix": [
          ")\t"
        ],
        "suffix": "/\t/\n/",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ")//)"
        ],
        "suffix": "\n\t\r\n\n\t\r\n\n  \n \t\t\n ",
        "pump": [
          "\n\t\r\n"
        ]
      },
      {
        "prefix": [
          ")"
        ],
        "suffix": "",
        "pump": [
          "//*/\\x0a/*/"
        ]
      },
      {
        "prefix": [
          ")\t"
        ],
        "suffix": "/\t/\n/",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ")"
        ],
        "suffix": "\n\r\n\t\n\r\n\t\n\n\t\t\r  \t\n ",
        "pump": [
          "\n\r\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^# \\d+ \"/usr/X11R6/include/.*P[.]h\".*\\n(([^#\\n].*)?\\n)*",
    "inputs": [
      {
        "prefix": [
          "# 0 \"/usr/X11R6/include/P.h\"\n"
        ],
        "suffix": "c",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|\\d|_|-)*=$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_=a",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_________________",
        "pump": [
          "____"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\]\\]\\>)(\\n|\\s)*(\\<\\/programlisting\\>)",
    "inputs": [
      {
        "prefix": [
          "]]>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "]]>"
        ],
        "suffix": "]>",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "l]]>\n\n\r"
        ],
        "suffix": "\n\n\n\n\n\n\n\n \n\n  \n \r\t\r\r\r   \r\t \t\t \n\t",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "]]>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "]]>"
        ],
        "suffix": "r]",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "p]]>"
        ],
        "suffix": "\n\n\n\n\n\n\n\n \n\n\n \n\r\n\t\n\n   ",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$",
    "inputs": [
      {
        "prefix": [
          "a@a.a0"
        ],
        "suffix": "!",
        "pump": [
          "a0000"
        ]
      },
      {
        "prefix": [
          "a@a."
        ],
        "suffix": "a.",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "-@-\u0000A"
        ],
        "suffix": "",
        "pump": [
          "0-\u0000A"
        ]
      },
      {
        "prefix": [
          "p7@p."
        ],
        "suffix": "A9mAQfA9mAQfaGeCivEIwWfzLTikOE@",
        "pump": [
          "A9mAQf"
        ]
      },
      {
        "prefix": [
          "a@a.0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a.a"
        ],
        "suffix": "-@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-@-\u0000a"
        ],
        "suffix": "",
        "pump": [
          "0-\u0000a"
        ]
      },
      {
        "prefix": [
          ".@0-."
        ],
        "suffix": "9hVx9hVxGQGmQwfaIl.",
        "pump": [
          "9hVx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "phantomjs\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "phantomjs/0._0"
        ],
        "suffix": "s/",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "phantomjs/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "phantomjs/0._0"
        ],
        "suffix": "s/0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "phantomjs/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\?|!|:|,|\\.|【|】|［|］|（|）|：|；|，|？|。|」|！|﹂|”|\"|_|﹏|《|》|〈|〉|‧|、|「|」|﹁|﹂|\"|\"|～|—|—)+$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\xff\\xff\\xff"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "?」"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "【\"\"］【\"\"］\"\"\"］\"《《\b",
        "pump": [
          "【\"\"］"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*((?:[^\\\\:]+|\\\\.)*):(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3t6#3t6#'}9ta`(>\"",
        "pump": [
          "3t6#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<x*W<x*W4 5r|,Y2C",
        "pump": [
          "<x*W"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "presto\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "presto/0._0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "presto/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "presto/0._0"
        ],
        "suffix": "ep",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "presto/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z_][a-zA-Z0-9_]*|\"[^\"]*\"|'[^']*'|[0-9]+|:|,|\\{|\\}|\\*|\\?|\\||&|\\(|\\)|\\s+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "*$'$",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "6Lzz6LzzMVZSsnd4bI@",
        "pump": [
          "6Lzz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\/\\w+)+)\\/-\\/(\\w+(?:.\\w+)+)$",
    "inputs": [
      {
        "prefix": [
          "/a/-/aa0"
        ],
        "suffix": "{",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "/a/-/a"
        ],
        "suffix": "//",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "/w/-/w\u0000w\u0000ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          "/a/-/"
        ],
        "suffix": "aaun7Daaun7DBbIHTJ2MD5KAU$",
        "pump": [
          "aaun7D"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "AnyJobber(.|\\n)+YetAnotherJobber",
    "inputs": [
      {
        "prefix": [
          "AnyJobber!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "AnyJobber"
        ],
        "suffix": "nyJob",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "AnyJobberB"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "AnyJobber"
        ],
        "suffix": "nyJ",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( {4}[^\\n]+\\n*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "    a    a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s+<tr[^>]*>\\s*\n<td[^>]+> (\\d\\d)/(\\d\\d)/(\\d\\d\\d\\d) \\s* </td>\\s*\n<td[^>]+> ((?:[^\\t]|\\n)*?)     </td>\\s*\n<td[^>]+> ([0-9.]+),(\\d\\d)     </td>\\s*\n<td[^>]+> ([0-9.]+),(\\d\\d)     </td>\\s*\n</tr>",
    "inputs": [
      {
        "prefix": [
          "<tda> "
        ],
        "suffix": "</",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"((?:\\\\.|[^\"])*)\"\\s*",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/(.*)\\/([a-z]+)*$",
    "inputs": [
      {
        "prefix": [
          "//"
        ],
        "suffix": "{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "//a"
        ],
        "suffix": "a/$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "//aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "nwucnwucjhwfcqpjnb*",
        "pump": [
          "nwuc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":not\\((([^()]*(\\([^()]*\\))?)*)\\)",
    "inputs": [
      {
        "prefix": [
          ":not("
        ],
        "suffix": "",
        "pump": [
          "()"
        ]
      },
      {
        "prefix": [
          ":not("
        ],
        "suffix": ")a((",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":not\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "m:not("
        ],
        "suffix": "m\b6Sm\b6SkBV+eUP&}",
        "pump": [
          "m\b6S"
        ]
      },
      {
        "prefix": [
          ":not("
        ],
        "suffix": "",
        "pump": [
          "()"
        ]
      },
      {
        "prefix": [
          ":not("
        ],
        "suffix": "o:n(:n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":not\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":not("
        ],
        "suffix": "H\"M\nH\"M\nv~g\r`*0bU",
        "pump": [
          "H\"M\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^%\\{(.|\\r|\\n)*?%\\}",
    "inputs": [
      {
        "prefix": [
          "%{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "%{"
        ],
        "suffix": "%",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[([^\\]]+)*\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "^!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "[][",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3[bV3[bV'i[*\n_p;W<fl",
        "pump": [
          "3[bV"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "^!"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "]a[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[!fE[!fE3iy\nIu&0.Jv",
        "pump": [
          "[!fE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<!--\\s*([\\/]{0,1})sol_([a-z]+)+\\s*([\\w\\W]*)\\s*-->$",
    "inputs": [
      {
        "prefix": [
          "<!--/sol_a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--sol_a"
        ],
        "suffix": "l",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--sol_aa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--sol_"
        ],
        "suffix": "ooayooayzahhugqzd",
        "pump": [
          "ooay"
        ]
      },
      {
        "prefix": [
          "<!--/sol_a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--sol_a"
        ],
        "suffix": "--so",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--sol_aaa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--sol_"
        ],
        "suffix": "solssolsololol<!--sol_locaD9FDc3BE40199D4CBf870F2BcD4fE805241ac_los_sol_",
        "pump": [
          "sols"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\.|[^\\\\*]+)*\\*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "]!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\**a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ")Gde)GdeL)2$(x~Knp",
        "pump": [
          ")Gde"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:'((?:[^']|\\.)*)'|\"((?:[^\"]|\\.)*)\"|;)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"'.\".",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "..:.:...:.:.:.LN2(DP8')\\CD14dEF5c56.:.:.LN2(DP8')\\CD14dEF5c56D0364DBdf7AebcCB2",
        "pump": [
          "..:.:."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n *\\/\\/.*\\s*)* *lodash\\.forIn *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a//\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s",
        "pump": [
          "\n//\t"
        ]
      },
      {
        "prefix": [
          "\n//\n //"
        ],
        "suffix": " \n// \n//7 \t\t \n// \n//7 \t\t\n    \n\n\t\r\r \r\t\r \r\n\r\r\n //   \t \t \r\n// \n//75h ",
        "pump": [
          " \n// \n//7 \t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a//\\x0b"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "f",
        "pump": [
          "\n//\t"
        ]
      },
      {
        "prefix": [
          "\n//"
        ],
        "suffix": " \n// \n//\t\t\t  \n// \n//\t\t\t \t\n// \n//? \n//\t\t \t\n\r\n\r\r\n \n\n\t\n\r\t\t\n\t",
        "pump": [
          " \n// \n//\t\t\t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( {2,}|\\t)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t \t",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "\t   "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a ",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "\t   "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "#",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\t "
        ],
        "suffix": "\u0000",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "function (?:\\s|.)*?end function.*",
    "inputs": [
      {
        "prefix": [
          "function "
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "function "
        ],
        "suffix": "end fu",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "function s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "function "
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "function "
        ],
        "suffix": "end fu",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "function \u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "end function functionfunc functii fufunction \b\t\b\t\t\r\b\r\n\n\b\t\b\n\b"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\b\n\n",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:''|\"\")?\\s*(?:,\\s*(?:''|\"\")?\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          ",\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\"\t",
        "pump": [
          ",\t"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"((?:[^\"\\\\\\r\\n]|\\\\.)*)\"|'((?:[^'\\\\\\r\\n]|\\\\.)*)'|`((?:[^`]|\\\\.)*)`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\"\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\"`'\\\\pU"
        ],
        "suffix": "\\\\U\\\\\\\\\\U\\\\\\U\tp@\\pU\t'\\\\U\\\\\\U\tp@wp",
        "pump": [
          "\\\\U\\\\\\"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\\\"`a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "'\\'\\'\\7|\\\\.LBeXbyq1`^\"\\\""
        ],
        "suffix": "\\\\\\r.\\\\|\\\\\\r.\\\\|D7\\\"356ECA9a311ED0FD7\\\\7D|\\\\.03E8b2|\\311",
        "pump": [
          "\\\\\\r.\\\\|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(<.+>.*<\\/.+>)+|(<.+\\/\\s*>)+\\s*$",
    "inputs": [
      {
        "prefix": [
          "<!>/>"
        ],
        "suffix": "?",
        "pump": [
          "<?/><?/>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<",
        "pump": [
          "<a/><a/>"
        ]
      },
      {
        "prefix": [
          "<\u0000></\u0000><\u0000>"
        ],
        "suffix": "",
        "pump": [
          "</</\u0000><\u0000>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+)+\\.?(\\d+)?",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*serializer(\\s*=\\s*((\\{\\s*(\\S+(\\s*,\\s*\\S+)*)?\\s*\\})|(\\[(\\s*\\S+(\\s*,\\s*\\S+)*)?\\s*\\])|(\\S+)))?\\s*$",
    "inputs": [
      {
        "prefix": [
          "serializer={~"
        ],
        "suffix": "",
        "pump": [
          " ,\\x00,~"
        ]
      },
      {
        "prefix": [
          "serializer={a"
        ],
        "suffix": "={\t,\t,",
        "pump": [
          "\t,a,\t,a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(['](\\\\.|[^']|\\\\')*?['])+)",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "'\\a'"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          ".'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*\\/\\/.*\\s*|\\s*\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\s*)*",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "*?*****?******5**A******\\A\\6:*\\*\\?sf\\66D\\7.)*?^8\\*d0:8\\./^*s***:\\\\**?/*",
        "pump": [
          "*?****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\r?\\n|\\r)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-Z](\\w|_)+",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "_$A",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z]*)(\\-)(([0-9]{1,}|(\\.))*)",
    "inputs": [
      {
        "prefix": [
          "-0"
        ],
        "suffix": ".0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": ".$",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": ".0a",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(pre|code|img).*>(.|\\s)*?(</(pre|code|img)>)+",
    "inputs": [
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "</p",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<img>\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "k<prek<pre>"
        ],
        "suffix": "\t\n\t\t\n\t\t\n\t\t\n\t\t\b\t\b\t\r\r\r\t\t\r\b\b\b\t",
        "pump": [
          "\t\n\t\t\n\t"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "g",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<img>\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z_0-9]+\\.*)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[+-]?(?:\\d{1,3}[.,]?)+",
    "inputs": [
      {
        "prefix": [
          "+"
        ],
        "suffix": "++",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "+0"
        ],
        "suffix": "+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z0-9]+(.?[-a-z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "{",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          "aaa"
        ],
        "suffix": "-$$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0-0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-zza-zz0-9-90-9>",
        "pump": [
          "a-zz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/ -- BEGIN UMD WRAPPER PREFACE --(\\n|.)*\\/\\/ -- END UMD WRAPPER PREFACE --",
    "inputs": [
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER PREFACE --"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER PREFACE --"
        ],
        "suffix": "/",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER PREFACE --"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "// -- BEGIN UMD WRAPPER PREFACE --"
        ],
        "suffix": " B",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\[.+\\] )+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "] [",
        "pump": [
          "[a] [a] "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-zA-Z0-9./]*(?:[._-][a-z0-9]?)*(?::[0-9]+)?[a-zA-Z0-9./]+(?:[._-][a-z0-9]+)*/)*[a-zA-Z0-9]+(?:[._-][a-z0-9]+)+(?::[a-zA-Z0-9._-]+)?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "..0/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0-:",
        "pump": [
          "a.a/"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": "",
        "pump": [
          "../-0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "..0/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/.-.",
        "pump": [
          "a.a/"
        ]
      },
      {
        "prefix": [
          "./"
        ],
        "suffix": "",
        "pump": [
          "/./"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/8dNTrdIgoPsLoov/8dNTrdIgoPsLoovntwAEzKtuRocaVtkqwaGKQNip",
        "pump": [
          "/8dNTrdIgoPsLoov"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(GOI[ ]+(?:EX|IN)TERNAL)|(POLITICAL[ ]+PARTIES)|(USEU[ ]+BRUSSELS)|(POLITICS[ ]+FOREIGN[ ]+POLICY)|(MILITARY[ ]+RELATIONS)|(ISRAEL[ ]+RELATIONS)|(COUNTRY\\s+CLEARANCE)|(CROS[ ]+GERARD)|(FOREIGN\\s+\\w+)|(MEDIA\\s+REACTION\\s+REPORT)|(ROOD[ ]+JOHN)|(NEW[ ]+ZEALAND)|(TIP\\s+IN\\s+\\w+)|(MEETINGS[ ]+WITH[ ]+\\w+)|(DOMESTIC[ ]+POLITICS)|(ITALIAN[ ]+POLITICS)|(ITALY[ ]+NATIONAL[ ]+ELECTIONS)|(IRAQI[ ]+FREEDOM)|(GLOBAL[ ]+DEFENSE)|(NOVO[ ]+GUILLERMO)|(REMON[ ]+PEDRO)|(JIMENEZ[ ]+GASPAR)|(CONSULAR[ ]+AFFAIRS)|(ECONOMIC[ ]+AFFAIRS)|(HUMAN[ ]+RIGHTS)|(BUSH[ ]+GEORGE)|(CARSON[ ]+JOHNNIE)|(ZOELLICK[ ]+ROBERT)|(GAZA[ ]+DISENGAGEMENT)|(ISRAELI[ ]+PALESTINIAN[ ]+AFFAIRS)|(COUNTER[ ]+TERRORISM)|(CLINTON[ ]+HILLARY)|(STEINBERG[ ]+JAMES)|(BIDEN[ ]+JOSEPH)|(RICE[ ]+CONDOLEEZZA)|(\\w+\\s+AND\\s+\\w+)|([A-Z_]+(?:[\\-\\w/]+)*)|(\\([^\\)]+\\))|(?:,[ ]+)([A-Z_-]+[\\-\\s]{1,3}[A-Z_-]+(?:\\s{1,2}[A-Z]+)?)",
    "inputs": [
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "CE CONDOLEE",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Aw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "EL REL",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Aw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "O GUILLE",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\r?\\n\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "import[\\s]+[\\w\\d]+(\\.([\\w\\d]+|[\\*]+)+)*\\;",
    "inputs": [
      {
        "prefix": [
          "import 0"
        ],
        "suffix": "",
        "pump": [
          ".**"
        ]
      },
      {
        "prefix": [
          "import\ta.a"
        ],
        "suffix": "mpor*a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "importsd\u0000*w"
        ],
        "suffix": "",
        "pump": [
          "**w"
        ]
      },
      {
        "prefix": [
          "8import\t"
        ],
        "suffix": "i.zOi.zO0immpormport",
        "pump": [
          "i.zO"
        ]
      },
      {
        "prefix": [
          "import j"
        ],
        "suffix": "",
        "pump": [
          ".**"
        ]
      },
      {
        "prefix": [
          "import\ta.a"
        ],
        "suffix": "i",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "importsd\u0000*dd"
        ],
        "suffix": "",
        "pump": [
          "wd"
        ]
      },
      {
        "prefix": [
          ";import\ni."
        ],
        "suffix": "trottrotZQCXXXAAS",
        "pump": [
          "trot"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([[:alnum:]]|[[:alnum:]][[:alnum:]\\\\-]*[[:alnum:]])\\\\.)*([[:alnum:]]|[[:alnum:]][[:alnum:]\\\\-]*[[:alnum:]])$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\$$",
        "pump": [
          "a\\aa\\aa\\a"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "l\\a::\\num:mn\\:\\:lnum:"
        ],
        "suffix": "m:l\\am\\a:\\num::\\m:l\\am\\a:\\num::\\num:mn\\:\\:\\mlnum\\am\\a:\\]",
        "pump": [
          "m:l\\am\\a:\\num::\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\w\\d]+(\\.([\\w\\d]+|[\\*]+)+)*",
    "inputs": [
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d\u0000**"
        ],
        "suffix": "\u0000",
        "pump": [
          "*\u0000**"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d\u0000*w"
        ],
        "suffix": "\u0000",
        "pump": [
          "**w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^:contains\\(((?:\\\\\\)|.)*)\\)",
    "inputs": [
      {
        "prefix": [
          ":contains("
        ],
        "suffix": "ai",
        "pump": [
          "\\)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:(?:\\[[^\\]+]\\])|(?:[^\\s\\+\\>\\~:]))+)((?::[^\\s\\+\\>\\~]+)?\\s*[\\s\\+\\>\\~]?)\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[:a\ta",
        "pump": [
          "[a][a]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[\t\t:",
        "pump": [
          "[a][a]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<div\\s*class=\"instance\"\\>(.|\\s)*\\<\\/div>",
    "inputs": [
      {
        "prefix": [
          "<divclass=\"instance\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<divclass=\"instance\">"
        ],
        "suffix": "=\"i",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<divclass=\"instance\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<divclass=\"instance\">"
        ],
        "suffix": "\t \t \t \t \n \r\t\r  \t\n\t\r \t\r",
        "pump": [
          "\t \t "
        ]
      },
      {
        "prefix": [
          "<divclass=\"instance\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<divclass=\"instance\">"
        ],
        "suffix": "e",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<divclass=\"instance\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[0-9]([0-9]|.)*(G|M|B|K)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "Ba",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "5{3I055{3I056v5*xPV5bVv\bo2[m3aG\\ ,JcTw[bwa4^m:}H",
        "pump": [
          "5{3I05"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain Servers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain Servers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain Servers:\n"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain Servers:\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain Servers:\n"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(:?[^#]*?#\\d+[:]{0,1}\\W+)(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)(:?.*?)(?:(:?\\W+at\\W+)(:?[^:]+:\\d.+)){0,1}$",
    "inputs": [
      {
        "prefix": [
          ":#0$:0x"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ":#0$:0x"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "#dW0xa"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z0-9\\-]+)\\s*:\\s*([^;\\s]+(?:\\s*[^;\\s]+)*);?",
    "inputs": [
      {
        "prefix": [
          "a:aa"
        ],
        "suffix": "a\t;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-:\u0000\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a:aa"
        ],
        "suffix": "$\t;a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-:\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/|ircs?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*(\\/.*)?$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "t..it..ittpZw_tZ6-6BQ!",
        "pump": [
          "t..i"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "is.sis.s.QSYthLPKNGro]",
        "pump": [
          "is.s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[0-9]|[1-9][0-9]+)(?:-(?:[0-9]|[1-9][0-9]+)+)?$",
    "inputs": [
      {
        "prefix": [
          "1-0"
        ],
        "suffix": "!",
        "pump": [
          "10"
        ]
      },
      {
        "prefix": [
          "0-"
        ],
        "suffix": "--",
        "pump": [
          "010"
        ]
      },
      {
        "prefix": [
          "0-00"
        ],
        "suffix": "\u0000",
        "pump": [
          "100"
        ]
      },
      {
        "prefix": [
          "33-"
        ],
        "suffix": "4333433333433333333i",
        "pump": [
          "4333"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(<=?|>=?|===?|!=|~=)\\s*((\\w|[-.*_!+])+)",
    "inputs": [
      {
        "prefix": [
          "!="
        ],
        "suffix": "\t",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "!="
        ],
        "suffix": "=!<\t=!",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\/\\/.*?\\n|\\/\\*.*?\\*\\/)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/\n/",
        "pump": [
          "\t//\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t//\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?(\\w+)((\\s+\\w+(\\s*=\\s*(?:\\\".*?\\\"|\\'.*?\\'|[\\^\\'\\\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\"\t",
        "pump": [
          "\ta=\t\t"
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=\t\t",
        "pump": [
          "\ta=\t\t"
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"sw=\u0000"
        ]
      },
      {
        "prefix": [
          "><J"
        ],
        "suffix": "\t2k=\r\t\t\t\t2k=\r\t\t\t\n\t\t\tNWETZTXOWAAWKUOSQTTNVTXVc3JgHy\ren=\r\t\t\t\n\t\t\t\r\t",
        "pump": [
          "\t2k=\r\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z0-9](?:[-_]*[A-Za-z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "zAzAzAzA0HzTdyIeC-ZA[",
        "pump": [
          "zAzA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\{.*?\\})*(\\w+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          "{{}{}{{{"
        ],
        "suffix": "{}{}{}{}{}{}{}{}{}{}{{}{}{}",
        "pump": [
          "{}{}{}{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          "{{{{}{}{"
        ],
        "suffix": "{}{}{}{}{}{}{}{}}{}}{\t(*))+{*)((*+.{}{}{}",
        "pump": [
          "{}{}{}{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?([a-zA-Z0-9]+)*(.*?)\\/?>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "<",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<0A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "WX69WX69dLWhbqytMO",
        "pump": [
          "WX69"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "$</",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<0A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          "/<"
        ],
        "suffix": "jVHNjVHNcjXx1 e~ao(U48$N!U3rERaVrDB/0qjwYS",
        "pump": [
          "jVHN"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^DKIM-Signature: .*\\r?\\n(\\s+.*\\r?\\n)*",
    "inputs": [
      {
        "prefix": [
          "DKIM-Signature: \r\n"
        ],
        "suffix": "KI",
        "pump": [
          "\t\n\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(?:\"([^\"]+)\"|([^\\s]+))+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t\"\t\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "\"\"\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}",
    "inputs": [
      {
        "prefix": [
          "{a:{"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "o{"
        ],
        "suffix": "T:,kT:,k\rl~\"2VT/BeH",
        "pump": [
          "T:,k"
        ]
      },
      {
        "prefix": [
          "{0:{"
        ],
        "suffix": "",
        "pump": [
          "~;"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "{$*\\*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\r{"
        ],
        "suffix": "GZ:RGZ:RaSpo8;%B_g:F",
        "pump": [
          "GZ:R"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "---(.|\\n)*---",
    "inputs": [
      {
        "prefix": [
          "---"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "-\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "-\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(--)?\\s*delimiter\\s*=?\\s*([^\\s]+)+\\s*.*$",
    "inputs": [
      {
        "prefix": [
          "delimiter=a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "delimiter\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "t\u0000"
        ]
      },
      {
        "prefix": [
          "delim"
        ],
        "suffix": "iteriterk5<&NMMWs.6C\t]s\r_",
        "pump": [
          "iter"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]+[_|\\_|\\.|\\-]?)*[_a-z\\-A-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.|\\-]?)*[a-zA-Z0-9\\-]+\\.[0-9a-zA-Z]{2,6}$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ww0aww0a9aAwwwww@y",
        "pump": [
          "ww0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "X8wyX8wy1HAy1H.a-zA-Z",
        "pump": [
          "X8wy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([0-9\\.\\-]+\\s*?)+\\s*",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "#",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?",
    "inputs": [
      {
        "prefix": [
          "    \\x00"
        ],
        "suffix": "",
        "pump": [
          "    !     !"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a\na",
        "pump": [
          "    a    a"
        ]
      },
      {
        "prefix": [
          "    \u0000    \u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "    \u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "                                          ",
        "pump": [
          "        "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[((?:[\\w\\-]|\\\\.)+)\\s*=\\s*['\"]?((?:\\\\.|[^'\"]+)+)['\"]?\\]",
    "inputs": [
      {
        "prefix": [
          "[a =]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "[a=\"a"
        ],
        "suffix": "\\\"\\\\\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "J[c=J[c=w\t\tn=y>yrw9%k",
        "pump": [
          "J[c="
        ]
      },
      {
        "prefix": [
          "[a =]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "[a=\"a"
        ],
        "suffix": "\\\"\t\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\b"
        ],
        "suffix": "[Pu=[Pu=1~Hl>S)BdJY4l",
        "pump": [
          "[Pu="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\.|[^|])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "||",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "|",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "||",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "|",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([^>](\"[^\"]*\")?)*>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "?\"\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\">a",
        "pump": [
          "a\"\"a\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "?\"\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\"",
        "pump": [
          "a\"\"a\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<*\"<\"<\"\"\"<<*\"<\"<\"\"\"<\"<*\"<\"<*\"\"<\"<*\"<\"<\"\"<<\"<",
        "pump": [
          "<*\"<\"<\"\"\"<"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z_](?:[\\._-]?[a-z0-9_]+)*)(\\/[a-z_](?:[\\._-]?[a-z0-9_]+)*)+\\.d\\.ts$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "_/_/_00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a_1aa_1af62c47a276",
        "pump": [
          "a_1a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Za-z0-9+/]|[A-Za-z0-9+,]|[A-Za-z0-9_-]|[A-Za-z0-9.-]|[A-Za-z0-9._]|[A-Za-z0-9_:]|[A-Za-z0-9~-]){3,}={0,2}",
    "inputs": [
      {
        "prefix": [
          "aa"
        ],
        "suffix": "~=~",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "++++"
        ],
        "suffix": "\u0000",
        "pump": [
          "0+"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "=$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+++a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "~=~",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+-"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\|\\/)?(.+(\\\\|\\/))*(.+?([\\.\\-_ ]\\d{4}[\\.\\-_ ].+?(BDRip|bluray|DVDRip|XVID)).+)\\.(.+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "]///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a//a 0000 0a ",
        "pump": [
          "a\\"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "|/\u0000|/\u0000"
        ]
      },
      {
        "prefix": [
          "//ray.)y|+(\\a\\I((b$.|+D}iy X)V\\(u)dD)|^D "
        ],
        "suffix": "+\\D]\\l\\/+\\D]\\l\\/i\\\\+(a\\\\",
        "pump": [
          "+\\D]\\l\\/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{([^\\|}]+)(?:\\|([^}]+))*}}",
    "inputs": [
      {
        "prefix": [
          "{{!"
        ],
        "suffix": "",
        "pump": [
          "|!|!"
        ]
      },
      {
        "prefix": [
          "{{a"
        ],
        "suffix": "}{",
        "pump": [
          "|a|a"
        ]
      },
      {
        "prefix": [
          "{{!"
        ],
        "suffix": "",
        "pump": [
          "|!|!"
        ]
      },
      {
        "prefix": [
          "{{a"
        ],
        "suffix": "}}a{{{",
        "pump": [
          "|a|a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "h1(.|\\n|\\r)*background:\\s*#000(.|\\n|\\r)*",
    "inputs": [
      {
        "prefix": [
          "h1"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "h1"
        ],
        "suffix": "background:",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "h1"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "h1"
        ],
        "suffix": "back",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\r|\\n){3,}",
    "inputs": [
      {
        "prefix": [
          "\r\r"
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\r\r"
        ],
        "suffix": "\ra\n\r",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\"(?:[^\"\\\\]+|\\\\.)*\")\\s*",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\ta\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "fvdcfvdcfegxbgsvrc",
        "pump": [
          "fvdc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^---\\n?((?:.|\\n)*)\\n---\\n",
    "inputs": [
      {
        "prefix": [
          "---"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---\n"
        ],
        "suffix": "-\n\n---",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "+html",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "i"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mh",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "T^y|T^y|s}v'gp!ZDW",
        "pump": [
          "T^y|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*!)*([^!]+)!([^!@]+)@([^\\.]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "!!.",
        "pump": [
          "a!"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "!\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\{\\{#each (\\r|\\t|\\n|.)*?\\/each\\}\\})",
    "inputs": [
      {
        "prefix": [
          "{{#each "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{#each "
        ],
        "suffix": "#",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "{{#each {\t\n\t\n\t "
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\t\t\t\n",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "{{#each "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{#each "
        ],
        "suffix": "e",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "{{#each "
        ],
        "suffix": "\te\t\n\t\t\te\t\n\t\t\t\r\t\t\t\n\t\t\t\r\t",
        "pump": [
          "\te\t\n\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-+(?: *\\n*)*Burak Emir(?:\\n|.)*$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": " Burak ",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "--------"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n  \n",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": " Burak Em",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[netscape\\]\\s*\\n((?:.*=.*\\n)+)",
    "inputs": [
      {
        "prefix": [
          "[netscape]\n"
        ],
        "suffix": "s",
        "pump": [
          "a=\n"
        ]
      },
      {
        "prefix": [
          "[netscape]\n"
        ],
        "suffix": "\ta",
        "pump": [
          "a=\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*HACK:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*HACK:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*HACK:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\\\\"|.)*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^EXTSO[ \\t]*=[ \\t]*((?:.*\\\\\\n)*.*)",
    "inputs": [
      {
        "prefix": [
          "EXTSO="
        ],
        "suffix": "a\\",
        "pump": [
          "a\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\/(?:(?:%[[:xdigit:]]{2}|[A-Za-z0-9-_.!~*'()\\[\\]:@&=+$,;])*)?)+$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "a%a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//////////////////%:",
        "pump": [
          "////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n        (?:--\\s(?:.+\\n)*\\n)?\n        --\\sControl\\sframe\\sinformation\\s-+\\n\n        (?:c:.*\\n)*\n      ",
    "inputs": [
      {
        "prefix": [
          "        --\t"
        ],
        "suffix": "-",
        "pump": [
          "a\na\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(a|<[^\\s\\,\\;]*>|[^\\s]*:[^\\s\\;]+)\\s*((?:(?:<[^\\s\\,\\;]*>|[^\\s]*:[^\\s\\;]+|(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*')(?:\\^\\^[^\\s\\;]*)?|\\s*),?)+\\s*);?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t$\"<',;a",
        "pump": [
          ",<>>"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$\\;<'^$",
        "pump": [
          ",<>>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "diff -r ([^\\s]+)+ ([^\\s]+)+$",
    "inputs": [
      {
        "prefix": [
          "diff -r \\x00"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "diff -r a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "diff -r \u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "t\u0000"
        ]
      },
      {
        "prefix": [
          "diff -r "
        ],
        "suffix": "26\\726\\79<gIV8gpOO",
        "pump": [
          "26\\7"
        ]
      },
      {
        "prefix": [
          "diff -r e"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "diff -r a"
        ],
        "suffix": " d\tdiff -r",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "diff -r \u0000 \u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000"
        ]
      },
      {
        "prefix": [
          "&diff -r "
        ],
        "suffix": "0cA\\0cA\\y`6Dqs%F)6",
        "pump": [
          "0cA\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var (?:hasDontEnumBug|iteratesOwnLast|noArgsEnum).+\\n",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "/\n ",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "sO",
        "pump": [
          "a**a*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "“([^”\\\\]+|\\\\{2}|\\\\.)*”",
    "inputs": [
      {
        "prefix": [
          "\\xff\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "“a"
        ],
        "suffix": "”a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "“(\nr“(\nr<O]9\r9\r]>\n",
        "pump": [
          "“(\nr"
        ]
      },
      {
        "prefix": [
          "\\xff\\xff\\xff"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "“a"
        ],
        "suffix": "”a\\“",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "l“T\tl“T\t\tboy@V`q?<g",
        "pump": [
          "l“T\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|\\-|\\_|\\&|\\+|\\.)+\\@((\\w|\\-|\\_)+\\.)+[a-zA-Z]{2,}$",
    "inputs": [
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a&",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "__________DBWERFLTMLCJVIGIOOCFAH___DBWQXECWUEHIOCHER",
        "pump": [
          "____"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a&",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "___a_____a__@__a-z_Z-z_.7005973468226032",
        "pump": [
          "___a__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{anonymous\\}\\(.*\\)@(\\w+:\\/\\/([\\-\\w\\.]+)+(:\\d+)?[^:]+):(\\d+):?(\\d+)?",
    "inputs": [
      {
        "prefix": [
          "{anonymous}()@a://-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "{anonymous}()@a://a"
        ],
        "suffix": "o://a:00",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{anonymous}({anonymous}({anonymous}({anonymous}({)@m://"
        ],
        "suffix": "nysunysuomynona",
        "pump": [
          "nysu"
        ]
      },
      {
        "prefix": [
          "{anonymous}()@a://-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "{anonymous}()@a://a"
        ],
        "suffix": "us-:)@a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{anonymous}()@a://"
        ],
        "suffix": "2msu2msuomyn2msuo",
        "pump": [
          "2msu"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* posicao do observador *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ZgMJZgMJ.b5_' b:WV",
        "pump": [
          "ZgMJ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Iterate through the number of x and y ellipses to draw *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "hr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ";3s ;3s ]5E:sii+(t",
        "pump": [
          ";3s "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+_)+(Should.+)(_.+)*",
    "inputs": [
      {
        "prefix": [
          "!_"
        ],
        "suffix": "",
        "pump": [
          "`___"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a_S",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "\u0000_Should\u0000_\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "_\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "!_"
        ],
        "suffix": "",
        "pump": [
          "`___"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a_Sho",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "\u0000_Should\u0000_\u0000"
        ],
        "suffix": "",
        "pump": [
          "_\u0000_\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+|-)\\.(\\w+|-|\\.)+",
    "inputs": [
      {
        "prefix": [
          "-.a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-.a"
        ],
        "suffix": "-$-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "w\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s*iframe[^>]*>((.|\\s)*?)<\\\\?\\/\\s*iframe\\s*>",
    "inputs": [
      {
        "prefix": [
          "<iframe>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<iframe>"
        ],
        "suffix": "<\\/i",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<iframe>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<iframe>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<iframe>"
        ],
        "suffix": "a\t<\\/if",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<iframe>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "><iframe><"
        ],
        "suffix": "        \n\t    \r\t \r\n\t",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z0-9._%+-]+@(?:[a-z0-9-]+\\.?)*[a-z0-9]+\\.[a-z]{2,4}$",
    "inputs": [
      {
        "prefix": [
          "a@"
        ],
        "suffix": "",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "a@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%@--"
        ],
        "suffix": "",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          ".@"
        ],
        "suffix": "a-z0a-z0-9-a-z0-9.",
        "pump": [
          "a-z0"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "a@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%@-a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ".@"
        ],
        "suffix": "a-z0a-z0-9-a-z0-9.",
        "pump": [
          "a-z0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s|#[^#\\n]*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Za-z0-9._-]+)+$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ySd9ySd9kJvg54UndYq~",
        "pump": [
          "ySd9"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[\\/[//]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "]/[",
        "pump": [
          "\\/[[/]"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "*/]\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\(\\?[imsx]*-?[imsx]*\\:)+((\\[\\^?.+\\])|\\.)",
    "inputs": [
      {
        "prefix": [
          "(?:"
        ],
        "suffix": "",
        "pump": [
          "(?i:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "(?i:"
        ]
      },
      {
        "prefix": [
          "(?:"
        ],
        "suffix": "",
        "pump": [
          "(?i:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-](?",
        "pump": [
          "(?i:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<pre><code class=\"language-(\\w+)\">((.|\\n)*?)<\\/code><\\/pre>",
    "inputs": [
      {
        "prefix": [
          "<pre><code class=\"language-a\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<pre><code class=\"language-a\">"
        ],
        "suffix": "pre",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<pre><code class=\"language-a\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<pre><code class=\"language-a\">"
        ],
        "suffix": "e ",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*([^\\s<]+)\\s*<([^>]+)+>",
    "inputs": [
      {
        "prefix": [
          "\\x00\\x09<!"
        ],
        "suffix": "",
        "pump": [
          "?!"
        ]
      },
      {
        "prefix": [
          "a<a"
        ],
        "suffix": ">a\ta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000<\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "?\u0000"
        ]
      },
      {
        "prefix": [
          "\r\rQR\\@:gUy~JJZp%?Y&P5"
        ],
        "suffix": "'8Z<'8Z<yJ&@`/eC\r",
        "pump": [
          "'8Z<"
        ]
      },
      {
        "prefix": [
          "\\x00\\x09<<"
        ],
        "suffix": "",
        "pump": [
          "?!"
        ]
      },
      {
        "prefix": [
          "a<a"
        ],
        "suffix": "<",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000<\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "?\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "w<Vrw<Vr3jQ^U*%]t$/\r",
        "pump": [
          "w<Vr"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\/(\\/.*|\\*([^*]|\\*[^\\/])*\\*\\/)[\\t\\n\\r ]*)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "/////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|<[^\"'>]*>|\\\\[\"'>]|[^\"'>])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "<>>\\",
        "pump": [
          "<<>"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\"><"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"\\<'\\",
        "pump": [
          "\"\"<\\>"
        ]
      },
      {
        "prefix": [
          "<\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*/)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\u0000",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z]|[A-Z])([ ,\\-.\\d]+)*",
    "inputs": [
      {
        "prefix": [
          "A "
        ],
        "suffix": "A A",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "A,"
        ],
        "suffix": "\u0000",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "A "
        ],
        "suffix": "A $",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "A ,"
        ],
        "suffix": "\u0000",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w[\\w\\s.]+)\\s+((?:\\w+=\\S+\\s*)+)$",
    "inputs": [
      {
        "prefix": [
          "aa a=\\x00"
        ],
        "suffix": "a\\x09\\x00",
        "pump": [
          "a={0={"
        ]
      },
      {
        "prefix": [
          "aa\t"
        ],
        "suffix": "=a\t$",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "aV\r\n\t\n\t \t\t\r\r \r\t "
        ],
        "suffix": "05=70911336305=709113363477opURp7GVdiJwZTEy5lVaMRe0v8YsPIe2cl0pG6liDJRAz42322695sF\rV",
        "pump": [
          "05=709113363"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Dereference to get the original array *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " to ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "c{xfc{xfG8dq{dBEp!",
        "pump": [
          "c{xf"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\r\\n|\\r|\\n)*$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\r\n\"",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "\"\"\r\n\n\r\n\r"
        ],
        "suffix": "\r\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\r\n\r\n\r\n\r\n\r\n\r\r\n\"",
        "pump": [
          "\r\n\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[(\\\\[\\\\\\]]|[^\\]])*\\][egimosx]*",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "[\\\\\\[uxWVLjZS\\\\\\[ux[\\\\[\\\\[\\\\["
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\9EeeD",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "[[[["
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\2SxJA0xU4NkIDcT[[[[\\\\ntgv1C1b66F[[\\\\8c31C1b66FFaD6ccaBFCB9DdACAc914Cc14A695bE\\[",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--((.|\\n|\\r\\n)*?)-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "<",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!\r<",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!-- DOCS -->)(?:\\r|\\n|.)+(<!-- ENDDOCS -->)",
    "inputs": [
      {
        "prefix": [
          "<!-- DOCS -->!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- DOCS -->"
        ],
        "suffix": "S ",
        "pump": [
          "\r\r"
        ]
      },
      {
        "prefix": [
          "<!-- DOCS -->="
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- DOCS -->"
        ],
        "suffix": "C",
        "pump": [
          "\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((<.*?>)*)(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "<\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\w+@(\\w+.)+[a-z]{2,3}",
    "inputs": [
      {
        "prefix": [
          "a@a{"
        ],
        "suffix": "",
        "pump": [
          "00a{"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w@w\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000w"
        ]
      },
      {
        "prefix": [
          "V@"
        ],
        "suffix": "_TKM_TKMwI2jGNu24GnUX2Th=",
        "pump": [
          "_TKM"
        ]
      },
      {
        "prefix": [
          "a@a{"
        ],
        "suffix": "",
        "pump": [
          "00a{"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a@a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w@w\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000w"
        ]
      },
      {
        "prefix": [
          "YEO@"
        ],
        "suffix": "WRT3WRT3vOh8PRT3vOhP84",
        "pump": [
          "WRT3"
        ]
      },
      {
        "prefix": [
          "a@a{"
        ],
        "suffix": "",
        "pump": [
          "000{"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a$$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w@w\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000w"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "U@5831U@58312875565789718325",
        "pump": [
          "U@5831"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(？|。|」|！)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "！a",
        "pump": [
          "！"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\*\\*([^\\*]*)*\\*\\*",
    "inputs": [
      {
        "prefix": [
          "**"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "a*a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "9-wj9-wjSe.'TbV\rT|",
        "pump": [
          "9-wj"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Q**"
        ],
        "suffix": "N{wiN{wifCNks6K_\r\b",
        "pump": [
          "N{wi"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z][a-zA-Z0-9]*\\s?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x00",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\t",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AAa"
        ],
        "suffix": "\u0000",
        "pump": [
          "sAa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AXQIAXQIGNFGIXYXXCH\b",
        "pump": [
          "AXQI"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\.|.)*?[\"\\n]",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\\7\\\t\\\\\\7\\\t\\3r\\N\\f\\J?\\\t\\3r\\N\\f\\J?",
        "pump": [
          "\\\\7\\\t\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\\\\6\\\\\\\\\\6\\\\.|.122992606353561597\\\\\\5474\\\\.|.165490921299262235569513170669926547416613122992",
        "pump": [
          "\\\\\\6\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "http(s)?://(([a-zA-Z0-9-_]+(\\.)?)+)",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps.$http",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\n\\f\\r\\t 　 ]*)([ 　 ]*[\\n\\f\\r\\t]+[ 　 ]*)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t\t\r"
        ],
        "suffix": "\u0000",
        "pump": [
          "\r\r"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t "
        ],
        "suffix": "\u0000",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<<<)((\")(\\\\(\"|\\\\)|[^\"])*(\"))",
    "inputs": [
      {
        "prefix": [
          "<<<\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "<<<\""
        ],
        "suffix": "<\\\"a\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "<<<\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "<<<\""
        ],
        "suffix": "<\\\"a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "### Generated by rprotoc\\. DO NOT EDIT!\\n### <proto file: (.*)>\\n((# .*\\n)+)",
    "inputs": [
      {
        "prefix": [
          "### Generated by rprotoc. DO NOT EDIT!\n### <proto file: >\n"
        ],
        "suffix": "i",
        "pump": [
          "# \n# \n"
        ]
      },
      {
        "prefix": [
          "### Generated by rprotoc. DO NOT EDIT!\n### <proto file: >\n"
        ],
        "suffix": "NO",
        "pump": [
          "# \n# \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$",
    "inputs": [
      {
        "prefix": [
          "   *  **"
        ],
        "suffix": "\\x00",
        "pump": [
          "* *"
        ]
      },
      {
        "prefix": [
          " *  * "
        ],
        "suffix": "\t*",
        "pump": [
          " * *"
        ]
      },
      {
        "prefix": [
          " * ** ** *"
        ],
        "suffix": "* * * * * * * ** ** ** * T",
        "pump": [
          "* * * "
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\\x00",
        "pump": [
          "* *"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t*",
        "pump": [
          " * *"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([MmLlHhVvCcSs])\\s*((?:-?\\d*(?:\\.\\d+)?\\s*,?\\s*)+)",
    "inputs": [
      {
        "prefix": [
          "C-"
        ],
        "suffix": "0..",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "Cs"
        ],
        "suffix": "\u0000",
        "pump": [
          "dds"
        ]
      },
      {
        "prefix": [
          "C-"
        ],
        "suffix": "0.",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "Cs"
        ],
        "suffix": "\u0000",
        "pump": [
          "-ds"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^: ]+):\\s*((:?.|[\\r\\n])*)",
    "inputs": [
      {
        "prefix": [
          "a:"
        ],
        "suffix": "a",
        "pump": [
          ":a:\n"
        ]
      },
      {
        "prefix": [
          "\u0000:\r"
        ],
        "suffix": "",
        "pump": [
          ":\u0000\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( \\* @method.*?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "m",
        "pump": [
          " * @method\n * @method\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " @",
        "pump": [
          " * @method\n * @method\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z0-9.%+\\-_]+@(?:(?:[a-zA-Z0-9]+-?)*[a-zA-Z0-9]\\.)+[A-Za-z]{2,4}$",
    "inputs": [
      {
        "prefix": [
          "a@"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "a0.a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          "B9@"
        ],
        "suffix": "3b353b3578sd14oWj5",
        "pump": [
          "3b35"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%@0\u00000-"
        ],
        "suffix": "",
        "pump": [
          "0-0-"
        ]
      },
      {
        "prefix": [
          "-@"
        ],
        "suffix": "055805589407225262",
        "pump": [
          "0558"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "yyyy|yy|y|M{1,4}|dd?|EEEE?|HH?|hh?|mm?|ss?|([.,])sss|a|Z{1,2}|ww|w|'(([^']+|'')*)'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "da",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "/'"
        ],
        "suffix": "di9\rdi9\rW6wI\\CLn<`",
        "pump": [
          "di9\r"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "zz"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "Zy'yy",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "y{T{y{T{{V0wksT:-D",
        "pump": [
          "y{T{"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": ",s",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "HyyyHyyyy|yy|y|M+|",
        "pump": [
          "Hyyy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`((?:.|\\n)*?)`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "`\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "`\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(\\n\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a\n",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(f(,[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)+|[CSI](,\\+?[0-9]+)+|[csi](,[-+]?[0-9]+)+)$",
    "inputs": [
      {
        "prefix": [
          "f,0"
        ],
        "suffix": "!",
        "pump": [
          ",00"
        ]
      },
      {
        "prefix": [
          "f"
        ],
        "suffix": "C,+",
        "pump": [
          ",00"
        ]
      },
      {
        "prefix": [
          "f,0,0"
        ],
        "suffix": "",
        "pump": [
          "00,0"
        ]
      },
      {
        "prefix": [
          "f,+00,+0"
        ],
        "suffix": "000,+0000,000,+0000,+00,00,500,+00,+00,",
        "pump": [
          "000,+0000,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain status : ((.+\\n)+)\\s+\\n",
    "inputs": [
      {
        "prefix": [
          "Domain status : !\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain status : "
        ],
        "suffix": "n ",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain status : D\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain status : "
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\s](([^*+\\n-].+)\\n){1,})",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "*",
        "pump": [
          "aa\naa\n"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "**",
        "pump": [
          "aa\naa\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "go([1-9])\\.(\\d+)(?:.\\d+)*",
    "inputs": [
      {
        "prefix": [
          "go1.0"
        ],
        "suffix": "1..",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "go1\u0000d\u0000d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd\u0000d"
        ]
      },
      {
        "prefix": [
          "go1.0"
        ],
        "suffix": "1.ago",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "go1\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.\\. PYPI-BEGIN([\\r\\n]|.)*?PYPI-END",
    "inputs": [
      {
        "prefix": [
          ".. PYPI-BEGIN"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ".. PYPI-BEGIN"
        ],
        "suffix": "E\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ".. PYPI-BEGIN"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ".. PYPI-BEGIN"
        ],
        "suffix": "P",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "@{!!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "--@",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-zA-Z0-9!#$%&'*+/",
        "pump": [
          "a-zA"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "@{!!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "@\u0000",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "@^."
        ],
        "suffix": "*?a-zA*?a-zA-Z0-9!#$%&'",
        "pump": [
          "*?a-zA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Re-assign the array to its new memory slot *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/d,w/d,wkSQMXImdl\"",
        "pump": [
          "/d,w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "href=\"([^\"]+)*\"",
    "inputs": [
      {
        "prefix": [
          "href=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "href=\"a"
        ],
        "suffix": "efa\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "href=\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "href=\""
        ],
        "suffix": "Y4[SY4[SIP!\nbzoFhm",
        "pump": [
          "Y4[S"
        ]
      },
      {
        "prefix": [
          "href=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "href=\"a"
        ],
        "suffix": "ehra\"hr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "href=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "href=\""
        ],
        "suffix": "\\xK<\\xK<\tJr+Oop\\,J",
        "pump": [
          "\\xK<"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "httphttpttpshttpttp.",
        "pump": [
          "http"
        ]
      },
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xxwoxxwonkippacgwyce",
        "pump": [
          "xxwo"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+)\\s(.*)\\(((\\d+,?)+)\\)\\.?",
    "inputs": [
      {
        "prefix": [
          "0 (0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0\t(0"
        ],
        "suffix": ",",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dsdd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "0 (0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0\t(0"
        ],
        "suffix": ")(",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dsdd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "42 4 4 9 ("
        ],
        "suffix": "959495948974563",
        "pump": [
          "9594"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)+\\/(\\d+)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "B-3{B-3{ koo\"+}LMi",
        "pump": [
          "B-3{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "N<T$N<T$Pl:;D|>YQ",
        "pump": [
          "N<T$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\n).*On .* at .*, (.|\\r\\n|\\n)*wrote\\:(.|\\r\\n|\\n)*(\\r\\n|\\n)+(>.*(\\r\\n|\\n))+(.|\\r\\n|\\n)*",
    "inputs": [
      {
        "prefix": [
          "\\x0d\\x0aOn O at O\\x00, "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\nOn  at , "
        ],
        "suffix": "\rwro",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "\\x0d\\x0aOn O at O\\x0d\\x0a, "
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\nOn  at , "
        ],
        "suffix": "\rwrote:\rw\n>\rwro",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Z]+):((?:[ \\t].*\\n)+)",
    "inputs": [
      {
        "prefix": [
          "A:"
        ],
        "suffix": "Aa",
        "pump": [
          "\t\n\t\n"
        ]
      },
      {
        "prefix": [
          "A:"
        ],
        "suffix": "Aa",
        "pump": [
          "\t\n\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<style(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/style>",
    "inputs": [
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "</",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<style>"
        ],
        "suffix": "y",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\+\\-\\(\\)\\d]*\\d[\\+\\-\\(\\)\\d]*,?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",,",
        "pump": [
          "(0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "693469349950182O",
        "pump": [
          "6934"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Schema::(d|c|t|[^(]*\\(('|\")(.*)('|\"))*",
    "inputs": [
      {
        "prefix": [
          "Schema::"
        ],
        "suffix": "e",
        "pump": [
          "d(\"'"
        ]
      },
      {
        "prefix": [
          "Schema::"
        ],
        "suffix": "e(aSchema:",
        "pump": [
          "d(\"'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Version.*?((\\\\d+\\\\.)?(\\\\d+\\\\.)?(\\\\*|\\\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "Version"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "Version*00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "Version*00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(\\w+)(?: \"(.+)\")*\\]",
    "inputs": [
      {
        "prefix": [
          "[0"
        ],
        "suffix": "",
        "pump": [
          " \"!\" \"\"\""
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "[a",
        "pump": [
          " \"a\" \"a\""
        ]
      },
      {
        "prefix": [
          "[f \"f \" \"[f\" \"[f\" \"["
        ],
        "suffix": "\" \"[\" \"[\" \" \" \"[\" \"[\" \" \"\" \" \"[\" \"[ff \"f \" \" \" \"[\"",
        "pump": [
          "\" \"[\" \"[\" \" "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "UkDVUkDV0JfhDk20g",
        "pump": [
          "UkDV"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0@0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "uJpcuJpc30VwqCa8A",
        "pump": [
          "uJpc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n1 BIRT(?:\\n[2-9].+)*\\n2 DATE ",
    "inputs": [
      {
        "prefix": [
          "\\x0a1 BIRT"
        ],
        "suffix": "",
        "pump": [
          "\\x0a2!\\x0a2!"
        ]
      },
      {
        "prefix": [
          "\n1 BIRT"
        ],
        "suffix": "AT",
        "pump": [
          "\n2a\n2a"
        ]
      },
      {
        "prefix": [
          "\\x0a1 BIRT"
        ],
        "suffix": "",
        "pump": [
          "\\x0a2!\\x0a2!"
        ]
      },
      {
        "prefix": [
          "\n1 BIRT"
        ],
        "suffix": "I",
        "pump": [
          "\n2a\n2a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\d)+.?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "aa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0aa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\\\\\|\\\\\"|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\"\\\\)\\\\\\\r\\\\?"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\(\\>{[.[?)",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|\\n)*?entries found.*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aentri",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aentrie",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z]+[a-zA-Z0-9_]*(::[a-zA-Z]+[a-zA-Z0-9_]*)+$",
    "inputs": [
      {
        "prefix": [
          "a0::A"
        ],
        "suffix": "!",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a:a",
        "pump": [
          "::aa"
        ]
      },
      {
        "prefix": [
          "A::A::AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "a::AA"
        ]
      },
      {
        "prefix": [
          "a0a::A"
        ],
        "suffix": "!",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0a:a0",
        "pump": [
          "::aa"
        ]
      },
      {
        "prefix": [
          "A::A::a"
        ],
        "suffix": "\u0000",
        "pump": [
          "a::a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "=\\s?((?:\\r|\\n|.)+(}))",
    "inputs": [
      {
        "prefix": [
          "=!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "=\t"
        ],
        "suffix": "=\n}\n",
        "pump": [
          "\r\r"
        ]
      },
      {
        "prefix": [
          "=>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "=\t"
        ],
        "suffix": "\n=}\n",
        "pump": [
          "\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+)(\\t.+?){7,}",
    "inputs": [
      {
        "prefix": [
          "0\ta\ta\ta\ta\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "d\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "0\ta\ta\ta\ta\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "d\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "d\t\u0000\t\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[a-z0-9]+-?)*[a-z](?:-?[a-z0-9])*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "msmemsmelhsueiuum-",
        "pump": [
          "msme"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'((?:\\\\[\\\\']|.+)+)'\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "']"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000[']"
        ],
        "suffix": "",
        "pump": [
          "['][']"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "_gFP_gFP?L\"6O#x?:\\",
        "pump": [
          "_gFP"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\[(.+?)\\])?\\{@(link|linkcode|linkplain)\\s+((?:.|\\n)+?)\\}",
    "inputs": [
      {
        "prefix": [
          "[!]{@link ^"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{@link\t"
        ],
        "suffix": "l",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "[[]{@link |"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{@link\t"
        ],
        "suffix": "@{",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^-]*[A-Z??????????a-z??????????0-9][^-]*)(-[^-]*[A-Z??????????a-z??????????0-9][^-]*)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a--",
        "pump": [
          "-aa"
        ]
      },
      {
        "prefix": [
          "0-0-\u0000"
        ],
        "suffix": "",
        "pump": [
          "00-\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a-",
        "pump": [
          "-aa"
        ]
      },
      {
        "prefix": [
          "0-0-"
        ],
        "suffix": "",
        "pump": [
          "00-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s+)*.+$",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "ss"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\t\n\r\t\t\n\r\n\t\t\n\r\n\n90G6m6MXLCMb*\tdAglb=(qH-;KD\n!",
        "pump": [
          "\t\t\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9])(([-.]|[_]+)?([a-zA-Z0-9]+))*(@){1}[a-z0-9]+[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "A7SuA7Sui3TVgD8HgP",
        "pump": [
          "A7Su"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "-a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "GUCFGUCFSXBXLGGSMV",
        "pump": [
          "GUCF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "|\"a|'|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "|",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(.+[^\\\\])\\/(.*[^\\\\])*\\/){1,}",
    "inputs": [
      {
        "prefix": [
          "!]/"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\a",
        "pump": [
          "aa//"
        ]
      },
      {
        "prefix": [
          ",j+jJ=C4p,k?/"
        ],
        "suffix": "#mcj#mcjHetKC@",
        "pump": [
          "#mcj"
        ]
      },
      {
        "prefix": [
          "!]/"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\a",
        "pump": [
          "aa//"
        ]
      },
      {
        "prefix": [
          "Jb1D[/"
        ],
        "suffix": "Gn$0Gn$0G;mhlg+N",
        "pump": [
          "Gn$0"
        ]
      },
      {
        "prefix": [
          "!]/"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "aa//"
        ]
      },
      {
        "prefix": [
          "yq'T]G\\@NjL\\\\tCv7,GzSAt;7[uzM1j4ge/"
        ],
        "suffix": "9wL 9wL 8l\n ]",
        "pump": [
          "9wL "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<div\\>(.|\\s)*\\<\\/div>",
    "inputs": [
      {
        "prefix": [
          "<div>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<div>"
        ],
        "suffix": "</d",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<div>\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<div>v\t  \n \n\t\n"
        ],
        "suffix": " \t \t \t \t\t\t\n \r",
        "pump": [
          " \t \t"
        ]
      },
      {
        "prefix": [
          "<div>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<div>"
        ],
        "suffix": "i<di",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<div>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<div><div><<div>"
        ],
        "suffix": "\t\t  \t\t  \t \t \t\n\t ",
        "pump": [
          "\t\t  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([a-z0-9-]+)((?:\\s[a-z0-9:_.-]+=\".*?\")+)((?:\\s*\\/)?>)",
    "inputs": [
      {
        "prefix": [
          "<a a=\"\""
        ],
        "suffix": "",
        "pump": [
          " a=\"\"\\x09-=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s-=\"\"s-=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"s-=\"\u0000"
        ]
      },
      {
        "prefix": [
          "<a a=\"\""
        ],
        "suffix": "",
        "pump": [
          " a=\"\"\\x09-=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=a<",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s-=\"\"s-=\""
        ],
        "suffix": "",
        "pump": [
          "\"s-=\"\"s-=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w\\(\\)]+[\\s\\._-]([\\w\\(\\)]+[\\s\\._-])+[\\w\\(\\)]+-\\w+)",
    "inputs": [
      {
        "prefix": [
          "a_a-"
        ],
        "suffix": "",
        "pump": [
          "(__."
        ]
      },
      {
        "prefix": [
          "a\t"
        ],
        "suffix": "a_(",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "a_a-"
        ],
        "suffix": "",
        "pump": [
          "(__."
        ]
      },
      {
        "prefix": [
          "a\t"
        ],
        "suffix": "-a_\t",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\{(.*?)\\})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "{",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{",
        "pump": [
          "{}{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)(?:,((.*?):(N|S|B|NS|SS|BS):(.*?))*)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",a:",
        "pump": [
          ",:B:B:"
        ]
      },
      {
        "prefix": [
          ",,:B:"
        ],
        "suffix": "",
        "pump": [
          ":B::B:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "|,:N:,|,:N:,:N:N:N:,|NS|S:dLNzP8NA{p;o,:bldygxcbehfozlbethj\n\t",
        "pump": [
          "|,:N:,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^Invalid handler argument(.|\\n)*?Got: { worker: 'foo' }",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "([\\n\\r]\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ta",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^---[ \\t]+?(?:[ \\t]*((?:\\w+:\\S*[ \\t]*)*))?(?:[ \\t]+-+[ \\t]*)?$",
    "inputs": [
      {
        "prefix": [
          "---\\x09"
        ],
        "suffix": "\\x0a",
        "pump": [
          "a:0:"
        ]
      },
      {
        "prefix": [
          "---\t"
        ],
        "suffix": "-\t:",
        "pump": [
          "a: "
        ]
      },
      {
        "prefix": [
          "--- "
        ],
        "suffix": "a:VdrIkGlEa:VdrIkGlEyrLoWKbeTiTmiKDplwQYMuEtTZNuSltXuqMUpIGkRvNIqLYvhxyr:VdrIkGlEyrLoWKbeTiTmiKDplw N",
        "pump": [
          "a:VdrIkGlE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+\\/)*(([^/]+)\\.[^/.]*|[^/.]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          ".^//[](.+/(2)/(*+(6$+.8.*\\/\\^"
        ],
        "suffix": "//[](.+/(/(*+(6$+.8.*\\/\\^9^]9+^].5(/",
        "pump": [
          "//[](.+/(/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\-\\w*m\\w*|\\-\\-message)(\\s*|(='(?:\\\\.|[^'])*'|\\\"(?:\\\\.|[^\\\"])*\\\"))",
    "inputs": [
      {
        "prefix": [
          "-m='"
        ],
        "suffix": "sag\"'\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-m='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "-m='"
        ],
        "suffix": "sag-\"-\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-m='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(GET|DELETE|PATCH|POST) (\\S+)(?:.|\\r?\\n)+\\r?\\n(.*)\\r?\\n$",
    "inputs": [
      {
        "prefix": [
          "GET ! "
        ],
        "suffix": "!",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "POST a"
        ],
        "suffix": "C",
        "pump": [
          "a\r\n"
        ]
      },
      {
        "prefix": [
          "GET GQ"
        ],
        "suffix": "!",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "POST a"
        ],
        "suffix": "EaPOG\nPDE",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\t+| +)+(-?\\d+\\.?\\d*) = \\\"(.*)\\\"$",
    "inputs": [
      {
        "prefix": [
          " "
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t\t\t"
        ],
        "suffix": "",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " \t\t\t   \t\t\t  \t0781743139347781629207952974017006013667151",
        "pump": [
          " \t\t\t  "
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "= ",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t  "
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "\t   \t\t\t"
        ],
        "suffix": "           ",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*\\r?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\s\\/\\.]?(\\w+([\\s\\/\\.]+\\w+))+$",
    "inputs": [
      {
        "prefix": [
          ".a.0"
        ],
        "suffix": "!",
        "pump": [
          "a.000\\x090"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\ta\ta\t",
        "pump": [
          "a\taa"
        ]
      },
      {
        "prefix": [
          "w.ww.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww.w"
        ]
      },
      {
        "prefix": [
          "a\r"
        ],
        "suffix": "oRUM5eMq1\t5moRUM5eMq1\t5mFoRUM5eMq1\t5mF5Dq1\t5eMq1eM$",
        "pump": [
          "oRUM5eMq1\t5m"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w)+((-)*(\\w)*)*):",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a::",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ThQ8ThQ8MK8FtqEhy",
        "pump": [
          "ThQ8"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9]+([.][a-z0-9])* ?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": " a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "5654565494402940026A",
        "pump": [
          "5654"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([.?!]|\\n{2,}|\\r\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\r!",
        "pump": [
          "!\n\n\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r",
        "pump": [
          "!\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\r!",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\{.*?:.*?\\})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "{::}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([[:space:]]|[[:cntrl:]]|[\\\\\\\\/:*?\\\"<>|])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "a:"
        ]
      },
      {
        "prefix": [
          "\"/"
        ],
        "suffix": "\u0000",
        "pump": [
          "c/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "a:"
        ]
      },
      {
        "prefix": [
          "\"\\"
        ],
        "suffix": "\u0000",
        "pump": [
          "c\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(---+(.|\\n)+---+)",
    "inputs": [
      {
        "prefix": [
          "---."
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "-\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "---."
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "-\n--",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\e(?:[ -\\/]+.|[\\]PX^_][^\\a\\e]*|\\[[0-?]*.|.))*)(.?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[\u001baaP",
        "pump": [
          "\u001bP"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\u001bP"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(l|t.?)+$",
    "inputs": [
      {
        "prefix": [
          "/t"
        ],
        "suffix": "l!",
        "pump": [
          "tt"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "tl/",
        "pump": [
          "ltl"
        ]
      },
      {
        "prefix": [
          "/lt"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "tt"
        ]
      },
      {
        "prefix": [
          "/t/"
        ],
        "suffix": "tttttttttttttttttttt/t|t|t|ttt///",
        "pump": [
          "tttttt"
        ]
      },
      {
        "prefix": [
          "/t"
        ],
        "suffix": "l!",
        "pump": [
          "tt"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a/a",
        "pump": [
          "ltl"
        ]
      },
      {
        "prefix": [
          "/lt"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "lt"
        ]
      },
      {
        "prefix": [
          "/lt/tttt/t/"
        ],
        "suffix": "tttttttttttttltttttt)/",
        "pump": [
          "tttttt"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/([a-z0-9\\%\\.\\-\\_]+\\/?)*$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "!",
        "pump": [
          "%%"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "a//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/%a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a-z0a-z0-z-z-z0a/az'",
        "pump": [
          "a-z0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*?<H1>(<a.*a>)*[\\d\\.\\s]*(.*?)</H1>",
    "inputs": [
      {
        "prefix": [
          "<H1>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H1>"
        ],
        "suffix": "<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H1><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      },
      {
        "prefix": [
          "<H1>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H1>"
        ],
        "suffix": "</<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H1><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Version:<\\/strong>\\s((\\d+\\.?)+)",
    "inputs": [
      {
        "prefix": [
          "Version:</strong>\t0"
        ],
        "suffix": ">\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version:</strong>sdd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "Version:</strong>\t0"
        ],
        "suffix": "r",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Version:</strong>sdd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w-!]+)(=\"?((([\\w]+(\\[.*?\\])+)|[^\"\\]]|\\\\\")+)\"?)?",
    "inputs": [
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "=\"\"",
        "pump": [
          "a[]a"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "=\"\"a=",
        "pump": [
          "a[]a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\\\\\|\\\\\"|[^\\n\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\\"
        ],
        "suffix": "",
        "pump": [
          "\"\\"
        ]
      },
      {
        "prefix": [
          "\"2\\\\\\\\5584cc055Fddc6D6C5081286b2cE55"
        ],
        "suffix": "8\\\\\\2\\\\\\55845C650cc4855\\\\\\2\\\\\\5584cc055F9F86F37B011B",
        "pump": [
          "8\\\\\\2\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(mailto:|https?:\\/\\/)?(([\\da-z\\.-]+)(\\.|@)([a-z\\.]{2,6})([\\/\\w\\.-]*[\\/\\w-])*\\/?)",
    "inputs": [
      {
        "prefix": [
          "a@aa"
        ],
        "suffix": "ps:/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-\u0000..-"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      },
      {
        "prefix": [
          "a@aa"
        ],
        "suffix": "s:mail",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "h0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-\u0000.."
        ],
        "suffix": "",
        "pump": [
          "/."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "mot[\\s-]?(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "mot\ta"
        ],
        "suffix": "moa\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "motw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "mot\ta"
        ],
        "suffix": "\t$mo",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "motw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\"[^\\r\\n\"]*\"|'[^\\r\\n']*'|[\\s\\r\\n;]*|\\/\\*[\\w\\W]*?\\*\\/|\\/\\/[^\\n]*\\n)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "//'/",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<table class=\"infobox(.|\\n)*?<span.*?>(.*?)</span>",
    "inputs": [
      {
        "prefix": [
          "<table class=\"infobox"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<table class=\"infobox"
        ],
        "suffix": "l",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<table class=\"infobox"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<table class=\"infobox"
        ],
        "suffix": "i<t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^localstorage\\_\\_\\_(.*)+\\_\\_\\_\\d*$",
    "inputs": [
      {
        "prefix": [
          "localstorage___"
        ],
        "suffix": "",
        "pump": [
          "`"
        ]
      },
      {
        "prefix": [
          "localstorage___"
        ],
        "suffix": "ora",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "localstorag"
        ],
        "suffix": "e___e___^localstorage\\",
        "pump": [
          "e___"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(:\\/\\/)|(\\\\+|\\/{2,})+",
    "inputs": [
      {
        "prefix": [
          "\\"
        ],
        "suffix": ":",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "+//"
        ],
        "suffix": "\u0000",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "/:/",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "+///"
        ],
        "suffix": "\u0000",
        "pump": [
          "///"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": ":",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "+//"
        ],
        "suffix": "\u0000",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\#\\!.*\\n(\\#.*\\n)*",
    "inputs": [
      {
        "prefix": [
          "#!\n"
        ],
        "suffix": "#",
        "pump": [
          "#\n#\n"
        ]
      },
      {
        "prefix": [
          "#!\n"
        ],
        "suffix": "a#",
        "pump": [
          "#\n#\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+(\\.\\w+)*)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww\u0000ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "w\u0000ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aqmcaqmczoywdoumemp$",
        "pump": [
          "aqmc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/body(\\s[^>]*)*>.*$",
    "inputs": [
      {
        "prefix": [
          "</body"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "</body"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "</bodys"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "</body Y"
        ],
        "suffix": "\n\n \r\n\n \r\r\n\r\t\n\n\n\n\r",
        "pump": [
          "\n\n \r"
        ]
      },
      {
        "prefix": [
          "</body"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "</body"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "</bodys"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "</body"
        ],
        "suffix": "\n\t\r\n\n\t\r\n\b\n\r\ry\n\t\r\n\b\n\r\r",
        "pump": [
          "\n\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)(?:,((N|S|B|NS|SS|BS)=(.*?))(:(N|S|B|NS|SS|BS)=(.*?))*)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",BS",
        "pump": [
          ",B=:B="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "https?:[^ ]*|([0-9]+[,. ]?)+|([\\w]\\.)+|[\\w][\\w-]*",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": ". ",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ". htt",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+\\.?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "333333333333333337G",
        "pump": [
          "3333"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^.*\\.google.com(\\..+)*$",
    "inputs": [
      {
        "prefix": [
          ".googleacom"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000google\u0000com\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "..google.com.go.^.*\\.google.oogle.com.BW"
        ],
        "suffix": ".go.^.*..go.^.*.9134829\t.e\r.",
        "pump": [
          ".go.^.*."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^\"]*|\\\\.)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*expected\\s+((?:.|[\\r\\n])+?)\\s*\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*expected !"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*expected\t"
        ],
        "suffix": "\ta",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "/*expected 0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*expected\t"
        ],
        "suffix": "//",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\n)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/(?:\\\\.|[^\\/])+\\/[ion]?)",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\///",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "/\u0000."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^http[s]?://(.*?\\.)*?[a-z0-9\\-]+\\.[a-z]{2,4}",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "a.a",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "/",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "_A"
        ]
      },
      {
        "prefix": [
          "bd7Dce8f7"
        ],
        "suffix": "abaBabaBbA83F|",
        "pump": [
          "abaB"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((IE=edge,.*|width=device-width.*|(https?:\\/\\/|\\/)[\\w@\\/\\.]+|@[\\-\\w]+@|\\{[^\\{\\}]+\\}|[^a-zA-Z]*|(&nbsp;)+)\\s*)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "A",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "IE=edge,"
        ],
        "suffix": "\twidth",
        "pump": [
          "\tIE=edge,,"
        ]
      },
      {
        "prefix": [
          "[\rIE=edge"
        ],
        "suffix": ",.*|,.*|width=device-width.*|\n$x",
        "pump": [
          ",.*|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\\\{.*?)*(\\{.*?\\})(\\\\\\})*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\{\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}\\{\\",
        "pump": [
          "\\{\\{"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "\\{\\{\\{\\{\\{\\{*\\{.\\{{\\{*DiKrUklujBIpkP)\\\\H\\Lzwwd({jDth\\{*\\{.>`\tx\\\\\\H\\Lzwwd({jDthYa(P\\{*",
        "pump": [
          "\\{\\{\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\{\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}\\",
        "pump": [
          "\\{\\{"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<!--(?:.|\\n)*?--\\>",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\*+)\\s+(.*?)(\\s+(:\\S+:)+)?$",
    "inputs": [
      {
        "prefix": [
          "*  \\x00 :!:"
        ],
        "suffix": "\\x09",
        "pump": [
          ":;::::"
        ]
      },
      {
        "prefix": [
          "*\t\t"
        ],
        "suffix": "a",
        "pump": [
          ":a::a:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)\\.?(\\d+)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ".0"
        ],
        "suffix": ".",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "72517251088215693\\",
        "pump": [
          "7251"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z_]+(([-.])?[a-zA-Z0-9_]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "0--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A_"
        ],
        "suffix": "\u0000",
        "pump": [
          "0_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AAZzAAZzAAgTwiDQOa-",
        "pump": [
          "AAZz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^return[\\s\\r\\n]+((?:'(?:\\\\'|[^']+)+')|(?:\"(?:\\\\\"|[^\"]+)+\")|\\d+)[\\s\\r\\n]*;?$",
    "inputs": [
      {
        "prefix": [
          "return ']"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return\t'a"
        ],
        "suffix": "e",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return\t'"
        ],
        "suffix": "ur}>ur}>~|>}{;\b\b~=",
        "pump": [
          "ur}>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s*\\n\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\n",
        "pump": [
          "\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(`?[\\w\\W])*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "`a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "`a"
        ]
      },
      {
        "prefix": [
          "\"`@(`(>=`<(`sHC@(>`<]?@@("
        ],
        "suffix": "`(`<(`<``(`<(`<`(`<(`<<(\b",
        "pump": [
          "`(`<(`<`"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "`a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "`a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^on(_\\w+)*$",
    "inputs": [
      {
        "prefix": [
          "on"
        ],
        "suffix": "!",
        "pump": [
          "_0_0"
        ]
      },
      {
        "prefix": [
          "on"
        ],
        "suffix": "#",
        "pump": [
          "_a_a"
        ]
      },
      {
        "prefix": [
          "o"
        ],
        "suffix": "n_on_o_on_n_on_o_on_jcgcpemccbpudfhBLVBAXVYdmynpzsxypwon_on_JQ_on_jcgcmcV_jcgcpemccbpn_on_on_gc^",
        "pump": [
          "n_on_o_on_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^got the first bookmark's date should less than ((\\w+|-)+)",
    "inputs": [
      {
        "prefix": [
          "got the first bookmark's date should less than a"
        ],
        "suffix": "st boo",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "got the first bookmark's date should less than -ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<!-- Start:AutoTable((.*?(\\n))+.*?)End:AutoTable -->$",
    "inputs": [
      {
        "prefix": [
          "<!-- Start:AutoTable\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- Start:AutoTable"
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<[^>]*?>|\\\"[^\\\"]*?\\\"|[^,])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",\",>,",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "\u0000<>"
        ],
        "suffix": ",",
        "pump": [
          "\"\"<>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\">,",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([ \\t]*[\\r\\n]+)+|([\\r\\n]+[ \\t]*)+$",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "R"
        ],
        "suffix": "\n\n\r\n\n\n\r\n\r\n\n\n\n\n\t\r\t\n\n\t\n\n\t^\n",
        "pump": [
          "\n\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\\\\\|\\\\\"|[^\"\\n])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\\"
        ],
        "suffix": "",
        "pump": [
          "\"\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "name-69\\.99(?:.|\\n|\\r)*bg-warning(?:.|\\n|\\r)*text-warning(?:.|\\n|\\r)*69\\.99(?:.|\\n|\\r)*<th class=\"text-center\">2<\\/th><\\/tr>",
    "inputs": [
      {
        "prefix": [
          "name-69.99"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-69.99"
        ],
        "suffix": "te",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "name-69.99"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "name-69.99"
        ],
        "suffix": "h",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^edge ([^ ]+)+ ([^ ]+)",
    "inputs": [
      {
        "prefix": [
          "edge \\x00"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "edge a"
        ],
        "suffix": "edg  ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "edge \u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "edge "
        ],
        "suffix": "^edg^edg^g^edge^ed",
        "pump": [
          "^edg"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[#.](?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*[*+-](\\s+(.|\\n)+?))(\\n\\n|\\n\\s*[*+-])",
    "inputs": [
      {
        "prefix": [
          "- !"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0b\\x0a"
        ]
      },
      {
        "prefix": [
          "*\t"
        ],
        "suffix": "*\t",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\n.+?\\n.+?\\n)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a!\\x0a\\x0a\\x0a"
        ],
        "suffix": "!",
        "pump": [
          "\\x0a!\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\na\n\na\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\w]+)(\\(([\\d]+)*(,([\\d]+))*\\))*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "(00)"
        ]
      },
      {
        "prefix": [
          "a(0"
        ],
        "suffix": "a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "wdd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "632663267053613399",
        "pump": [
          "6326"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^msgid \"(((\\\\.)|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "msgid \""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "msgid \""
        ],
        "suffix": "id ",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*/)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\u0000",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*this\\.\\w+\\s*=\\s*[\\\"\\']\\$(.|\\s)*?[\\\"\\'];",
    "inputs": [
      {
        "prefix": [
          "this.a ='$"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "this.a=\"$"
        ],
        "suffix": "\tth",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "this.this_ ='$"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "this.a=\"$"
        ],
        "suffix": "is\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "this.a=\""
        ],
        "suffix": "$\t\t\t$\t\t\t\r\t\t\b\t\t\r\t\t\r\t\r\t\n\r\r\t",
        "pump": [
          "$\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n               closes:\\s*\n               (?:bug)?\\#?\\s?\\d+\n               (?:,\\s*(?:bug)?\\#?\\s?\\d+)*\n           ",
    "inputs": [
      {
        "prefix": [
          "               "
        ],
        "suffix": "ug#",
        "pump": [
          ",\t0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\(（]?(\\d+\\.?)+[^\\d]{2,}",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "(0"
        ],
        "suffix": "(0a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "222222222222222222",
        "pump": [
          "2222"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "(0"
        ],
        "suffix": "(0a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "（"
        ],
        "suffix": "032703277896190258",
        "pump": [
          "0327"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+-)+.+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a-"
        ]
      },
      {
        "prefix": [
          "\u0000-\u0000"
        ],
        "suffix": "",
        "pump": [
          "-\u0000-\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-",
        "pump": [
          "a-"
        ]
      },
      {
        "prefix": [
          "\u0000-\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "-\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^ *\\t*(?:import|from)[ ]+(?:(\\w+)[, ]*)+",
    "inputs": [
      {
        "prefix": [
          "from a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "from www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^/]|\\\\.)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "//",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "/",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "/",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z](-?[a-z0-9]+)+$",
    "inputs": [
      {
        "prefix": [
          "a0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a0a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a433a43339069202927^",
        "pump": [
          "a433"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var hasDontEnumBug;|.+?hasDontEnumBug *=.+",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "a*",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a \\x00hasDontEnumBug=\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "a**/\nvar hasDo",
        "pump": [
          "a**a*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+)(\\(((\\w|\\d|\\.)+,?)*\\))?\\.",
    "inputs": [
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a(0"
        ],
        "suffix": "a.(",
        "pump": [
          "0aa"
        ]
      },
      {
        "prefix": [
          "w\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "pp("
        ],
        "suffix": "56325632635",
        "pump": [
          "5632"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/([a-z\\-0-9]+)\\.(gif|js|css|png)(\\?.*)*$",
    "inputs": [
      {
        "prefix": [
          "/a.png"
        ],
        "suffix": "a",
        "pump": [
          "??"
        ]
      },
      {
        "prefix": [
          "/a.png"
        ],
        "suffix": "a",
        "pump": [
          "??"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"([^\"]*(&[ ]*[\\n\\r]+)?)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "&\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\na&",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "H\""
        ],
        "suffix": "qzf\bqzf\b56'GG;BFF",
        "pump": [
          "qzf\b"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "&\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\na",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "S\""
        ],
        "suffix": " cq9 cq9$GT/Dy@A[",
        "pump": [
          " cq9"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ",\\s+(\\d+)[\\s-]+(\\w+)+[\\s-]+(\\d+)\\s+(\\d+)[:-](\\d+)[:-](\\d+)",
    "inputs": [
      {
        "prefix": [
          ", 0-0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ",\t0\ta"
        ],
        "suffix": "-a\t0\t0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ",sd-ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "r,\r2\n"
        ],
        "suffix": "rhohrhohoDDEcE673a",
        "pump": [
          "rhoh"
        ]
      },
      {
        "prefix": [
          ", 0-0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ",\t0\ta"
        ],
        "suffix": "0-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ",sd-www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ",\n1-"
        ],
        "suffix": "q0SHq0SHZWDBZJXCVV",
        "pump": [
          "q0SH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*,)+(.+)?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Firefox\\/([^;)]+)+",
    "inputs": [
      {
        "prefix": [
          "Firefox/a"
        ],
        "suffix": ")",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Firefox/\u0000\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "Firefox/a"
        ],
        "suffix": "irF)Fi",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Firefox/\u0000\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(((.*?(?:\\ \\*)?)\\s*\\*?)+)\\s+(\\w+)\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "*"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "* ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$V(U$V(Un2X ($j",
        "pump": [
          "$V(U"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "*"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "HJK\n"
        ],
        "suffix": "HGPzHGPzSfH'",
        "pump": [
          "HGPz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)+=> +{(.*?)}$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(((.*)*)*Ā)foo",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aĀ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "bAMGbAMGbXs",
        "pump": [
          "bAMG"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aĀ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "IeU!IeU!<=\t",
        "pump": [
          "IeU!"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " <! ( -- .*? -- \\s* )+ > ",
    "inputs": [
      {
        "prefix": [
          " <!  --  --  "
        ],
        "suffix": "",
        "pump": [
          " --  --    --   - --  "
        ]
      },
      {
        "prefix": [
          " <! "
        ],
        "suffix": "-",
        "pump": [
          " --  --   --  --  "
        ]
      },
      {
        "prefix": [
          " <!  --  --   -- \u0000"
        ],
        "suffix": "",
        "pump": [
          " --   -- \u0000"
        ]
      },
      {
        "prefix": [
          " <!  --  --  "
        ],
        "suffix": "",
        "pump": [
          " --  --    --   - --  "
        ]
      },
      {
        "prefix": [
          " <! "
        ],
        "suffix": "! ",
        "pump": [
          " --  --   --  --  "
        ]
      },
      {
        "prefix": [
          " <!  --  --   -- \u0000"
        ],
        "suffix": "",
        "pump": [
          " --   -- \u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "# yamllint enable(( rule:\\S+)*)\\s*$",
    "inputs": [
      {
        "prefix": [
          "# yamllint enable"
        ],
        "suffix": "n\t:",
        "pump": [
          " rule:a rule:a"
        ]
      },
      {
        "prefix": [
          "# yamllint enable"
        ],
        "suffix": "n\ta# ",
        "pump": [
          " rule:a rule:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|[\\r\\n])*?-->",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "->-",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\*\\* Registrant:\\n((?:\\s+.+\\n)+)",
    "inputs": [
      {
        "prefix": [
          "** Registrant:\n"
        ],
        "suffix": "s",
        "pump": [
          "\t\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<img(.|\\n)*?>",
    "inputs": [
      {
        "prefix": [
          "<img"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "i",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "im",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "GlobalSection\\(ProjectConfigurationPlatforms\\) = postSolution((?:.|\\n)*?)EndGlobalSection",
    "inputs": [
      {
        "prefix": [
          "GlobalSection(ProjectConfigurationPlatforms) = postSolution"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "GlobalSection(ProjectConfigurationPlatforms) = postSolution"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "GlobalSection(ProjectConfigurationPlatforms) = postSolution"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "GlobalSection(ProjectConfigurationPlatforms) = postSolution"
        ],
        "suffix": "ndG",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[][`][[",
        "pump": [
          "``"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "[]``"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<a(.|\\n)*?>(.|\\n)*?(<\\/a>){1}?)",
    "inputs": [
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n1 OBJE(?:\\n[2-9].+)+",
    "inputs": [
      {
        "prefix": [
          "\n1 OBJE"
        ],
        "suffix": "a",
        "pump": [
          "\n2a\n2a"
        ]
      },
      {
        "prefix": [
          "\n1 OBJE"
        ],
        "suffix": "a",
        "pump": [
          "\n2a\n2a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\033\\[(?:\\d+\\;?)+m",
    "inputs": [
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "129912994074425198",
        "pump": [
          "1299"
        ]
      },
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "0\u001b[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b\u001b["
        ],
        "suffix": "482648262811407775",
        "pump": [
          "4826"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "playstation 3(?:\\D+([\\d.]+))*",
    "inputs": [
      {
        "prefix": [
          "playstation 3"
        ],
        "suffix": "t$",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "playstation 3"
        ],
        "suffix": "sta",
        "pump": [
          "a."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--START_FLAGS-->(?:.|\\r|\\n)+<!--END_FLAGS-->",
    "inputs": [
      {
        "prefix": [
          "<!--START_FLAGS-->!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--START_FLAGS-->"
        ],
        "suffix": "T_F",
        "pump": [
          "a\r"
        ]
      },
      {
        "prefix": [
          "<!--START_FLAGS-->="
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--START_FLAGS-->"
        ],
        "suffix": "-END_FLAGS-",
        "pump": [
          "a\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Available: jasmine: versions\\[(\\d+\\.\\d+\\.\\d+,?\\s?)+\\]",
    "inputs": [
      {
        "prefix": [
          "Available: jasmine: versions[0.0.0"
        ],
        "suffix": "",
        "pump": [
          "0.0.000.0.0"
        ]
      },
      {
        "prefix": [
          "Available: jasmine: versions["
        ],
        "suffix": "0.",
        "pump": [
          "0.0.00"
        ]
      },
      {
        "prefix": [
          "Available: jasmine: versions[0.0.0"
        ],
        "suffix": "",
        "pump": [
          "0.0.000.0.0"
        ]
      },
      {
        "prefix": [
          "Available: jasmine: versions["
        ],
        "suffix": "as",
        "pump": [
          "0.0.00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([;\\s]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:(?:(?:(?:(matrix)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(translate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(scale)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(rotate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(skewX)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(skewY)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\)))(?:(?:\\s+,?\\s*|,\\s*)(?:(?:(matrix)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(translate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(scale)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(rotate)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))(?:\\s+,?\\s*|,\\s*)((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)))?\\s*\\))|(?:(skewX)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))|(?:(skewY)\\s*\\(\\s*((?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?))\\s*\\))))*)?)\\s*$",
    "inputs": [
      {
        "prefix": [
          "matrix(-0 ,-0 ,-0 ,-0 ,-0 ,-0)"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09\\x09matrix(0\\x090\\x090\\x090\\x090\\x090)"
        ]
      },
      {
        "prefix": [
          "skewX(+0)"
        ],
        "suffix": "0",
        "pump": [
          "\t\tscale(0)"
        ]
      },
      {
        "prefix": [
          "scaled,matrixds"
        ],
        "suffix": "",
        "pump": [
          "sd,d,d,d,d,matrixds"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+) (?:\\((\\d+)+\\))?",
    "inputs": [
      {
        "prefix": [
          "a (0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a (0"
        ],
        "suffix": "a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "w dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "ha ("
        ],
        "suffix": "000900094794794794",
        "pump": [
          "0009"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([0-9]+).([0-9]+).([0-9]+)*",
    "inputs": [
      {
        "prefix": [
          "0a0a0"
        ],
        "suffix": "0aa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0\u00000\u000000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0a0a0"
        ],
        "suffix": "0aa00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0\u00000\u000000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\`((?:.|\\n)*)\\`|([\\w.-]+))_$",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "`\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\n)*-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@keyframes\\s+[^\\{\\}]+\\s*\\{(?:[^{}]+|\\{[^{}]+})*}",
    "inputs": [
      {
        "prefix": [
          "@keyframes  {"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "@keyframes\ta{a"
        ],
        "suffix": "es\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@keyframes  {"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "@keyframes\ta{a"
        ],
        "suffix": "$}@keyframes\t@keyfra",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(1)(\\t.+?){7,}",
    "inputs": [
      {
        "prefix": [
          "1\ta\ta\ta\ta\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "1\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\t\u0000"
        ]
      },
      {
        "prefix": [
          "1\ta\ta\ta\ta\ta\ta"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "1\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000\t\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\t\u0000"
        ]
      },
      {
        "prefix": [
          "1"
        ],
        "suffix": "a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "1\t\u0000\t\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\t\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<textarea ((?:\"[^\"]*\"|'[^']*'|[^'\"<>]*)*)>(.*?)<\\/textarea.*?>",
    "inputs": [
      {
        "prefix": [
          "<textarea "
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<textarea "
        ],
        "suffix": "ar</'</\"</textare",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<textarea \""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "B<texta"
        ],
        "suffix": "rea rea c\b\tUb20}b`3$D",
        "pump": [
          "rea "
        ]
      },
      {
        "prefix": [
          "<textarea "
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<textarea "
        ],
        "suffix": "/texta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<textarea \"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "<texta"
        ],
        "suffix": "rea rea q_|+bDz\b9Acr}",
        "pump": [
          "rea "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s?coordinates>(([^<]|\\n)*)<\\/\\s?coordinates\\s?>",
    "inputs": [
      {
        "prefix": [
          "< coordinates>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<\tcoordinates>"
        ],
        "suffix": "/coordina",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "RD\r;m< coordinates>nCsod>/\\oc\n\t\b\b\t\b\r\b"
        ],
        "suffix": "\n\r\b\n\n\t\b\t\b\n\n\r\b\n\n\t\b\t\b\n\r\t\n\b\b\t\b\b\ns>nCsod\t\b\b\r\n\r\t\n\b\b\t\b\b\ns>nC",
        "pump": [
          "\n\r\b\n\n\t\b\t\b\n"
        ]
      },
      {
        "prefix": [
          "< coordinates>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<\tcoordinates>"
        ],
        "suffix": "na<a<coordin",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "c<coordinates>"
        ],
        "suffix": "c\n\n\t\n\nc\n\n\t\n\n\t\n\r\n\r\n\n\t\n\n\t\b\b\b\r\n\r",
        "pump": [
          "c\n\n\t\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{anonymous}\\(.*\\)@(\\w+:\\/\\/([-\\w\\.]+)+(:\\d+)?[^:]+):(\\d+):?(\\d+)?",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*|\\t*)public(\\s+)class(\\s+)(.*?)(\\s*)((extends|implements)(.*?)(\\s*))*\\{",
    "inputs": [
      {
        "prefix": [
          " public class\\x09"
        ],
        "suffix": "",
        "pump": [
          "extends\\x09"
        ]
      },
      {
        "prefix": [
          "public\tclass\t"
        ],
        "suffix": "i",
        "pump": [
          "extends\t"
        ]
      },
      {
        "prefix": [
          "public class\\x0a"
        ],
        "suffix": "",
        "pump": [
          "extends\\x09"
        ]
      },
      {
        "prefix": [
          "public\tclass\t"
        ],
        "suffix": "exte",
        "pump": [
          "extends\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\\\$[\\w_]+({(\".+?\"|\\d+|\\$[\\w_]+)})*(\\[\\[\\d+\\]\\])*",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\\\\\\r\\n]|\\\\?(?:\\r\\n|[\\s\\S]))*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\r",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "\"?S"
        ],
        "suffix": "",
        "pump": [
          "?S?S"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "{@c|{@c|qp*<~N}#",
        "pump": [
          "{@c|"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\r",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "?S\u0000"
        ]
      },
      {
        "prefix": [
          "\"5\n"
        ],
        "suffix": "=yuA=yuA|W\t@WUy",
        "pump": [
          "=yuA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\s\\n]*<[^>]*>[\\s\\n]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a>>",
        "pump": [
          "\t<>\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t<>\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "X<+(([^>]|E<[^>]*>)*?)>",
    "inputs": [
      {
        "prefix": [
          "X<"
        ],
        "suffix": "a",
        "pump": [
          "aE<E<>"
        ]
      },
      {
        "prefix": [
          "X<E<>"
        ],
        "suffix": "",
        "pump": [
          "E<E<>"
        ]
      },
      {
        "prefix": [
          "X<"
        ],
        "suffix": "<X",
        "pump": [
          "aE<E<>"
        ]
      },
      {
        "prefix": [
          "X<E<>"
        ],
        "suffix": "",
        "pump": [
          "E<E<>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\s\\[\\{\\(]|#.*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "########\t\t#\t#(({ \t  \r\n\n \r\t   \t\r\t\r \n{P",
        "pump": [
          "####"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\xCF*[0-9]{2}\\xCF*)+$",
    "inputs": [
      {
        "prefix": [
          "00"
        ],
        "suffix": "!",
        "pump": [
          "00\\xff00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ï0Ï",
        "pump": [
          "Ï00Ï"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "66Ï66Ï66ÏÏ66Ï66Ï66ÏÏÏ26Ï66ÏÏ62Ï66Ï6666666666ÏÏÏ26Ï6",
        "pump": [
          "66Ï66Ï66ÏÏ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+){2,}",
    "inputs": [
      {
        "prefix": [
          "aa"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "$a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^ \"]+|\"[^\"]*\")+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": " \" ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n[ \\t]*\\|.+\\|[^\\n]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "\n|a||"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\n",
        "pump": [
          "\n|a|\n|a|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\*[\\t| ]\\@([^\\n|\\t| ]+)(?:[\\t| ]([^\\n]+))*",
    "inputs": [
      {
        "prefix": [
          "*\t@a"
        ],
        "suffix": "\n",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "*\t@a"
        ],
        "suffix": "a\n*",
        "pump": [
          "\ta\ta"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\s+?)*([A-Z]+)(([0-9]+)(_([0-9]+))?)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "Aa",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "ss"
        ],
        "suffix": "",
        "pump": [
          "sss"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "Aa",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "A0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t(\t\t\t(\t\t\tn \n/;>&3nS\n\n\\'Ew|Y6a?=e&Jh:Ur#)9O7zfgn2\bQ_:vj:L>M&_%6*bY~t1_H\bZ_`G\b-0\t7aP>7ik",
        "pump": [
          "\t(\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "--TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)--DATA--.*?--EXPECT--.*",
    "inputs": [
      {
        "prefix": [
          "--TEST--\\x00--CONDITION-- \\x00--TEMPLATE--"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE()--)--TEMPLATE()--DATA--)--)--"
        ]
      },
      {
        "prefix": [
          "--TEST--"
        ],
        "suffix": "--TEMPLATE()--)--DA",
        "pump": [
          "--TEMPLATE()--)--"
        ]
      },
      {
        "prefix": [
          "--TEST----TEMPLATE----TEMPLATE--"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE--TEMPLATE--"
        ]
      },
      {
        "prefix": [
          "--TEST-- \\x00--CONDITION-- \\x00--TEMPLATE--"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE()--)--TEMPLATE()--DATA--)--)--"
        ]
      },
      {
        "prefix": [
          "--TEST--"
        ],
        "suffix": "--TEMPLATE----DATA---TEMPL",
        "pump": [
          "--TEMPLATE()--)--"
        ]
      },
      {
        "prefix": [
          "--TEST----TEMPLATE----TEMPLATE--\u0000"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE--\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "https?://[a-z0-9-]+(.[a-z0-9-]+)+(/?)",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "ps/:",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "//",
        "pump": [
          "aaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(doc_perl_install\\s+::\\s+(.+\\n)+)([ \\t]*\\n)",
    "inputs": [
      {
        "prefix": [
          "doc_perl_install ::  \\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "doc_perl_install\t::\t"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\'((?:\\\\.|[^\\'])*)\\'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'\\\\\\\\vIEyjz|ahb1?h:.?\\ ^*:))(*.\\.|?\\ ^*:))(*.)"
        ],
        "suffix": "\\OH\\TR\\TP\\\\OH\\TR\\TP\\^?h:xQr",
        "pump": [
          "\\OH\\TR\\TP\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\:@\\\\\\|\\\\:@\\\\\\|)D|Gs:vt8J\\\\y6I8Amf]607peJ??;RHXTvnF8qk\\hqxnkiwbfxnjcysivma:\\\\\\bfxnjcysivmqbgpa",
        "pump": [
          "\\\\:@\\\\\\|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([ \\t]+[^\\s\\n*+=-].+\\n){2,})",
    "inputs": [
      {
        "prefix": [
          "\taa\n"
        ],
        "suffix": " a\n\t",
        "pump": [
          "\t aa\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "\t aa\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[^\\d]+(\\d+)[^\\d]+(\\d+(?:(?:,\\d+)*)+(?:.\\d+)*).*",
    "inputs": [
      {
        "prefix": [
          "a0a0,0"
        ],
        "suffix": "a",
        "pump": [
          ",00"
        ]
      },
      {
        "prefix": [
          "\u0000d\u0000d\u0000d"
        ],
        "suffix": "",
        "pump": [
          "dd\u0000d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\n)*(\\ *#\\=\\ *require\\ +.*\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " #a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "q",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\e\\[(([0-9]+;?)+)m",
    "inputs": [
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "\u001b",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "0880088009888895988",
        "pump": [
          "0880"
        ]
      },
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b[0"
        ],
        "suffix": "0\u001b[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "m\u001b["
        ],
        "suffix": "179317935186873637",
        "pump": [
          "1793"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<cell \\s* row=\"(\\d+)\" \\s* col=\"(\\d+)\">\n\t\t (?:<[^<>]*>)* # Any <B>, <I> etc. tags\n\t\t ( \\s* (?:[^<\\s]+\\s*?)* )\\s* # The value itself.\n\t\t <\n\t\t",
    "inputs": [
      {
        "prefix": [
          "\t\t   a"
        ],
        "suffix": "he ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<cell  row=\"0\"  col=\"0\">\n\t\t  # Any <B>, <I> etc  tags\n\t\t  \n "
        ],
        "suffix": "\\s*h\\s*healuetself",
        "pump": [
          "\\s*h"
        ]
      },
      {
        "prefix": [
          "\t\t   a"
        ],
        "suffix": "he ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<cell  row=\"0\"  col=\"0\">\n\t\t  # Any <B>, <I> etc< tags\n\t\t   "
        ],
        "suffix": "#hea#healuetself # ",
        "pump": [
          "#hea"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(:?(([a-zA-Z]{1})|([a-zA-Z]{1}[a-zA-Z]{1})|([a-zA-Z]{1}[0-9]{1})|([0-9]{1}[a-zA-Z]{1})|([a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]))\\.)+([a-zA-Z]{2,13}|(xn--[a-zA-Z0-9]{2,30}))$",
    "inputs": [
      {
        "prefix": [
          ":a."
        ],
        "suffix": "",
        "pump": [
          "0A."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "pump": [
          ":aa."
        ]
      },
      {
        "prefix": [
          "A\u00000------------------------------a"
        ],
        "suffix": "",
        "pump": [
          "00:0------------------------------a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Iz.Iz.Iz.Iz.Iz.Iz.Iz.Iz.z.ggkylvgxtphuzzIz.zI.Iz.Iz.zII.z.Iz.Iz.zII.",
        "pump": [
          "Iz.Iz.Iz.Iz."
        ]
      },
      {
        "prefix": [
          ":a."
        ],
        "suffix": "",
        "pump": [
          "0A."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":",
        "pump": [
          ":aa."
        ]
      },
      {
        "prefix": [
          "A\u000000"
        ],
        "suffix": "",
        "pump": [
          "0-00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "V3.V3.V3.V3.nx.IF.3p.IF.xn.x3.FI.xn.xn-zpkkenmcxfotlyfaexlqzamawwpnomirmv",
        "pump": [
          "V3.V3."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@(-?\\d+\\.\\d+),(-?\\d+\\.\\d+),(\\d+\\.?\\d?)+z",
    "inputs": [
      {
        "prefix": [
          "@-0.0,-0.0,0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "@-0.0,-0.0,0"
        ],
        "suffix": "@-0.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "@d\u0000d,d\u0000d,dd\u0000"
        ],
        "suffix": "",
        "pump": [
          "dd\u0000"
        ]
      },
      {
        "prefix": [
          "@-0.0,-0.0,0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "@-0.0,-0.0,0"
        ],
        "suffix": ",-0.0,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "@d\u0000d,d\u0000d,dd\u0000"
        ],
        "suffix": "",
        "pump": [
          "dd\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w.!~*'|;:&=+$,-]+@)?(([A-Za-z0-9]+[A-Za-z0-9\\-]*[A-Za-z0-9]+\\.)*([A-Za-z0-9]+\\.)*)*([A-Za-z]+[A-Za-z0-9\\-]*[A-Za-z0-9]+)\\.?(:\\d*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "000."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a.a",
        "pump": [
          "aa.."
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "EMh3.iEMh3.iTQFEABrMJM ",
        "pump": [
          "EMh3.i"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "000."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0.:0-a",
        "pump": [
          "aa.."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "NCQ.QvNCQ.QvCZFPlZjJ4Z5D%",
        "pump": [
          "NCQ.Qv"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<(?:div|p|ol|ul|li|pre|code|object)[^>]*>)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "o",
        "pump": [
          "<pre>"
        ]
      },
      {
        "prefix": [
          "<p><"
        ],
        "suffix": "",
        "pump": [
          "pre><"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pr",
        "pump": [
          "<pre>"
        ]
      },
      {
        "prefix": [
          "<p><"
        ],
        "suffix": "",
        "pump": [
          "pre><"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!--.+-->)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "<",
        "pump": [
          "<!--a--><!--a-->"
        ]
      },
      {
        "prefix": [
          "<!--\u0000--><!--\u0000"
        ],
        "suffix": "",
        "pump": [
          "--><!--\u0000--><!--\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-",
        "pump": [
          "<!--a--><!--a-->"
        ]
      },
      {
        "prefix": [
          "<!--\u0000--><!--\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "--><!--\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.*\\r?\\n)*([0-9]{3})( [^\\r\\n]*)?\\r?\\n$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0\n0",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:msie |rv:)(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "rv:0._0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "rv:dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "rv:0._0"
        ],
        "suffix": "ie",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "rv:dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(sam[sung]*)[\\s-]*(\\w+-?[\\w-]*)*",
    "inputs": [
      {
        "prefix": [
          "sama"
        ],
        "suffix": "sA\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "samw-"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      },
      {
        "prefix": [
          "sama"
        ],
        "suffix": "a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "samw-"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/ START[\\r\\n]*((.|[\\r\\n])*)\\/\\/ END",
    "inputs": [
      {
        "prefix": [
          "// START"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "// START"
        ],
        "suffix": " ST",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "// START"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "// START"
        ],
        "suffix": "AR",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[A-Za-z0-9!#$%&'*+=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+=?^_`{|}~-]+)*|\\\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\\\")@(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
    "inputs": [
      {
        "prefix": [
          "^.^@[250.250.250.250A:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "2a\"@[26.26.26.",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "^\"^\"@a-.^@a.a!\\x0e^\"@[250.250.250.250A:\\x7f"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "-",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w\\w\\w\\s+\\d+ \\d\\d:\\d\\d:\\d\\d (?:\\w|-|\\.|_)+ ",
    "inputs": [
      {
        "prefix": [
          "aaa 0 00:00:00 ."
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          "aaa\t0 00:00:00 "
        ],
        "suffix": "0",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "wwwsd dd:dd:dd \u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*#.*)*\\s*([\\/{]|sub|BEGIN|END|\\w+:\\s*\\/)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "EGEN",
        "pump": [
          "\t#\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "",
        "pump": [
          "s#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#G##BEEEGIvLYJ#G#G##BEEEGIvLYJ#G##BEEEGIvLYJpckHvcAIQVtUypiuwdVOopIPJLAUF",
        "pump": [
          "#G##BEEEGIvLYJ#G"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Aa0ZAa0Zaa0ZZa0z0-9_.",
        "pump": [
          "Aa0Z"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((http|https):\\/\\/)?(\\S+(:\\S*)?@)?((([1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(\\.(1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.([0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|((www\\.)?)?(([a-z\\x{00a1}-\\x{ffff}0-9]+-?-?_?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.([a-z\\x{00a1}-\\x{ffff}]{2,}))?)|localhost)(:(\\d{1,5}))?((\\/|\\?|#)[^\\s]*)?$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "121w121w122221w@",
        "pump": [
          "121w"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2www2wwwtthttps:",
        "pump": [
          "2www"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?(\\w+)(?:(?:\\s+(?:\\w|\\w[\\w-]*\\w)(?:\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " aa=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wsw=\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " aa=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=</\t</",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"sw=\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(_?{num.*}?)*$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *try *\\{(?:\\s*\\/\\/.*)*\\n *var useSourceURL[\\s\\S]+?catch[^}]+}\\n",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "}ca\nvar use",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": " /*/}\n\n /*",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\n /"
        ],
        "suffix": "*************\nhLcDhKXJsQOswhYZEGRWMUKWYMRY3DborIVu^**he\\** v+**q[tn***?oE**rN[\\)e*vnSourceUIVu^**he\\** ",
        "pump": [
          "******"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\s*\\n)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\\\?[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)+$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "!",
        "pump": [
          "_A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\",
        "pump": [
          "\\aa"
        ]
      },
      {
        "prefix": [
          "?7f"
        ],
        "suffix": "\u0000",
        "pump": [
          "7f"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "FfEaFfEa7B2CEf1d9d3CB8c\\",
        "pump": [
          "FfEa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* compute tau *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[QO>[QO>Z!:\"?qnd?w",
        "pump": [
          "[QO>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "edge\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "edge/0._0"
        ],
        "suffix": "e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "edge/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "edge/0._0"
        ],
        "suffix": "ed",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "edge/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d*\\.(?:[0-9]*[1-9]|[1-9])*)0+$",
    "inputs": [
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          "11"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "01",
        "pump": [
          "11"
        ]
      },
      {
        "prefix": [
          "\u00001"
        ],
        "suffix": "",
        "pump": [
          "111"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "11171117191117",
        "pump": [
          "1117"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\",
        "pump": [
          ".a['']['']"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]*(- )*(\\w+)+[: ]+(.*)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "JxNyJxNySzTObJCo2l",
        "pump": [
          "JxNy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[\\s*(\\w+)\\s*\\]|([^\\s\\[]+\\s?)+)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\ta[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$[",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[0-9a-zA-Z]{2,3}$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0A"
        ],
        "suffix": "",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "TOmSTOmSxcIy3HpVL",
        "pump": [
          "TOmS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "6WSR6WSRZrBbvm0y.6",
        "pump": [
          "6WSR"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\"(\\\\.|[^\"])*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Some previous changelog.(\\s|.)*First commit",
    "inputs": [
      {
        "prefix": [
          "Some previous changelog!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "Some previous changeloga"
        ],
        "suffix": "mmi",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "Some previous changelog\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "Some previous changelogT"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "Some previous changeloga"
        ],
        "suffix": "ng",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "Some previous changelog\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[\\s*.*?(?:\\s*,\\s*.*?)*\\s*\\]$",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\t",
        "pump": [
          "\t,\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([=-]*)([^:=]+):([^\\(\\s]+)\\([\\\"'](.+)[\\\"']\\s*((?:<.+>)*)\\s*([^\\)]+)?\\)\\s+(.+)",
    "inputs": [
      {
        "prefix": [
          "-!:)('!\""
        ],
        "suffix": "",
        "pump": [
          "<)><>>"
        ]
      },
      {
        "prefix": [
          "a:a(\"a\""
        ],
        "suffix": "<",
        "pump": [
          "<a><a>"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000\"\u0000\"<\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*[,]?\\s*[a-zA-Z0-9_]+)*\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x090"
        ]
      },
      {
        "prefix": [
          ",a"
        ],
        "suffix": "a\t)",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "JPoFJPoFXJsfzyMH",
        "pump": [
          "JPoF"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x090"
        ]
      },
      {
        "prefix": [
          ",a"
        ],
        "suffix": ")a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "bRJ2bRJ2GLDeO5bV",
        "pump": [
          "bRJ2"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "time=(([0-9]|:|.)+) bitrate",
    "inputs": [
      {
        "prefix": [
          "time=;"
        ],
        "suffix": "",
        "pump": [
          ":"
        ]
      },
      {
        "prefix": [
          "time="
        ],
        "suffix": "tr",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "time=\u0000:"
        ],
        "suffix": "",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "time= time=tr"
        ],
        "suffix": "::;:::;:~@~{}?\b<\b;~?:;~{:<:>:|=:=??>|{|>=~?<~??|~:\b|:\b\b",
        "pump": [
          "::;:"
        ]
      },
      {
        "prefix": [
          "time=u"
        ],
        "suffix": "",
        "pump": [
          ":"
        ]
      },
      {
        "prefix": [
          "time="
        ],
        "suffix": "trt",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "time=\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ":\u0000"
        ]
      },
      {
        "prefix": [
          "time= biMXtFmVA6lZP"
        ],
        "suffix": "3k0t833k0t83luVvkARJULBjUYRwE8K8C16DZ678",
        "pump": [
          "3k0t83"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(rekonq)\\/([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "rekonq/a"
        ],
        "suffix": "ekon/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "rekonq/.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "rekonq/a"
        ],
        "suffix": "ekon$r",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "rekonq/.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(http://)?(m.finn.no)(/.+/)+search.html(.*)$",
    "inputs": [
      {
        "prefix": [
          "http://m!finn!no/!/"
        ],
        "suffix": "",
        "pump": [
          "/t////"
        ]
      },
      {
        "prefix": [
          "mafinnano"
        ],
        "suffix": "/",
        "pump": [
          "/a//a/"
        ]
      },
      {
        "prefix": [
          "m.finn.no/.+"
        ],
        "suffix": "////m///////m////m///+///se+//m.finn.+/searm//.//se+//.+/",
        "pump": [
          "////m///"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--API-REF-->((?:.|[\\r\\n])*)<!--END-API-REF-->",
    "inputs": [
      {
        "prefix": [
          "<!--API-REF-->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--API-REF-->"
        ],
        "suffix": "PI-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--API-REF-->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--API-REF-->"
        ],
        "suffix": "--A",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*/"
        ],
        "suffix": "*>****\\**>****\\****i****^)^<[+\\\\?<[[^}\\\\?^~:{**[\\?)\\>/[AfP~l_K,\nMq\nMq39D(AG\".3$ \rUWL\\sT\tO",
        "pump": [
          "*>****\\*"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a/",
        "pump": [
          "a**a*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\/)+([0-9]+)\\-(.+)$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a/0-",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "///////////INYJAZGLSNQHTRPMDUARQBHZPHKAKULTZKFBSRIWQYAYTSKQUNLOXYUJFMNLNWVFWYNFNYKHSNMROELUDKMVHXCHLEWUZQFKOATUJEWPA",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a/",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Build the set of points *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "o",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ">Azm>AzmlaUnx IYHX",
        "pump": [
          ">Azm"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*, )*CN=(.+?)(, .*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ", , "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a, ",
        "pump": [
          "a, "
        ]
      },
      {
        "prefix": [
          "CN=\u0000, "
        ],
        "suffix": "",
        "pump": [
          ", , "
        ]
      },
      {
        "prefix": [
          "CN"
        ],
        "suffix": "=, C, , , =, C, , , ,=, 989683850|k3, , e0MKmNmiW1, , ,i!7298358228595530|k28538927!i, e0MKmNmiW17",
        "pump": [
          "=, C, , , "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\/[a-zA-Z]+\\/[0-9]+)(\\?.*)*",
    "inputs": [
      {
        "prefix": [
          "/a/0"
        ],
        "suffix": "a",
        "pump": [
          "??"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\S+\\.)+\\S+$",
    "inputs": [
      {
        "prefix": [
          "!."
        ],
        "suffix": "\\x09",
        "pump": [
          "/..."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "S\u0000SS"
        ],
        "suffix": "",
        "pump": [
          "SSS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "....\\S.+....\\S.+f\\S.+f4HNFv8Aho1O0Lkp2fdy8yxVSZtB9BQjpFELI...)+\\(L3+\\.;6~O\b\bS^\\S.\\S$\\.+^.^#$}\nd",
        "pump": [
          "....\\S.+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n?```[^\\n]+hidden(?:.*\\n)+?```",
    "inputs": [
      {
        "prefix": [
          "\\x0a```!hidden\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "\n```ahidden"
        ],
        "suffix": "\n`",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "\\x0a````hidden\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "\n```ahidden"
        ],
        "suffix": "i",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: *\\/\\/.*\\s*)* *lodash\\.forIn *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " // //"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "o/",
        "pump": [
          " //\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//////// //// //sh.\t \t  \r \n\n\t\n\r\r\n\t\t\r\t \n\t\r\r\n  \n  \t\t ",
        "pump": [
          "////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\"((?:[^\"]+|\\\\.)*)\"|((?:[^\\\\\\s]+|\\\\.)*))\\s*",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\"a\"\t\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\t "
        ],
        "suffix": "\u0000",
        "pump": [
          "B "
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "=\\=\\=\\=\\403552595",
        "pump": [
          "=\\=\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-z](?:-?[a-z]+)*)",
    "inputs": [
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "-a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([_a-zA-Z]\\w*)*:[a-zA-Z]\\w*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "wA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "IIIZIIIZmgIZmgq8eV0_",
        "pump": [
          "IIIZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\\\.|[^= ]+)*)=(\"(?:\\\\.|[^\"\\\\]+)*\"|(?:\\\\.|[^ \"\\\\]+)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\"\"a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(.Cx(.CxcPnil\nN7i",
        "pump": [
          "(.Cx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\" ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":o]\b:o]\b1OyJf7L|/",
        "pump": [
          ":o]\b"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "custom-api-check.*?formly-field(.|\\n)*?className",
    "inputs": [
      {
        "prefix": [
          "custom-api-checkformly-field"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "custom-api-checkformly-field"
        ],
        "suffix": "m-a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "custom-api-checkformly-field"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "custom-api-checkformly-field"
        ],
        "suffix": "he",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*<BODY>\\n\\n((\\s|\\d|\\n|\\w|\\[|\\]|:|;|=|<|>)*?)\\n<HR>",
    "inputs": [
      {
        "prefix": [
          "<BODY>\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "<BODY>\n\n"
        ],
        "suffix": "H",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<BODY>\n\nvccA8H<BODY>\n\nvccA8HWlcad2JMEhStTBHdcpel9r3IMDY>\nccA8HWlc2JMEhStTBHdcp9ray3IMU",
        "pump": [
          "<BODY>\n\nvccA8H"
        ]
      },
      {
        "prefix": [
          "<BODY>\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "<BODY>\n\n"
        ],
        "suffix": "HR<",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "]<BODY>"
        ],
        "suffix": "\n\n:4f4\n\n:4f498A200DB06D3",
        "pump": [
          "\n\n:4f4"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(\\w+)\\]((?:\\n[^\\[].*)*)",
    "inputs": [
      {
        "prefix": [
          "[a]"
        ],
        "suffix": "a",
        "pump": [
          "\na\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\n\\s]+|%[^\\n]*\\n)*(.)",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "aa\na\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "arn:aws:iam::[0-9]+:mfa\\/([\\w+=,.@-]+)*|automatic",
    "inputs": [
      {
        "prefix": [
          "arn:aws:iam::0:mfa/a"
        ],
        "suffix": "m:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arn:aws:iam::0:mfa/-"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      },
      {
        "prefix": [
          "arn:aws:iam::0:mfa/a"
        ],
        "suffix": "0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arn:aws:iam::0:mfa/+="
        ],
        "suffix": "\u0000",
        "pump": [
          "w="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\\"[^\\\"]*\\\")|[^ ])((\\\"[^\\\"]*\\\")*[^ ]?)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": " \"\" ",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": " ",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": " ",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": " ",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+",
    "inputs": [
      {
        "prefix": [
          "A["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "A\\",
        "pump": [
          "\t[][]"
        ]
      },
      {
        "prefix": [
          "A["
        ],
        "suffix": "\t\t  \t\t  \t  \t\n\t\r\r\t\r\t\t",
        "pump": [
          "\t\t  "
        ]
      },
      {
        "prefix": [
          "A["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "]A",
        "pump": [
          "\t[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\w+\\s*\\$\\w+\\s*=(.|\\s)*?;",
    "inputs": [
      {
        "prefix": [
          "a $a="
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a$a="
        ],
        "suffix": "$a\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "a $a="
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "a$a="
        ],
        "suffix": "=",
        "pump": [
          "\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\u0000",
        "pump": [
          "\\(()"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\(()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^-{3}((.|\\n)*)-{3}",
    "inputs": [
      {
        "prefix": [
          "---"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "-\n--",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\$\\{)(?:[[:alpha:]\\$]|::)(?:[[:alnum:]\\$]|::)*(\\})",
    "inputs": [
      {
        "prefix": [
          "${a"
        ],
        "suffix": "${",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": ":::::::::::::::::::::::",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "$",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "::::::::::::m::::::::num::::",
        "pump": [
          "::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "«([^»\\\\]+|\\\\{2}|\\\\.)*»",
    "inputs": [
      {
        "prefix": [
          "\\xff"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "�a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "«Y7_«Y7_r8R'C^n\rBJ",
        "pump": [
          "«Y7_"
        ]
      },
      {
        "prefix": [
          "\\xff"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "�a"
        ],
        "suffix": "\\�\\�",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "«2=x«2=x>+aotk7\r+l",
        "pump": [
          "«2=x"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *\\'((?:\\\\.|[^\\'])*)\\' *",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": " 'a''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9]+_?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "__",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "zsbizsbivzsbivbdqn)",
        "pump": [
          "zsbi"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!-- MarkdownTOC .*?-->\\n+)((?:\\s|.)*?)(\\n+<!-- \\/MarkdownTOC -->)",
    "inputs": [
      {
        "prefix": [
          "<!-- MarkdownTOC -->\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0b"
        ]
      },
      {
        "prefix": [
          "<!-- MarkdownTOC -->\n"
        ],
        "suffix": "kdo",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<!-- MarkdownTOC -->\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0b"
        ]
      },
      {
        "prefix": [
          "<!-- MarkdownTOC -->\n"
        ],
        "suffix": "-",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^deep:|(\\.[^}]+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "}",
        "pump": [
          ".!./"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "}",
        "pump": [
          "\u0000\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "...m.\"...m.\"[~$@;/@.:)_/{/.:$-{`+_|![%~']^={$.\"nMFlfQs\t\rc7mK``OjtO.%\".'.\"[~$@;/@.:)_/{/}",
        "pump": [
          "...m.\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "a]c",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "ape",
        "pump": [
          "@escapes"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Z]+[a-z]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AJDCAJDCRKMRKMCNP0",
        "pump": [
          "AJDC"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "Aa$",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ZZTDZZTDOGMEHHJQVE0",
        "pump": [
          "ZZTD"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n    (?: Q .* (?: \\n | \\r\\n | \\r ) )*\n    Q \\s+ [\\w:\\.|-]* \\s+ ( \\d+ ) \\s+ ( [\\w\\.-]+ ) \\s+ ( \\d+ ) \\s+ \\( ( \\d+ ) \\) \\s* (?: \\n | \\r\\n | \\r )\n    Q \\s+ Consensus \\s+ \\d+ \\s+ [\\w\\.~-]+ \\s+ \\d+ \\s+ \\( \\d+ \\) \\s* (?: \\n | \\r\\n | \\r )\n    \\s* [ \\.\\-+|=]* (?: \\n | \\r\\n | \\r )\n    T \\s+ Consensus \\s+ \\d+ \\s+ [\\w\\.~-]+ \\s+ \\d+ \\s+ \\( \\d+ \\) \\s* (?: \\n | \\r\\n | \\r )\n    T \\s+ \\w+ \\s+ ( \\d+ ) \\s+ ( [\\w\\.-]+ ) \\s+ ( \\d+ ) \\s+ \\( ( \\d+ ) \\) \\s* (?: \\n | \\r\\n | \\r )\n    (?: T .* (?: \\n | \\r\\n | \\r ) )*\n    (?: Confidence .* (?: \\n | \\r\\n | \\r ))?\n    ",
    "inputs": [
      {
        "prefix": [
          "    "
        ],
        "suffix": " a ",
        "pump": [
          " Q   \r   Q   \r  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: {4}|\\t).*\\S.*\\n((?: {4}|\\t).*\\n)*",
    "inputs": [
      {
        "prefix": [
          "\ta\n"
        ],
        "suffix": "   ",
        "pump": [
          "\t\n\t\n"
        ]
      },
      {
        "prefix": [
          "\ta\n"
        ],
        "suffix": " ",
        "pump": [
          "\t\n\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(git version\\s*)?((\\.?\\d+)+).*",
    "inputs": [
      {
        "prefix": [
          ".0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ".0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<head>((.|\\n)*)<\\/head>",
    "inputs": [
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "ead",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "ea<head",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(((((\\*)|(/*)|(-*))(\\s*)%([aAbBdeHIjmMLpSUwWyYZ]{1}))+)|((\\s*)%([cxX]{1})))$",
    "inputs": [
      {
        "prefix": [
          "*%A"
        ],
        "suffix": "\\x00",
        "pump": [
          "%A"
        ]
      },
      {
        "prefix": [
          "%a"
        ],
        "suffix": "\t*",
        "pump": [
          "\t%aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "%a%a%a%a%a%a%a%a%a\n%a%a %a%a%a-",
        "pump": [
          "%a%a%a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\f\\d.+?;)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\f",
        "pump": [
          "\\f0a;\\f0a;"
        ]
      },
      {
        "prefix": [
          "\fd\u0000;\fd\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ";\fd\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "\\f0a;\\f0a;"
        ]
      },
      {
        "prefix": [
          "\fd\u0000;\fd\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ";\fd\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\w\\:\\\\(.+\\\\)*",
    "inputs": [
      {
        "prefix": [
          "a:\\"
        ],
        "suffix": "a",
        "pump": [
          "a\\a\\"
        ]
      },
      {
        "prefix": [
          "a:\\"
        ],
        "suffix": "\\a:$",
        "pump": [
          "a\\a\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\u001b\\[(\\d+;?)+m",
    "inputs": [
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ƻ[0"
        ],
        "suffix": "ƻ",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": "860786079178523755",
        "pump": [
          "8607"
        ]
      },
      {
        "prefix": [
          "\\x1b[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ƻ[0"
        ],
        "suffix": "0ƻ[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "m\u001b["
        ],
        "suffix": "529352936993557244",
        "pump": [
          "5293"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Z]([A-Z\\d$]+_?)*[A-Z\\d$]$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "A$"
        ],
        "suffix": "$__",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AAKAAAKAAAKAS4KAAA_",
        "pump": [
          "AAKA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*[\\\"|\\']([^\\\"\\']+)[\\\"|\\']\\s*([^\\[]*)(\\[.*\\]\\s*)*",
    "inputs": [
      {
        "prefix": [
          "\"a\""
        ],
        "suffix": "a]|[",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\s*import.*;\\s*)*)(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\timport",
        "pump": [
          "\timport;import;"
        ]
      },
      {
        "prefix": [
          "import"
        ],
        "suffix": "",
        "pump": [
          ";import;import"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s--env\\s([^\\s]+)+",
    "inputs": [
      {
        "prefix": [
          "\t--env\ta"
        ],
        "suffix": "en\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "s--envs\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000"
        ]
      },
      {
        "prefix": [
          "\t--env\ta"
        ],
        "suffix": "--\t-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "s--envs\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:.|\\n)*<html[^>]*>\\s*)((?:.|\\n)*?)(\\s*<\\/html>)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ml<ht",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m<htm",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<title(\\s+[^>]+)*>(.*)<\\/title\\s*>",
    "inputs": [
      {
        "prefix": [
          "<title"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<title"
        ],
        "suffix": "<titl",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<titles\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "<title\n<"
        ],
        "suffix": "\ne\n\r\ne\n\r\r\r\t\t \t\n    ",
        "pump": [
          "\ne\n\r"
        ]
      },
      {
        "prefix": [
          "<title"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<title"
        ],
        "suffix": "it",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<titles\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z]+(\\_*[a-zA-Z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a0_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "FmrBFmrByESyGZpxu^",
        "pump": [
          "FmrB"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a0_$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "JkM1JkM17jq8IU2pi\nU",
        "pump": [
          "JkM1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z]+[0-9]*)+(\\.[a-zA-Z]+[0-9]*)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A\u0000Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aAa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AAa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[\\w$]+(?:\\.[\\w$]+)*|\"(?:[^\"]|\\.)*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a.\"\"",
        "pump": [
          "."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-?(?:(?:[a-zA-Z_]|[^\\x00-\\x7F]|\\\\(?:\\$|\\n|[0-9a-fA-F]{1,6}\\s?))(?:[a-zA-Z_0-9\\-]*|\\\\(?:\\$|\\n|[0-9a-fA-F]{1,6}\\s?))*)",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "-\\a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "\n\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "-\\a",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#\\{\\{([A-Z_$?]|[a-z_0-9$?]|\\.)+\\}",
    "inputs": [
      {
        "prefix": [
          "#{{a"
        ],
        "suffix": "",
        "pump": [
          "$"
        ]
      },
      {
        "prefix": [
          "#{{"
        ],
        "suffix": "{#",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "#{{a"
        ],
        "suffix": "",
        "pump": [
          "$"
        ]
      },
      {
        "prefix": [
          "#{{"
        ],
        "suffix": ".\u0000#{{",
        "pump": [
          "$$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\.+\\/*)+$",
    "inputs": [
      {
        "prefix": [
          "."
        ],
        "suffix": "!",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "#",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[uU][rR][lL]\\(\\s*\\'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\\'\\r\\n])+)\\'",
    "inputs": [
      {
        "prefix": [
          "url(']"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "URL('"
        ],
        "suffix": "a",
        "pump": [
          "\\$\\$"
        ]
      },
      {
        "prefix": [
          "URL'\u00000a"
        ],
        "suffix": "",
        "pump": [
          "a0a"
        ]
      },
      {
        "prefix": [
          "^uRL('"
        ],
        "suffix": "\\+/$^\\\\+/$^\\+/$^;:^]@!@?;$$}>^0-90\tlblbuRL90\tlb\\00-90\tlblb-^0-90\tlblbuRL",
        "pump": [
          "\\+/$^\\"
        ]
      },
      {
        "prefix": [
          "url('v"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "URL('"
        ],
        "suffix": "a\tU'aURL",
        "pump": [
          "\\$\\$"
        ]
      },
      {
        "prefix": [
          "URL'\u00000s"
        ],
        "suffix": "",
        "pump": [
          "a0s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((.*?)((\\.[a-zA-Z]{1}.*?\\))+))",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          ".a).a)"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a.",
        "pump": [
          ".a).a)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.|\\n)*%>",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "%",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9\\-',\\/ ]+)+$",
    "inputs": [
      {
        "prefix": [
          " "
        ],
        "suffix": "\\x00",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          " a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "z0-9z0-9aa-za-z0-9\\",
        "pump": [
          "z0-9"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*%node_condition%((?:.|[\\s\\S])*?)%(.*?)%(\\d+)%\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*%node_condition%"
        ],
        "suffix": "",
        "pump": [
          "&"
        ]
      },
      {
        "prefix": [
          "/*%node_condition%"
        ],
        "suffix": "it",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%node_condition%S"
        ],
        "suffix": "",
        "pump": [
          "sS"
        ]
      },
      {
        "prefix": [
          "/*%node_condit"
        ],
        "suffix": "ion%ion%\\/\\*%node_con",
        "pump": [
          "ion%"
        ]
      },
      {
        "prefix": [
          "/*%node_condition%"
        ],
        "suffix": "",
        "pump": [
          "&"
        ]
      },
      {
        "prefix": [
          "/*%node_condition%"
        ],
        "suffix": "i",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%node_condition%S"
        ],
        "suffix": "",
        "pump": [
          "sS"
        ]
      },
      {
        "prefix": [
          "/*%node_condit"
        ],
        "suffix": "ion%ion%%\\/\\*%node_co",
        "pump": [
          "ion%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:(?:(?:\\||\\+)(?:[ :]*\\-+[ :]*)(?:\\||\\+))|(?:(?:[ :]*\\-+[ :]*)(?:\\||\\+)(?:[ :]*\\-+[ :]*))|(?:(?:[ :]*\\-+[ :]*)(?:\\||\\+))|(?:(?:\\||\\+)(?:[ :]*\\-+[ :]*)))+)$",
    "inputs": [
      {
        "prefix": [
          "|-"
        ],
        "suffix": "\\x00",
        "pump": [
          "-+-+-+--+"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-++ ",
        "pump": [
          "|-+|--+"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "|-|-|-|-|-|-|-|-|-|-|--|--|--|-|:",
        "pump": [
          "|-|-|-|-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[([a-zA-Z0-9]+(, )?)+]",
    "inputs": [
      {
        "prefix": [
          "[0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "[a[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "VxIBVxIBHXNBRMLNDB",
        "pump": [
          "VxIB"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": ", ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "S["
        ],
        "suffix": "UsmoUsmojPztIJdacy",
        "pump": [
          "Usmo"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-zA-Z]+\\s*)+)(\\s[0-9]+\\s[0-9]+)$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AAs"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "{PrW\r"
        ],
        "suffix": "tkrxtkrxYBpbiR",
        "pump": [
          "tkrx"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "SBWWSBWWVKjkrkUqDd",
        "pump": [
          "SBWW"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!DOCTYPE (\\w(.|\\n)*)\">",
    "inputs": [
      {
        "prefix": [
          "<!DOCTYPE 0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!DOCTYPE a"
        ],
        "suffix": "E",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!DOCTYPE 0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!DOCTYPE a"
        ],
        "suffix": "C\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|contiki)[\\/\\s-]?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "qnx\ta"
        ],
        "suffix": "m\ttable",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "qnx.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "qnx\ta"
        ],
        "suffix": "m.palm\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "qnx.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+[.|\\w])*@\\[?(\\w+[.])*\\w+\\]?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "A00."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "F6OcF6OcHb9RaJYFh1lyLE4",
        "pump": [
          "F6Oc"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "A00."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "]@$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "RGBgksRGBgkseRcOGbHNBAAL",
        "pump": [
          "RGBgks"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([[:alnum:]]|.)+:([[:alnum:]]|.)+:([[:alnum:]]|.)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000n"
        ],
        "suffix": "",
        "pump": [
          ":n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000:"
        ],
        "suffix": "",
        "pump": [
          "::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'((?:[^']* (?:''|\\\\')* [^']*)* [^\\\\']?)',?",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ",a",
        "pump": [
          "a  "
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "  \u0000"
        ]
      },
      {
        "prefix": [
          "'  \r\r\n\r\r\t\t\r\r\t\n \n\r\t\t\n\n\r\r\t\n\t"
        ],
        "suffix": "\t\t\n   \t\t\n   471754555195770971666779539671",
        "pump": [
          "\t\t\n   "
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "a  "
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "  \u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "  \\  \t  \\  \t\t\n \r\r\r\t\r \t\t\t\r\r \t \n  \t  \t\n\t\t\n\r\n\t\r",
        "pump": [
          "  \\  \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*%(nodes_(?:global|main))%\\*\\/(?:.|[\\s\\S])*?\\/\\*%nodes_(?:global|main)_end%\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*%nodes_global%*/"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "/*%nodes_main%*/"
        ],
        "suffix": "%*/*%no",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%nodes_main/s"
        ],
        "suffix": "",
        "pump": [
          "Ss"
        ]
      },
      {
        "prefix": [
          "/*%nodes_global%*/"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "/*%nodes_main%*/"
        ],
        "suffix": "o",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "%nodes_main/s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "/*%nodes_mai"
        ],
        "suffix": "n%*/n%*/?:global|main",
        "pump": [
          "n%*/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))*\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "0."
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\t.+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "74967496843550163\\",
        "pump": [
          "7496"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\|\\/)?(.+(\\\\|\\/))*(.+?S\\d{1,3}[.-_ ]?[ED]\\d{1,3}.+)\\.(.+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "]///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a//",
        "pump": [
          "a\\"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "|/\u0000|/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\\(\\.)\\E\\\\(\\.)\\E\\[1\\+\\|\b\\)}\\\\+1\b([\\/d\b",
        "pump": [
          "\\\\(\\.)\\E"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "]///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a//aS0/",
        "pump": [
          "a\\"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "|/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "/`!f/,o\\.uBc9UD.\\ (D)7\\+C-\\t.jlcEy |+tc"
        ],
        "suffix": "+\\+\\f.\\up\\+\\+\\f.\\up\\\\s.a",
        "pump": [
          "+\\+\\f.\\up\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((.|\\n)*?)B((.|\\n)*?)D",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "D\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "D\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-z]:(?:[\\\\/][^:]*)+[\\\\/]([^:]*:)",
    "inputs": [
      {
        "prefix": [
          "A:/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "a:"
        ],
        "suffix": "a/a::",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "A://"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "Qf:"
        ],
        "suffix": "\\\\\\/\\\\\\/{ps/{psbZ 4,z>Uc\b\b+\\/{psbZ 4,z\b\t\b\r\bV0`sbZ 4,z>Uc\b\b+zg;'/{psbZ/?\t\r\n\n\n\t\t\r\n \r \n\n\n\n\n\n\n\n \n\r ",
        "pump": [
          "\\\\\\/"
        ]
      },
      {
        "prefix": [
          "A:/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "a:"
        ],
        "suffix": "a\\:\\",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "A://\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          ":^:/^\\JgDFfzpOvM7gvx/\\JgDFfzpOOBk2vM7g/\\JgDFfzpOOBPQWlGE"
        ],
        "suffix": "\\\\//\\\\//\\MEfyHPB",
        "pump": [
          "\\\\//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: *\\/\\/.*\\s*)* *lodash\\.isPlainObject *= *.+\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " // //"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.",
        "pump": [
          " //\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "//O"
        ],
        "suffix": " ////  //// lodash.isPlainObject=H;H.hsadol //// lodash.isPlainObnOb/OnialPsi.hs //// d",
        "pump": [
          " //// "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z0-9\\.\\*]+\\s?)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "\u0000",
        "pump": [
          "**"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "**a"
        ],
        "suffix": "\u0000",
        "pump": [
          "*a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(((https?)|(ftp)):\\/\\/([\\-\\w]+\\.)+\\w{2,3}(\\/[%\\-\\w]+(\\.\\w{2,})?)*(([\\w\\-\\.\\?\\\\\\/+@&#;`~=%!]*)(\\.\\w{2,})?)*\\/?)",
    "inputs": [
      {
        "prefix": [
          "ftp://a.aa"
        ],
        "suffix": "s://",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ftp://a.a"
        ],
        "suffix": "ps://",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<[!][-][-](.|\\s){5,}?[-][-]>",
    "inputs": [
      {
        "prefix": [
          "<!--    !"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--\t\t\t\t"
        ],
        "suffix": "!",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000\u0000\u0000\u0000\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<<!-- \r"
        ],
        "suffix": "          \n\t\r \t\t\n\n\r\r",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "<!--    ="
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--\t\t\t\t"
        ],
        "suffix": "-><--<!--",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000\u0000\u0000\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "><!-- \n \n"
        ],
        "suffix": "\t\r\t\r\t\t\t\r\t\r\t\t \n\t \r1dzx?qs<--<<!> \n ",
        "pump": [
          "\t\r\t\r\t\t"
        ]
      },
      {
        "prefix": [
          "<!--!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "<!--\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "$<!--"
        ],
        "suffix": "$\t\t\t\n\t$\t\t\t\n\t\t\b\t\t\b\r\b\n\n\r\b\r\b\n\n\n\n\r\b\r\t\b\b\b\t\r\n\n\t\t\n\r",
        "pump": [
          "$\t\t\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[\\\\w]\\\\:|\\\\.\\\\/)([a-z_\\\\-\\\\s0-9\\\\.]+(?:\\\\\\\\|\\\\/)?)+$",
    "inputs": [
      {
        "prefix": [
          "w\\:-"
        ],
        "suffix": "!",
        "pump": [
          "-\\\\"
        ]
      },
      {
        "prefix": [
          "\\\\:a"
        ],
        "suffix": "\\\\$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "./\t\t0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\\\\\\/"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\:",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "FFI::Type::Builtin:(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "FFI::Type::Builtin:a"
        ],
        "suffix": "e::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "FFI::Type::Builtin:w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "FFI::Type::Builtin:a"
        ],
        "suffix": "FI:FF",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "FFI::Type::Builtin:w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Service Information \"read-all\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "inputs": [
      {
        "prefix": [
          "Service Information \"read-all\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"read-all\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Service Information \"read-all\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"read-all\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:<(.|\\n)*?>)",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^:\"]+|\"[^\"]*\")+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\":\":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+=]*)*(\\.(jpeg|jpg|gif|png|webp))$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/00.00.00",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "a\u0000a-"
        ],
        "suffix": "",
        "pump": [
          "a-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "htochtocxnexazcondk",
        "pump": [
          "htoc"
        ]
      },
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/%.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "a\u0000a/a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "8pgp8pgpejpgpegpeg.jp",
        "pump": [
          "8pgp"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.(startProcessInstanceById)(\\()([a-z0-9_.]+)(,.?)*(\\n?)([a-z0-9_.()])*(,?)([a-z0-9_.()])*\\)",
    "inputs": [
      {
        "prefix": [
          ".startProcessInstanceById(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceById(a"
        ],
        "suffix": ".st",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceById.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceById(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceById(a"
        ],
        "suffix": "tProc",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceById.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w]+=[\\d]+[a-z]*&?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a=0a"
        ]
      },
      {
        "prefix": [
          "w=dw=da"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww=da"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a=0a"
        ]
      },
      {
        "prefix": [
          "w=dw=d"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww=d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\/\\*(.|\\r|\\n)*?\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\n",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*#\\s+(?:pylava:)\\s*((?:[\\w_]*=[^:\\n\\s]+:?)+)",
    "inputs": [
      {
        "prefix": [
          "#\tpylava:"
        ],
        "suffix": "\t#",
        "pump": [
          "a=aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(hurd|linux)\\s?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "hurd\ta"
        ],
        "suffix": "in\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "hurdw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "hurd\ta"
        ],
        "suffix": "ur$li",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "hurd."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\/\\*(.|[\\r\\n])*?\\*\\/)?\\s*[\\da-zA-Z_$]+\\s*\\(([\\s\\S]*)\\)\\s*;?\\s*$",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "REFERENCES.+\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)",
    "inputs": [
      {
        "prefix": [
          "REFERENCES!("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "REFERENCESa(a"
        ],
        "suffix": "C",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "REFERENCES\u0000\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "SREFERENCES.("
        ],
        "suffix": "CpV;CpV;Xsbd58TR~O",
        "pump": [
          "CpV;"
        ]
      },
      {
        "prefix": [
          "REFERENCESR("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "REFERENCESa(a"
        ],
        "suffix": "S)RE",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "REFERENCES\u0000\u0000\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "aREFERENCES.+("
        ],
        "suffix": "`H1_`H1_^Ds+}z>j\b:",
        "pump": [
          "`H1_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "NEURON\\s*\\{(\\s*[\\w+,]\\s*)*\\s\\}?",
    "inputs": [
      {
        "prefix": [
          "NEURON{"
        ],
        "suffix": "EUR",
        "pump": [
          "\ta\t"
        ]
      },
      {
        "prefix": [
          "NEURON{"
        ],
        "suffix": "EUa$NEU",
        "pump": [
          "\ta\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|_|.|:| )+[\\[\\/][\\'\\\"].*$",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          " "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "dUoqdUoq/28jvLJQ?_",
        "pump": [
          "dUoq"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(@.+?/)*?\\Q$_[0]\\E$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "@!/@//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(\\x00"
        ]
      },
      {
        "prefix": [
          "'\na"
        ],
        "suffix": "'\"(\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "Q'"
        ],
        "suffix": "Gp59Gp59Q+k \tdo~K ",
        "pump": [
          "Gp59"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "(\\x00"
        ]
      },
      {
        "prefix": [
          "'\na"
        ],
        "suffix": ")(\\'\"\n\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "7'"
        ],
        "suffix": "POVMPOVMj<{yA=Q;]q",
        "pump": [
          "POVM"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([-+]?\\d+(?:[.,]\\d+)?)\\s*([a-zA-Z]+)(?:\\s*(?:,|and)\\s*)*",
    "inputs": [
      {
        "prefix": [
          "+0a"
        ],
        "suffix": "\t++",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          "dAand"
        ],
        "suffix": "\u0000",
        "pump": [
          "sand"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<(?:[^<>]+(?:\"[^\"]*\"|'[^']*')?)+>)",
    "inputs": [
      {
        "prefix": [
          "<!"
        ],
        "suffix": "",
        "pump": [
          "?\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\">a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<\u0000\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": ":`_a:`_aTX(LLbQiB",
        "pump": [
          ":`_a"
        ]
      },
      {
        "prefix": [
          "<!"
        ],
        "suffix": "",
        "pump": [
          "?\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\">a'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<\u0000\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "_M.3_M.3\nl,@c#\tMW",
        "pump": [
          "_M.3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^# \\d+ \"/usr/local/lib/.*\\n(([^#\\n].*)?\\n)*",
    "inputs": [
      {
        "prefix": [
          "# 0 \"/usr/local/lib/\n"
        ],
        "suffix": "/l",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<(!?[-A-Za-z0-9_]+)((?:\\s+[\\w\\-\\:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<!a"
        ],
        "suffix": "\ta\t",
        "pump": [
          "\ta=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"",
    "inputs": [
      {
        "prefix": [
          "b\""
        ],
        "suffix": "",
        "pump": [
          "\\x00"
        ]
      },
      {
        "prefix": [
          "b\""
        ],
        "suffix": "b\\",
        "pump": [
          "\\xaaa"
        ]
      },
      {
        "prefix": [
          "b\"\\xdar\\xdah\\xdah\\xca("
        ],
        "suffix": "\\xda\\xda\\xca\\xda\\xda\\xca\\xacshok\\xdahwojcmedtcgi8|^?~*$`?]`~*+:._$$",
        "pump": [
          "\\xda\\xda\\xca"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\\\|\\n|\\r|\\t)*\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n)\n",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\\\\\\\\\\\\\\\\\\\\\\"
        ],
        "suffix": "\\\r\r\t \t\\\r\r\t \t\n\n   \t\n",
        "pump": [
          "\\\r\r\t \t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\r\t\n\n\r\t\n\n\t\t\n\t\t\r\n\t",
        "pump": [
          "\n\r\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<br\\s*/?>\\s*\\n*){3,}",
    "inputs": [
      {
        "prefix": [
          "<br/><br/>"
        ],
        "suffix": "/",
        "pump": [
          "<br/>\n"
        ]
      },
      {
        "prefix": [
          "<br/><br/>"
        ],
        "suffix": "<br<br/>",
        "pump": [
          "<br/>\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<br>>",
        "pump": [
          "<br/>\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]*[-_]?[a-zA-Z0-9]+)*@([a-zA-Z0-9]*[-_]?[a-zA-Z0-9]+)+[\\.][A-Za-z]{2,3}([\\.][A-Za-z]{2})?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "a@a-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0A"
        ],
        "suffix": "",
        "pump": [
          "00A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "VMAPVMAPTlabOk",
        "pump": [
          "VMAP"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "a0--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3UJq3UJqkgUHGI",
        "pump": [
          "3UJq"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^-]*[A-Z???a-z????0-9][^-]*)(-[^-]*[A-Z???a-z????0-9][^-]*)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a--",
        "pump": [
          "-aa"
        ]
      },
      {
        "prefix": [
          "0-0-"
        ],
        "suffix": "",
        "pump": [
          "00-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a-",
        "pump": [
          "-aa"
        ]
      },
      {
        "prefix": [
          "0-0-\u0000"
        ],
        "suffix": "",
        "pump": [
          "?-\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([^ \"'>=\\^]+(\\s*=\\s*((\"[^\"]*\")|('[^']*')|([^ \\t\\n\"']+)))?\\s+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"",
        "pump": [
          "\\x0e \\x09=\"\"\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\u000b\t>'",
        "pump": [
          "a\t=a\t"
        ]
      },
      {
        "prefix": [
          "xmsf~\\4R$ Zngd)_Pj7@qK|y(|"
        ],
        "suffix": "c\tOs\r\t$@Z\rc\tOs\r\t$@Z\rL%U(\r\ne8s@\bW]mYuQw_?YB\n]o~8O)(;UEWg8I(\nT(t\b3Ir_zH4ofnzz#\ndZTap",
        "pump": [
          "c\tOs\r\t$@Z\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w+(?:\\.\\w+\\(.*?\\))+$",
    "inputs": [
      {
        "prefix": [
          "a.a()"
        ],
        "suffix": "/",
        "pump": [
          ".a().0()"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a.a",
        "pump": [
          ".a().a()"
        ]
      },
      {
        "prefix": [
          "w\u0000w\u0000ww"
        ],
        "suffix": "",
        "pump": [
          "w\u0000ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "### GENERATED BY ROBBYRUSSELL(.|\\n)*### GENERATED BY ROBBYRUSSELL",
    "inputs": [
      {
        "prefix": [
          "### GENERATED BY ROBBYRUSSELL"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "### GENERATED BY ROBBYRUSSELL"
        ],
        "suffix": "###",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "### GENERATED BY ROBBYRUSSELL"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "### GENERATED BY ROBBYRUSSELL"
        ],
        "suffix": "O",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "crmo/0._0"
        ],
        "suffix": "r",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "crmo/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "crmo/0._0"
        ],
        "suffix": "hr",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "crmo/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(:?[^\\\\\"]|\\\\(:?[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          ":;"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "u",
        "pump": [
          ":a"
        ]
      },
      {
        "prefix": [
          "\"u^]~;;{:}"
        ],
        "suffix": ">:?:>\b::>:?:>\b::@::{>;?@i\b;<<:?@\b>@<;|;{|=?:>\b^]>K<~;;{:}>|>\b;",
        "pump": [
          ">:?:>\b::"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          ":;"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "ua",
        "pump": [
          ":a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9A-Z]+[-|\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00@0\u000000"
        ],
        "suffix": "",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "EqmDEqmDTk9YLcWM7x",
        "pump": [
          "EqmD"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a|",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00@0\u0000A"
        ],
        "suffix": "",
        "pump": [
          "00\u0000A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "lXqalXqa0ArRA-ZrRDx@",
        "pump": [
          "lXqa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*\\n)*\\t([^:]+):([0-9]+): (.*)\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0\n:0\n\t",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0\n:0",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"([^\\\\\\\"]*(\\\\.)?)*\")|('([^\\\\\\']*(\\\\.)?)*')|(\\/{2,}.*?(\\r|\\n))|(\\/\\*(\\n|.)*?\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "/*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "e1Qfe1Qfs8u\n1_2EQ",
        "pump": [
          "e1Qf"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\#"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "/*'a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "(:Hg(:HgQ[&/cs2_X",
        "pump": [
          "(:Hg"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "/*\"a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "Hg\r]Hg\r]R%DxByI&\r",
        "pump": [
          "Hg\r]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((database|dbname)(\\w)*=(\\w)+((-)*(\\w)*)*)",
    "inputs": [
      {
        "prefix": [
          "dbname=a"
        ],
        "suffix": "-=",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "dbname=a"
        ],
        "suffix": "b$dbnamedb",
        "pump": [
          "--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'((?:\\\\.|[^'])*)'\\s*",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9]+([_\\.\\-]{1}[a-z0-9]+)*){1}([@]){1}([a-z0-9]+([_\\-]{1}[a-z0-9]+)*)+(([\\.]{1}[a-z]{2,6}){0,3}){1}$",
    "inputs": [
      {
        "prefix": [
          "a-a@0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "a0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0@00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "za@"
        ],
        "suffix": "za0aza0a0z0az0zz0-",
        "pump": [
          "za0a"
        ]
      },
      {
        "prefix": [
          "a-a@0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a@a"
        ],
        "suffix": "a0-.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0@00-00"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-00"
        ]
      },
      {
        "prefix": [
          "a9@"
        ],
        "suffix": "jazzjazz0a0jazz0-",
        "pump": [
          "jazz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "edga/0._0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "edga/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "edga/0._0"
        ],
        "suffix": "0_a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "edga/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n3 OBJE(?:\\n[4-9].+)+",
    "inputs": [
      {
        "prefix": [
          "\n3 OBJE"
        ],
        "suffix": "a",
        "pump": [
          "\n4a\n4a"
        ]
      },
      {
        "prefix": [
          "\n3 OBJE"
        ],
        "suffix": "a",
        "pump": [
          "\n4a\n4a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((-- |#)[^\\n]*\\n|/\\*.*?\\*/)*(DROP|CREATE)[[:space:]]+(IF EXISTS[[:space:]]+)?(TABLE|DATABASE)[[:space:]]+(.+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "-- \n/**/#*/DROPaIF E",
        "pump": [
          "-- \n/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z0-9]+)*=([rwadDxtXUCcT]+)/([a-zA-Z0-9]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "="
        ],
        "suffix": "arwaarwadDxtXUCcT",
        "pump": [
          "arwa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "="
        ],
        "suffix": "arwaarwadDxtXUCcT",
        "pump": [
          "arwa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([-\\*:\\.#_\\w]+\\s*)+\\{",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a{\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "by..by..*DUVEvTa07",
        "pump": [
          "by.."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*</?[^>]*>)+\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t>>",
        "pump": [
          "\t</>"
        ]
      },
      {
        "prefix": [
          "<><"
        ],
        "suffix": "",
        "pump": [
          "/><"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<\t",
        "pump": [
          "\t</>"
        ]
      },
      {
        "prefix": [
          "<><"
        ],
        "suffix": "",
        "pump": [
          "/><"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "!\\[((?:[^\\]]|\\\\\\]|\\\\\\[)*?)\\]\\(((?:[^\\)]|\\\\\\)|\\\\\\()+?)\\)",
    "inputs": [
      {
        "prefix": [
          "!["
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "!a)a\\",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "]!a)!",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "\\![![]"
        ],
        "suffix": "(]\\(]\\(\\(\\(]\\(]\\(\\(\\\\(]\\(\\(\\(][!!]\\(\\83IPRLCLNPKXKCYS",
        "pump": [
          "(]\\(]\\(\\(\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Name servers in the listed order:\\n\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Name servers in the listed order:\\x0a\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name servers in the listed order:\n\n"
        ],
        "suffix": "er",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Name servers in the listed order:\\x0a\\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name servers in the listed order:\n\n"
        ],
        "suffix": "r:\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<pre(?:\\s+(?:[^\">]*|\"[^\"]*\")*)?>([\\S\\s]+?)<\\/pre\\s*>",
    "inputs": [
      {
        "prefix": [
          "<pre\\x09"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<pre\t"
        ],
        "suffix": "e\t<><\"<></p",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<pres\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "/<"
        ],
        "suffix": "pre\rpre\rMpN{Z)PR\rxyth",
        "pump": [
          "pre\r"
        ]
      },
      {
        "prefix": [
          "<pre\\x09"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<pre\t"
        ],
        "suffix": "e<p><\"<><pr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<pres\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          "\"<"
        ],
        "suffix": "pre\tpre\tnWHdEBpj`\\4H3",
        "pump": [
          "pre\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[$_A-Za-z]{1}[$_\\w]*((\\.[$_A-Za-z]{1}[$_\\w]*)|(\\[[$_.\\w\\[\\]]+\\])|(\\['.*'\\])|(\\[\".*\"\\]))*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "!",
        "pump": [
          ".a[$][]]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a['a",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[_.0-9a-z-]+@([0-9a-z][0-9a-z-]+.)+[a-z]{2,3}$",
    "inputs": [
      {
        "prefix": [
          "a@aa{"
        ],
        "suffix": "",
        "pump": [
          "a--aa{"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "a$",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          "-@0-\u00000-0"
        ],
        "suffix": "",
        "pump": [
          "a0-0"
        ]
      },
      {
        "prefix": [
          ".@0-"
        ],
        "suffix": "9a56389a563816037740937039493",
        "pump": [
          "9a5638"
        ]
      },
      {
        "prefix": [
          "a@aa{"
        ],
        "suffix": "",
        "pump": [
          "a--aa{"
        ]
      },
      {
        "prefix": [
          "a@"
        ],
        "suffix": "0",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          "-@0-\u00000--"
        ],
        "suffix": "",
        "pump": [
          "a0--"
        ]
      },
      {
        "prefix": [
          "d@09a-"
        ],
        "suffix": "4365274365272561913264265251",
        "pump": [
          "436527"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(-?\\d+(?:[.,]\\d+)?)\\s*([a-zA-Z]+)(?:\\s*(?:,|and)\\s*)*",
    "inputs": [
      {
        "prefix": [
          "-0a"
        ],
        "suffix": "an.",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          "dA,s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "ckeditor\\/assets\\/((\\w+\\/?)*)",
    "inputs": [
      {
        "prefix": [
          "ckeditor/assets/a"
        ],
        "suffix": "to//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ckeditor/assets/ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "ckeditor/assets/a"
        ],
        "suffix": "e$cked",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ckeditor/assets/ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*?((\\d+)(\\s*(,|-)\\s*)?)+\\s*?$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ",,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "64096409402764094D",
        "pump": [
          "6409"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```test\\r?\\n((.+(\\r?\\n)*)+)```",
    "inputs": [
      {
        "prefix": [
          "```test\\x0d\\x0a!"
        ],
        "suffix": "",
        "pump": [
          "a\\x0a"
        ]
      },
      {
        "prefix": [
          "```test\r\na"
        ],
        "suffix": "e",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "```test\n"
        ],
        "suffix": ".??_.??__=_-/^**$",
        "pump": [
          ".??_"
        ]
      },
      {
        "prefix": [
          "```test\\x0d\\x0aa"
        ],
        "suffix": "",
        "pump": [
          "a\\x0a"
        ]
      },
      {
        "prefix": [
          "```test\r\na"
        ],
        "suffix": "\r",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "```test\n``"
        ],
        "suffix": "``te``test\\r?\\n",
        "pump": [
          "``te"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?://([-\\w\\.]+)+(:\\d+)?(/([-\\w/_\\.]*(\\?\\S+)?)?)?)",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps:\tht",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "if \\(typeof module \\!\\=\\= 'undefined'\\) \\{(.|\\n)*\\}\\n",
    "inputs": [
      {
        "prefix": [
          "if (typeof module !== 'undefined') {"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "if (typeof module !== 'undefined') {"
        ],
        "suffix": "unde",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "if (typeof module !== 'undefined') {"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "if (typeof module !== 'undefined') {"
        ],
        "suffix": " !",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s{0,3}(?:(?:-+\\s*){3,}|(?:\\*+\\s*){3,}|(?:_+\\s*){3,})$",
    "inputs": [
      {
        "prefix": [
          "   ---"
        ],
        "suffix": "\\x00",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "\t*_",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_______________\t \t\t\t\n\r\t*",
        "pump": [
          "____"
        ]
      },
      {
        "prefix": [
          "_"
        ],
        "suffix": "\\x00",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          "_"
        ],
        "suffix": "\t*_",
        "pump": [
          "__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(zte)-(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "zte-a"
        ],
        "suffix": "za-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "zte-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "zte-a"
        ],
        "suffix": "tz$zt",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "zte-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^s*data:(.+?/.+?(;.+?=.+?)*)?(;base64)?,(.*)s*$",
    "inputs": [
      {
        "prefix": [
          "data:;/0"
        ],
        "suffix": "",
        "pump": [
          ";c==;==>"
        ]
      },
      {
        "prefix": [
          "data:a/a"
        ],
        "suffix": ";a",
        "pump": [
          ";a=a;a=a"
        ]
      },
      {
        "prefix": [
          "data:\u0000/\u0000;\u0000"
        ],
        "suffix": "",
        "pump": [
          "==\u0000;\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*#\\d+(\\.?\\d?)*\\s*",
    "inputs": [
      {
        "prefix": [
          "#0."
        ],
        "suffix": "0.#",
        "pump": [
          "0.."
        ]
      },
      {
        "prefix": [
          "#d\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "d\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([`~]{3,})(\\w+)?\\s*(\\{([^{}]*?|\".*?\"|'.*?')*\\})?\\s*$",
    "inputs": [
      {
        "prefix": [
          "~~~{"
        ],
        "suffix": "",
        "pump": [
          "("
        ]
      },
      {
        "prefix": [
          "```{"
        ],
        "suffix": "`\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "`~`{"
        ],
        "suffix": "`OKA`OKAGPZGUCGTB",
        "pump": [
          "`OKA"
        ]
      },
      {
        "prefix": [
          "~{"
        ],
        "suffix": "",
        "pump": [
          "("
        ]
      },
      {
        "prefix": [
          "`{"
        ],
        "suffix": "`\"{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "`~{"
        ],
        "suffix": "RYQZRYQZJRLIPGALG",
        "pump": [
          "RYQZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>)\\s*|([^\\s<]\\s*)",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=\ta",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\""
        ],
        "suffix": "",
        "pump": [
          "\"sw=\"sw=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]",
    "inputs": [
      {
        "prefix": [
          "!["
        ],
        "suffix": "!\\",
        "pump": [
          "\\[\\]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:/[^\\h]+)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "/\u0000/\u0000"
        ],
        "suffix": "h",
        "pump": [
          "/\u0000/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?:\\/\\/(?:www)?\\.?instagram\\.com\\/p\\/(?:\\w+.)+\\/)",
    "inputs": [
      {
        "prefix": [
          "https://www.instagram.com/p/a{"
        ],
        "suffix": "",
        "pump": [
          "000{"
        ]
      },
      {
        "prefix": [
          "https://.instagram.com/p/"
        ],
        "suffix": "agr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://instagram\u0000com/p/w\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000w"
        ]
      },
      {
        "prefix": [
          "https://www.instagram.com/p/hu"
        ],
        "suffix": "",
        "pump": [
          "000{"
        ]
      },
      {
        "prefix": [
          "https://.instagram.com/p/"
        ],
        "suffix": "s:/http",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://instagram\u0000com/p/w\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000w"
        ]
      },
      {
        "prefix": [
          "http://instagram.com/p/"
        ],
        "suffix": "inNainNaSNrdPfmJRb2L7vM1I",
        "pump": [
          "inNa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--([^-]+|[-][^-]+)*-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          ".!"
        ]
      },
      {
        "prefix": [
          "<!--a"
        ],
        "suffix": "-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!---\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000-\u0000"
        ]
      },
      {
        "prefix": [
          "U<!--"
        ],
        "suffix": "WM<mWM<ma:ABshJ%h|",
        "pump": [
          "WM<m"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          ".!"
        ]
      },
      {
        "prefix": [
          "<!--a"
        ],
        "suffix": "!<a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!---\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000-\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "\r.l\t\r.l\t3e>Hu[uJyI",
        "pump": [
          "\r.l\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<base(\\s[^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<base"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<base"
        ],
        "suffix": "<b>>",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<bases"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<base"
        ],
        "suffix": "\n\n\b\n\n\n\b\n\r\n\t\r\r\n\b\r\t\r\b\t\n",
        "pump": [
          "\n\n\b\n"
        ]
      },
      {
        "prefix": [
          "<base"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<base"
        ],
        "suffix": "as><b",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<bases"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "b<base\t\r\n\b\t\b\r\r\b\n\t\b"
        ],
        "suffix": "\r\r\t\n\r\r\t\n\r\n",
        "pump": [
          "\r\r\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[0-9]+[-+]?)+)?(.+)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0000000009080-0-00-09\n\n",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "epiphany\t0._0"
        ],
        "suffix": "y",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "epiphany/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "epiphany\t0._0"
        ],
        "suffix": "ph",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "epiphany/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d[.\\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz|%){1}?",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "1111111111111110",
        "pump": [
          "1111"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:@)(([a-zA-Z][a-zA-Z0-9_$]*[.]?)+)",
    "inputs": [
      {
        "prefix": [
          "@"
        ],
        "suffix": "$..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "$@",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\[[^=]*\\])+[,]\\s*([^\\[]*)\\]",
    "inputs": [
      {
        "prefix": [
          "[]"
        ],
        "suffix": "",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "],[=",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "[]"
        ],
        "suffix": "",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "],[]",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "[[[[[[][]["
        ],
        "suffix": "[][][][][][][][]][][[][]][]",
        "pump": [
          "[][][][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\*\\s*(.*(?:\\n[^*].*)*)",
    "inputs": [
      {
        "prefix": [
          "*"
        ],
        "suffix": "a",
        "pump": [
          "\na\n\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^']*[A-Z??????????a-z??????????0-9][^']*)('[^']*[A-Z??????????a-z??????????0-9][^']*)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "$''",
        "pump": [
          "'aa"
        ]
      },
      {
        "prefix": [
          "0'0'"
        ],
        "suffix": "",
        "pump": [
          "00'"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$'",
        "pump": [
          "'aa"
        ]
      },
      {
        "prefix": [
          "0'0'\u0000"
        ],
        "suffix": "",
        "pump": [
          "A0'\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)<(([a-zA-Z0-9])+([a-zA-Z0-9_\\.-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+))+>",
    "inputs": [
      {
        "prefix": [
          "<0-@0A"
        ],
        "suffix": "",
        "pump": [
          "A0@-."
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "$<a-",
        "pump": [
          "aa@aa"
        ]
      },
      {
        "prefix": [
          "<0@--0@--0"
        ],
        "suffix": "",
        "pump": [
          "00@--0"
        ]
      },
      {
        "prefix": [
          "<0-@0A"
        ],
        "suffix": "",
        "pump": [
          "A0@-."
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "$",
        "pump": [
          "aa@aa"
        ]
      },
      {
        "prefix": [
          "<0@--0@-_"
        ],
        "suffix": "",
        "pump": [
          "00@-_"
        ]
      },
      {
        "prefix": [
          "Rv<pb@<"
        ],
        "suffix": "pb@tzdgpbzpb@tzdgpbzd<#gpb<pb@tzpbzd<#gp<pb@tzpb<pb@pb@tv<pb@tzd<@<pb@tzzd<p<pbzdpb@pb@tv<pb@tzd",
        "pump": [
          "pb@tzdgpbz"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?://([-\\w\\.]+[-\\w])+(:\\d+)?(/([\\w/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "psa/.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "ps#\thttp",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title>Title<\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "e<",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "e</h",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*BUG:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*BUG:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*BUG:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([\\w_-]*)((\\s*\\[[\\w_-]+\\s*=\\s*(\"([^\\\\\"]*(\\\\.)*)*\"|'([^\\\\']*(\\\\.)*)*'|[^\\[\\]]*)\\])*)\\s*(\\*?)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          " [a='']"
        ]
      },
      {
        "prefix": [
          "[a=\""
        ],
        "suffix": "a[a",
        "pump": [
          "\"][a=\"\""
        ]
      },
      {
        "prefix": [
          "c[rs=\""
        ],
        "suffix": "^*\t\n^*\t\n\b\n\r\n\r\t\n\n\r",
        "pump": [
          "^*\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\?[a-z_](?:\\\\?[a-z0-9_]+)*::\\$[a-z0-9_]+)",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "\\a\\a"
        ],
        "suffix": ":a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "umjwumjwjdakwvownkj",
        "pump": [
          "umjw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^ *x{3,}( *x{3,})* *$",
    "inputs": [
      {
        "prefix": [
          "xxx"
        ],
        "suffix": "\\x00",
        "pump": [
          " xxxxxx"
        ]
      },
      {
        "prefix": [
          "xxx"
        ],
        "suffix": " x ",
        "pump": [
          " xxxxxxx"
        ]
      },
      {
        "prefix": [
          "xxxxxx"
        ],
        "suffix": "\u0000",
        "pump": [
          "xxxxxx"
        ]
      },
      {
        "prefix": [
          "x"
        ],
        "suffix": "\\x00",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          "xx"
        ],
        "suffix": "#",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          "xxx"
        ],
        "suffix": "\u0000",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xxxxxxxxxx xx xxxxxxxq",
        "pump": [
          "xxxx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([1-9][0-9]*|[1-9][0-9]*)(\\s*-\\s*|\\s*,\\s*|))*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t0",
        "pump": [
          "1-1-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "111411149114\t",
        "pump": [
          "1114"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(((.*)*)*x)[ćăĀ]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ")d;B)d;B^ht",
        "pump": [
          ")d;B"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ax",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "z7q<z7q<@[i",
        "pump": [
          "z7q<"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Views.Foo = Backbone.View.extend\\(\\{(.|\\n)*app\\/scripts\\/templates\\/foo.hbs",
    "inputs": [
      {
        "prefix": [
          "Views!Foo = Backbone!View!extend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "mpla",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "ViewsVFoo = BackboneVViewsextend({"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ViewsaFoo = BackboneaViewaextend({"
        ],
        "suffix": "at",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|[^A-Za-z0-9_])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".outer(.|\\n|\\r)*.inner(.|\\n|\\r)*background:\\s*#[fF]+",
    "inputs": [
      {
        "prefix": [
          "!outer"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "aouter"
        ],
        "suffix": "e",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "!outer"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "aouter"
        ],
        "suffix": "\n#Fou",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$\\{(([\\w\\$]+\\.[\\w\\$]*)+)\\}",
    "inputs": [
      {
        "prefix": [
          "${a."
        ],
        "suffix": "",
        "pump": [
          "a.$0."
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "$",
        "pump": [
          "a.a"
        ]
      },
      {
        "prefix": [
          "$${"
        ],
        "suffix": "c.LojTxgIbDkc.LojTxgIbDkxhAITLAkoM.LojTxgIbDkxhAITLAkoMZRUiZSaIZlSohGjkHbaWaHhCfdaJSYhDfxx",
        "pump": [
          "c.LojTxgIbDk"
        ]
      },
      {
        "prefix": [
          "${a."
        ],
        "suffix": "",
        "pump": [
          "a.$0."
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "$.a",
        "pump": [
          "a.a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s+)+D[oD]?",
    "inputs": [
      {
        "prefix": [
          "D\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "DD\t"
        ],
        "suffix": "DD[",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "MMMM"
        ],
        "suffix": "\r\n\r\n\r\n\r\n\r\n\r\n\r\r\n\r\n",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "D\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "MMMM\t"
        ],
        "suffix": "MM[Do\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "MMM"
        ],
        "suffix": "\t\t\n\t\t\t\n\t\n\n\n\n\n\r\r\r\n\r",
        "pump": [
          "\t\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\.?\\d+(\\.?\\d+)?([\\/\\-\\+\\*x]\\d?\\.?\\d+)+$",
    "inputs": [
      {
        "prefix": [
          ".00.0/0"
        ],
        "suffix": "!",
        "pump": [
          "*00"
        ]
      },
      {
        "prefix": [
          ".0"
        ],
        "suffix": "0..",
        "pump": [
          "*00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(.|\\s)*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\t\t\n\t\t\t\t\t\n\t\t\t\r\t\r\t\r\n\b\r\n\r\n\t\b\t\t\n\t\r\t",
        "pump": [
          "\t\t\n\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?::.+?)*,\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":!:;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ta",
        "pump": [
          ":a:a"
        ]
      },
      {
        "prefix": [
          ":\u0000"
        ],
        "suffix": "",
        "pump": [
          ":\u0000:\u0000"
        ]
      },
      {
        "prefix": [
          ":::.+2:::29D::.+?:::29D.+???"
        ],
        "suffix": ":::29::::29:::",
        "pump": [
          ":::29:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":!:;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ta",
        "pump": [
          ":a:a"
        ]
      },
      {
        "prefix": [
          ":\u0000"
        ],
        "suffix": "",
        "pump": [
          ":\u0000:\u0000"
        ]
      },
      {
        "prefix": [
          ":::XZRDTHIDAGUHKHOEOEERJYTGYBHZGLTLMKFANVWPC:IHWQCVZB:<;=|:|>?@<\b=<~{@\b\b<:{;=|"
        ],
        "suffix": "}|:?::}??:}|:?::}??:<{<{<:\b?",
        "pump": [
          "}|:?::}??:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "type=\\\\\"([a-z]+\\/[\\w\\\\+-\\\\.]+)+\\\\\"",
    "inputs": [
      {
        "prefix": [
          "type=\\\"a/+"
        ],
        "suffix": "",
        "pump": [
          "a/+aa/+"
        ]
      },
      {
        "prefix": [
          "type=\\\""
        ],
        "suffix": "/",
        "pump": [
          "a/aa"
        ]
      },
      {
        "prefix": [
          "type=\"a/+a/w"
        ],
        "suffix": "",
        "pump": [
          "wa/w"
        ]
      },
      {
        "prefix": [
          "type=\\\""
        ],
        "suffix": "ty/type/ty/type/\\pytnevxhrbe/type/\\=epytnevxhrbtolc",
        "pump": [
          "ty/type/"
        ]
      },
      {
        "prefix": [
          "type=\\\"type/u"
        ],
        "suffix": "",
        "pump": [
          "a/+aa/+"
        ]
      },
      {
        "prefix": [
          "type=\\\""
        ],
        "suffix": "yp",
        "pump": [
          "a/aa"
        ]
      },
      {
        "prefix": [
          "type=\"a/+a/+"
        ],
        "suffix": "",
        "pump": [
          "wa/+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " /**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/a*//",
        "pump": [
          "\t/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:\\/\\/.*|\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)\\n",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/**a",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*\n"
        ],
        "suffix": "*****************\\***",
        "pump": [
          "****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$\\{ \\w+(.\\w+)* \\}",
    "inputs": [
      {
        "prefix": [
          "${ 0"
        ],
        "suffix": "",
        "pump": [
          " 000"
        ]
      },
      {
        "prefix": [
          "${ a"
        ],
        "suffix": " a",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "g${ "
        ],
        "suffix": "rHq1m93DCcMfWAkMtgy2",
        "pump": [
          "rHq1"
        ]
      },
      {
        "prefix": [
          "${ 0"
        ],
        "suffix": "",
        "pump": [
          " 000"
        ]
      },
      {
        "prefix": [
          "${ a"
        ],
        "suffix": "\u0000\u0000${",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "${ "
        ],
        "suffix": "aehtpyfebampznsokaks",
        "pump": [
          "aeht"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*include\\s+\"([^\"]+)\"\\s*([\\/\\/|\\#].*)*$",
    "inputs": [
      {
        "prefix": [
          "include\t\"a\""
        ],
        "suffix": "a",
        "pump": [
          "##"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w|\\s|-)+\\/?)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "//",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<\\!\\-\\-\\-\\{(.|[\\n\\r])*\\}\\-\\-\\-\\>",
    "inputs": [
      {
        "prefix": [
          "<!---{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!---{"
        ],
        "suffix": "-}a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!---{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!---{"
        ],
        "suffix": "!}",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[\\n\\r]|.)*)(Generated by <a href.*)((?:[\\n\\r]|.)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\nGenerated by <a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Generated by <a href\u0000"
        ],
        "suffix": "",
        "pump": [
          "\r\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\nG",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Generated by <a href\r"
        ],
        "suffix": "",
        "pump": [
          "\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^struct\\s*([a-z_0-9]+)\\s*{\\s*((.|\\n)*?)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "Service Information \"read-one\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "inputs": [
      {
        "prefix": [
          "Service Information \"read-one\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"read-one\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Service Information \"read-one\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"read-one\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.\\.\\/src\\/(.*?)+\\/",
    "inputs": [
      {
        "prefix": [
          "../src/"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "../src/"
        ],
        "suffix": ".",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "../src/"
        ],
        "suffix": "L6sGL6sGjM*yz?!:ds",
        "pump": [
          "L6sG"
        ]
      },
      {
        "prefix": [
          "../src/"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "../src/"
        ],
        "suffix": ".",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "../src/"
        ],
        "suffix": "0^C 0^C og(wUe'3uf",
        "pump": [
          "0^C "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\{[\\n ]*)((([A-Za-z\\$\\_][0-9A-Za-z\\$\\_]*|`)[\\n ]*\\:[\\n ]*[^,\\}]+,?)+)([\\n ]*\\})",
    "inputs": [
      {
        "prefix": [
          "{a :!"
        ],
        "suffix": "",
        "pump": [
          "a:\\x0a{"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "`,\u0000",
        "pump": [
          "a:\na"
        ]
      },
      {
        "prefix": [
          "{af:s5gsZpAshdF2IWdRoNjAvPkiKEQ86oRuAshdF2IWdRodRoNjAvPkiKEQo"
        ],
        "suffix": "Ru:s5gsZp:Ru:s5gsZp:s5gsZpAs",
        "pump": [
          "Ru:s5gsZp:"
        ]
      },
      {
        "prefix": [
          "{a :|"
        ],
        "suffix": "",
        "pump": [
          "a:\\x0a{"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "\n",
        "pump": [
          "a:\na"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "{a:CSXZ:{a:CSXZ:a{JHFLBSNVWQWYRYEPTJUIALILAAWI:ZXSCJHFLBSNVW",
        "pump": [
          "{a:CSXZ:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(((.*)*)*x)[^\\x00-\\xff]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x^\\xx^\\x00-",
        "pump": [
          "x^\\x"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ax",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x^\\xx^\\x00-",
        "pump": [
          "x^\\x"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<[a-z]+[a-z0-9:_-]*)((?:[^\\S]+[a-z0-9:_-]+(?:=(?:'.*?'|\".*?\"|<.+?>|\\S+))?)+)([^\\S]*\\/?>)",
    "inputs": [
      {
        "prefix": [
          "<a_ -"
        ],
        "suffix": "",
        "pump": [
          " a=<\\x09-=>"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a-\ta",
        "pump": [
          "\ta=''"
        ]
      },
      {
        "prefix": [
          "<a\u0000-\u0000-0"
        ],
        "suffix": "",
        "pump": [
          ":-0"
        ]
      },
      {
        "prefix": [
          "<a_ -"
        ],
        "suffix": "",
        "pump": [
          " a=<\\x09-=>"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a-",
        "pump": [
          "\ta=''"
        ]
      },
      {
        "prefix": [
          "<a\u0000-\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ":\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(type|url|debug)(\\s+(.+)\\s*)*$",
    "inputs": [
      {
        "prefix": [
          "url"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "urlss"
        ],
        "suffix": "",
        "pump": [
          "sss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\D*\\d\\D*){6,})$",
    "inputs": [
      {
        "prefix": [
          "00000"
        ],
        "suffix": "0",
        "pump": [
          "a0a"
        ]
      },
      {
        "prefix": [
          "ddddddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "Dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "a0a"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "Dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-((\\d+)\\.?)+(-SNAPSHOT)?",
    "inputs": [
      {
        "prefix": [
          "-0"
        ],
        "suffix": "S",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-dd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "-0"
        ],
        "suffix": "HO",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "-ddd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^\\n;])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ")(\n\\",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "'''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "arn:[\\w+=\\/,.@-]+:[\\w+=\\/,.@-]+:[\\w+=\\/,.@-]*:[0-9]+:[\\w+=,.@-]+(\\/[\\w+=\\/,.@-]+)*",
    "inputs": [
      {
        "prefix": [
          "arn:a:a::0:a"
        ],
        "suffix": "ar:a:",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "arn:+:+::0:+/+-"
        ],
        "suffix": "\u0000",
        "pump": [
          "/+-"
        ]
      },
      {
        "prefix": [
          "arn:a:a::0:a"
        ],
        "suffix": "a/$arn",
        "pump": [
          "/a/a"
        ]
      },
      {
        "prefix": [
          "arn:+:+::0:+/++"
        ],
        "suffix": "\u0000",
        "pump": [
          "/++"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "inet6\\s+((?:\\S{0,4}:)+\\S{1,4}).+?prefixlen\\s+(\\d+)",
    "inputs": [
      {
        "prefix": [
          "inet6 :"
        ],
        "suffix": "",
        "pump": [
          ":::::::"
        ]
      },
      {
        "prefix": [
          "inet6\t"
        ],
        "suffix": "p",
        "pump": [
          "a:::"
        ]
      },
      {
        "prefix": [
          "iinet6\t:.::.::.:6"
        ],
        "suffix": "::::::::.+?prefixl:.+?",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "inet6 :"
        ],
        "suffix": "",
        "pump": [
          ":::::::"
        ]
      },
      {
        "prefix": [
          "inet6\t"
        ],
        "suffix": "lenin",
        "pump": [
          "a:::"
        ]
      },
      {
        "prefix": [
          "inet6\r"
        ],
        "suffix": ":::::::::::titererefiiEctPBNkwS25g7nXYya66NYpPntEenine?.+?prLdXHIOwfQCBeprefle",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "inet6 :"
        ],
        "suffix": "",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          "inet6\t"
        ],
        "suffix": "\t",
        "pump": [
          "a:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z][a-z0-9_-]*(?:\\[(?:\\d*|[a-z0-9_-]+)\\])*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0[[",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "a0"
        ],
        "suffix": "\u0000",
        "pump": [
          "d0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(    .*?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " a\n ",
        "pump": [
          "    \n    \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^_ZT[VI](N[0-9]+[A-Z_].*)*[0-9]+[A-Z_].*",
    "inputs": [
      {
        "prefix": [
          "_ZTI"
        ],
        "suffix": "a",
        "pump": [
          "N0AN0A"
        ]
      },
      {
        "prefix": [
          "_ZTIN0A\u0000"
        ],
        "suffix": "",
        "pump": [
          "N0A\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[ \\t]*([*#]).+(\\n[ \\t]*[^*#\\s].*)*(\\n[ \\t]*[*#]{2}.+)*",
    "inputs": [
      {
        "prefix": [
          "#a"
        ],
        "suffix": "a",
        "pump": [
          "\n a"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "a",
        "pump": [
          "\n a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\\\.[x|X][m|M][l|L]$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "",
        "pump": [
          "aA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^Modes: (?:(\\+[a-zA-Z]+)((?: \\S+?)*))?(; bad-word channel)?$",
    "inputs": [
      {
        "prefix": [
          "Modes: +a"
        ],
        "suffix": "\t",
        "pump": [
          " a a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Compute the value for each frequency *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "eq",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".gD%.gD%;TYu+Va?+P",
        "pump": [
          ".gD%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|\\d|_|-)*_value$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "al_v",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "________va__valu__va__v87",
        "pump": [
          "____"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(HbbTV)/1\\.1\\.1.*CE-HTML/1\\.\\d;(Vendor/)*(THOM[^;]*?)[;\\s](?:.*SW-Version/.*)*(LF[^;]+);?",
    "inputs": [
      {
        "prefix": [
          "HbbTV/1.1.1CE-HTML/1.0;THOM\\x09"
        ],
        "suffix": "",
        "pump": [
          "SW-Version/SW-Version/"
        ]
      },
      {
        "prefix": [
          "HbbTV/1.1.1CE-HTML/1.0;THOM\t"
        ],
        "suffix": ";TCE-HTM",
        "pump": [
          "aSW-Version/"
        ]
      },
      {
        "prefix": [
          "HbbTV/1\u00001\u00001CE-HTML/1\u0000d;THOM;SW-Version/"
        ],
        "suffix": "",
        "pump": [
          "\u0000SW-Version/"
        ]
      },
      {
        "prefix": [
          "HbbTV/1.1.1CE-HTML/1.0;THOM\\x09"
        ],
        "suffix": "",
        "pump": [
          "SW-Version/SW-Version/"
        ]
      },
      {
        "prefix": [
          "HbbTV/1.1.1CE-HTML/1.0;THOM\t"
        ],
        "suffix": ";THOMHLSCE",
        "pump": [
          "aSW-Version/"
        ]
      },
      {
        "prefix": [
          "HbbTV/1\u00001\u00001CE-HTML/1\u0000d;THOM;\u0000"
        ],
        "suffix": "",
        "pump": [
          "SW-Version/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^export (interface|(?:const )?enum) (\\S*?)(?: extends .*?)? \\{( |.*[\\r\\n]*)*?\\}",
    "inputs": [
      {
        "prefix": [
          "export interface  {"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "export enum  {"
        ],
        "suffix": " c",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "export enum"
        ],
        "suffix": " ^ { ^ { {vi<Qm1GC65k",
        "pump": [
          " ^ {"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#((?:-[A-Za-z_-]|[A-Za-z_]|\\\\[^A-F0-9U]|\\\\[A-F0-9]{1,6}\\s?|\\\\U[0-9A-F]{2}(?:A[1-9A-F]|[B-F][0-9A-F]))(?:\\\\[A-F0-9]{1,6}\\s?|[A-Za-z0-9_-]|\\\\:)*)",
    "inputs": [
      {
        "prefix": [
          "#a"
        ],
        "suffix": "#\\U0",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "BB#\\U00",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "#\\U",
        "pump": [
          "\\00a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*.*(?:\\n\\s{3,}.*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\n",
        "pump": [
          "\n\t\t\t\n\n\t\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "{\"\\{'{",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "\u0000''"
        ],
        "suffix": "{",
        "pump": [
          "'''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\s)+(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "s\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "ss"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "",
        "pump": [
          "\\\\00"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "-a",
        "pump": [
          "\\\\aaa"
        ]
      },
      {
        "prefix": [
          "\\288247041950249362"
        ],
        "suffix": "001079080a\\\\001079080a\\\\0a9617175965289-0a-z-a-__a-z",
        "pump": [
          "001079080a\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\*|\\\\:)(\\\\w|\\\\.)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "::",
        "pump": [
          "\\w\\w"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":\\",
        "pump": [
          "\\w\\w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((([a-zA-Z]+(-[a-zA-Z0-9]+){0,2})|\\*)(;q=[0-1](\\.[0-9]+)?)?)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a;q=0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0=",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^Error: true should be false(\\n    at .+)+",
    "inputs": [
      {
        "prefix": [
          "Error: true should be false"
        ],
        "suffix": "\n  ",
        "pump": [
          "\n    at a\n    at a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*?): (\\w+)(?:: (.*))?(?:\\r?\\nat[^\\n]*)?(\\r?\\n.*@(\\[native code\\]|(?:.*:\\d+:\\d+)))*\\r?\\n",
    "inputs": [
      {
        "prefix": [
          ": a"
        ],
        "suffix": ":",
        "pump": [
          "\r\n@@:0:0"
        ]
      },
      {
        "prefix": [
          ": a"
        ],
        "suffix": ":\na@[n",
        "pump": [
          "\r\n@@:0:0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *(?:translate|rotate|scale)[^(]*\\([^(]+\\))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          " rotate(a)scale)scale(a)"
        ]
      },
      {
        "prefix": [
          "scale\u0000scale"
        ],
        "suffix": "",
        "pump": [
          ")\u0000scale"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$(trotat",
        "pump": [
          " rotate(a)scale)scale(a)"
        ]
      },
      {
        "prefix": [
          "scale\u0000scale"
        ],
        "suffix": "",
        "pump": [
          ")\u0000scale"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9_]+[a-z0-9\\._]*(\\/[a-z0-9_]+[a-z0-9\\._]*)*)?$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "/00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a//",
        "pump": [
          "/aa"
        ]
      },
      {
        "prefix": [
          "0/_"
        ],
        "suffix": "\u0000",
        "pump": [
          "0/_"
        ]
      },
      {
        "prefix": [
          "77565013281852362484669276"
        ],
        "suffix": "2466096h769/2466096h769/d6913281852362466096246/",
        "pump": [
          "2466096h769/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "tarz:\\/\\/(.*?(\\.tgz|\\.tar\\.gz|\\.tar\\.bz2|\\.tar)+)(?:#\\/?(.*))*",
    "inputs": [
      {
        "prefix": [
          "tarz://.tar"
        ],
        "suffix": "a",
        "pump": [
          "#/"
        ]
      },
      {
        "prefix": [
          "tarz://\u0000tar#"
        ],
        "suffix": "\u0000",
        "pump": [
          "/#"
        ]
      },
      {
        "prefix": [
          "tarz://.tar"
        ],
        "suffix": "a",
        "pump": [
          "#/"
        ]
      },
      {
        "prefix": [
          "tarz://\u0000tar#"
        ],
        "suffix": "",
        "pump": [
          "/#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\.|(\\\\\\\")|[^\\\"\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\".",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+)*([a-z]+)*",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "a0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]+([a-z\\d]+_|_[a-z\\d]+)+[a-z\\d]+$",
    "inputs": [
      {
        "prefix": [
          "aa_"
        ],
        "suffix": "",
        "pump": [
          "a__00a_"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a0___",
        "pump": [
          "a__aa_a"
        ]
      },
      {
        "prefix": [
          "a_a_aa"
        ],
        "suffix": "",
        "pump": [
          "aa__aa"
        ]
      },
      {
        "prefix": [
          "ab_b50"
        ],
        "suffix": "3wqedfrokwva__3wqedfrokwva__a57099328409844507175020693408973562725990860_",
        "pump": [
          "3wqedfrokwva__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<del[^>]*>((.|\\n)*?)<\\/del>)",
    "inputs": [
      {
        "prefix": [
          "<del>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<del>"
        ],
        "suffix": "</\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<del>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<del>"
        ],
        "suffix": "el",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\xCF*[0-9]{2}\\xCF*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "Ï0Ï",
        "pump": [
          "Ï00Ï"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*?[.!?](?:[”\"')\\]}]|(?:<.*>))*[[:space:]])",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "a>",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "!<"
        ],
        "suffix": "",
        "pump": [
          "><><"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "a><",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "!<\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/.*)*(\\/\\..*|\\.(tmproj|o|pyc)|Icon)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/I.tm",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\n*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$\\{((?:[^\\\\}]+|\\\\.))*\\}",
    "inputs": [
      {
        "prefix": [
          "${"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "${}{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x${=x${=-%Ablf\t>0YxZ",
        "pump": [
          "x${="
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "3${{3${{\n .z6)<F~s-W",
        "pump": [
          "3${{"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(filename=)\\\"?(\\w+(\\.)?)+\\w+\\\"?",
    "inputs": [
      {
        "prefix": [
          "filename=\"a"
        ],
        "suffix": "=\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "filename=ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "filename=\"a"
        ],
        "suffix": "enf\"file",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "filename=ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script.*src=(s*?)*(.+)[?]__inline.*?(s*?)></script>",
    "inputs": [
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "r",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "r<scr",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^  Front Right: (Playback |Capture )?(\\d+)(\\s+|\\[[^\\]]+\\])*( Capture (\\d+))?",
    "inputs": [
      {
        "prefix": [
          "  Front Right: 0\t"
        ],
        "suffix": "] Capture ",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "  Front Right: ds"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "iPhone (\\S* )*(\\(([0-9A-Z-]*)\\))",
    "inputs": [
      {
        "prefix": [
          "iPhone "
        ],
        "suffix": "(",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "iPhone "
        ],
        "suffix": "ei",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*[^*]*\\*+([^/][^*]*\\*+)*/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "a*/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "M/"
        ],
        "suffix": "*****************N*L(C\t-dM*wa'/*CMj08q\t\"Md-\tq?IV<'$bK;w**wa'/*:`O5?UOW**[O\\C***N*",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "s/*."
        ],
        "suffix": "***************.****.*",
        "pump": [
          "****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^((http|https):\\/\\/)]([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}:([0-9]{1,5})+)",
    "inputs": [
      {
        "prefix": [
          "a0.0.0.0:"
        ],
        "suffix": "a00.000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u00000\u00000\u00000\u00000:00000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00000"
        ]
      },
      {
        "prefix": [
          "a0.0.0.0:"
        ],
        "suffix": "0a00.000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u00000\u00000\u00000\u00000:000"
        ],
        "suffix": "\u0000",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          "a0.0.0.0:0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u00000\u00000\u00000\u00000:000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\r\\\\n\\\\r\\\\n(([[:alnum:]]|[[:ascii:]]|[[:blank:]]|[[:punct:]]|[[:space:]])*){1}\\\\r\\\\n",
    "inputs": [
      {
        "prefix": [
          "\\r\\n\\r\\n"
        ],
        "suffix": "\\rt",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\\r\\n\\r\\"
        ],
        "suffix": "n:bln:blank::p",
        "pump": [
          "n:bl"
        ]
      },
      {
        "prefix": [
          "\\r\\n\\r\\n"
        ],
        "suffix": "\\r\\r\\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\\r\\n\\r\\"
        ],
        "suffix": "n:nsn:nspacepa",
        "pump": [
          "n:ns"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n\\/\\* Copyright(.|\\n)*?Mozilla Foundation(.|\\n)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "\\x0a/* Copyright"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\n/* Copyright"
        ],
        "suffix": "at",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "\\x0a/* Copyright"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\n/* Copyright"
        ],
        "suffix": "py",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<[^>]*?>|\"[^\"]*?\"|[^,])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",\",>,",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "\u0000<>"
        ],
        "suffix": ",",
        "pump": [
          "\"\"<>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\">,",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[1-9]+[0-9]*,?)+$",
    "inputs": [
      {
        "prefix": [
          "1"
        ],
        "suffix": "!",
        "pump": [
          "11"
        ]
      },
      {
        "prefix": [
          "1"
        ],
        "suffix": "0,0",
        "pump": [
          "11"
        ]
      },
      {
        "prefix": [
          "110"
        ],
        "suffix": "\u0000",
        "pump": [
          "10"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "28822882888888H",
        "pump": [
          "2882"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w:\\-]+)(?:\\s*=\\s*(?:(?:\\\"((?:\\\\.|[^\\\"])*)\\\")|(?:\\'((?:\\\\.|[^\\'])*)\\')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ":=\"\\\\\\w'\\510\\w:"
        ],
        "suffix": "\\\\w\\'\\510\b\t\n\b\b\n\r\n\n\t\n\b\t\r\r\b\n\b\r\r\t\t\n\n\r\r\r\r\r\b\n\b\b\b\r\r\n\r\r\n\n",
        "pump": [
          "\\\\w\\'\\"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a$'a\\\ta\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\\e='"
        ],
        "suffix": "\\\\e\\e=X\\e\"\\I\\e\"J,\\IdhVQEzHga\\IdhVbIUctzFHAwvwPrJ\\e=\n\r\t\n\t,JJ\\e=",
        "pump": [
          "\\\\e\\e=X\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^&?(?:.*::)*(\\w+)\\s*[(][\"'].*[\"'][)]\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "&"
        ],
        "suffix": "(a",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "::\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "::::::::::::(:::::::u37C833eFEC5ffFeFa6EA91078Fc0e27A58DCBEb2efaf5cDf5f5EEa2D8883DbA8F4",
        "pump": [
          "::::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(#|\\n|\\s)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\u0000",
        "pump": [
          "#\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*\\s+.*)+$",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "s\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\.|\\#\\{|[^\\s\\\\+\\-*\\/%(),=!])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\t#\t",
        "pump": [
          "\\a#{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\t#\\",
        "pump": [
          "\\a#{"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([-+]?\\d+(?:[,.]\\d*)?)\\s*(\\w+))(\\s*,?)*",
    "inputs": [
      {
        "prefix": [
          "+0a"
        ],
        "suffix": "++",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\@.+(?:\\r|\\r?\\n)(?:[^\\@\\+].*(?:\\r|\\r?\\n))+",
    "inputs": [
      {
        "prefix": [
          "@a\r"
        ],
        "suffix": "\na",
        "pump": [
          "a\na\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-+BEGIN\\s+.*PRIVATE\\s+KEY[^-]*-+(?:\\s|\\r|\\n)+([a-z0-9+/=\\r\\n]+)-+END\\s+.*PRIVATE\\s+KEY[^-]*-+",
    "inputs": [
      {
        "prefix": [
          "-BEGIN \\x00PRIVATE KEYP-\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN\tPRIVATE\tKEY-"
        ],
        "suffix": "-\nPRIVATE\tK",
        "pump": [
          "\t\r"
        ]
      },
      {
        "prefix": [
          "-BEGIN \\x00PRIVATE KEYP-\\x0b"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN\tPRIVATE\tKEY-"
        ],
        "suffix": "-\na",
        "pump": [
          "\t\r"
        ]
      },
      {
        "prefix": [
          "---BEGIN\t\t\tP-BEGIN\tP-BEGIN\tP-BEGIN\tPRIVATE\rKEY-"
        ],
        "suffix": "\r\n\r\t\r\t\r\n\r\t\r\t\n\n \r\r",
        "pump": [
          "\r\n\r\t\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((-- |#)[^\\n]*\\n|/\\*.*?\\*/)*(UNION|JOIN)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "-- \\x0a/**/#*/#\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "O",
        "pump": [
          "-- \n/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\#.*?\\n)|(\\-\\-\\-.*?\\n))*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "-a\n-",
        "pump": [
          "#\n#\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\w+(?:\\.{0,1}[\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\.[a-zA-Z]+\\s*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\ta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-zAa-zA-Z0-9a-zA-Z",
        "pump": [
          "a-zA"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-zAa-zA-Z0-9a-zA-Z",
        "pump": [
          "a-zA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{((\\d*[a-z_]\\d*)+)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "<(h[2-3])(?:\\s+[^>]*)*>(.*?)<\\s*\\/\\s*h[2-3]\\s*?>",
    "inputs": [
      {
        "prefix": [
          "<h2"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<h2\t"
        ],
        "suffix": "<h<\t></",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<h2s\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "?<h"
        ],
        "suffix": "3\n\r\n3\n\r\n\r\n \n\t\n\t",
        "pump": [
          "3\n\r\n"
        ]
      },
      {
        "prefix": [
          "<h2"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<h2\t"
        ],
        "suffix": "<\t></",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<h2ss"
        ],
        "suffix": "",
        "pump": [
          "sss"
        ]
      },
      {
        "prefix": [
          "<h"
        ],
        "suffix": "2\t\r\t2\t\r\t \n \r\n\n\r",
        "pump": [
          "2\t\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n      typedef\n      (\\s+(\\*)?([A-Za-z0-9_\\*]+))+\n      ;\n    ",
    "inputs": [
      {
        "prefix": [
          "      "
        ],
        "suffix": " \t ",
        "pump": [
          "\t*a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\s?((?:#|ext\\.?\\s?|x\\.?\\s?){1}(?:\\d+)?)?$",
    "inputs": [
      {
        "prefix": [
          "^.^@[250.250.250.2500:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[10.10.10.a:"
        ],
        "suffix": "2\\\\",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "^\"^\"@a-.^@a.ae\\x0bext.\\x090.^@[250.250.250.2500:\\x7f"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[10.10.10.a:"
        ],
        "suffix": "2a\t#@[10.10.30",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "rotate\\(-*\\d+([.]\\d+)*(,*\\s*-*\\d+([.]\\d+)*,*\\s*-*\\d+([.]\\d+)*)*",
    "inputs": [
      {
        "prefix": [
          "rotate(0"
        ],
        "suffix": "0.",
        "pump": [
          ",00,00"
        ]
      },
      {
        "prefix": [
          "rotate(0"
        ],
        "suffix": "at",
        "pump": [
          ",00,00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\W*insert[\\s\\w()\",.]+values\\s*\\((?:[^;']|''|(?:(?:'')*'[^']+'(?:'')*))*;?$",
    "inputs": [
      {
        "prefix": [
          "insertavalues("
        ],
        "suffix": "'",
        "pump": [
          "'''!'"
        ]
      },
      {
        "prefix": [
          "insertavalues("
        ],
        "suffix": "\";$';insert",
        "pump": [
          "'''a'a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(gobrowser)\\/?((\\d+)?[\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "gobrowser/a"
        ],
        "suffix": "e0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "gobrowser."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "gobrowser/a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "gobrowser."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(ii[ ]+)([\\w\\-\\+\\.]+)([\\:\\w]*)*([ ]+)([\\w\\.\\:\\-\\+\\~]+)",
    "inputs": [
      {
        "prefix": [
          "ii +"
        ],
        "suffix": "",
        "pump": [
          ":"
        ]
      },
      {
        "prefix": [
          "ii a"
        ],
        "suffix": "i:+ ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "iii "
        ],
        "suffix": "7826782649xjxljmv",
        "pump": [
          "7826"
        ]
      },
      {
        "prefix": [
          "ii j"
        ],
        "suffix": "",
        "pump": [
          ":"
        ]
      },
      {
        "prefix": [
          "ii a"
        ],
        "suffix": "i $",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ii "
        ],
        "suffix": "iif7iif7122cD5DcF",
        "pump": [
          "iif7"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\d+(?:[._]*\\d*)*",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "#",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([ \\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "//bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//bower"
        ],
        "suffix": "\te//",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "// bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//bower"
        ],
        "suffix": "endbo",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<solr>(.|\\n)*</solr>",
    "inputs": [
      {
        "prefix": [
          "<solr>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<solr>"
        ],
        "suffix": "lr",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<solr>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<solr>"
        ],
        "suffix": "\n<solr",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([A-Za-z0-9\\-_\\:\\.]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/|\\s+)>))",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "DO\"]-?']-?\ta]-/",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<MR *<j"
        ],
        "suffix": "\n@e\r\n@e\rPX9?\n%ID\rR!`",
        "pump": [
          "\n@e\r"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "D\"]-?']-?",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<T\roc{4RI"
        ],
        "suffix": "\nhG\r\nhG\rOq*mYW cN27J`A",
        "pump": [
          "\nhG\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "k-meleon\t0._0"
        ],
        "suffix": "e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "k-meleon/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "k-meleon\t0._0"
        ],
        "suffix": "-",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "k-meleon/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": ".:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "d-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "t.htt.hthttp.a-zhttps?",
        "pump": [
          "t.ht"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "tp0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "",
        "pump": [
          "d-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ht.aht.aeD0JmxhHWHC4wj<",
        "pump": [
          "ht.a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"\"\"(?:\\s*\\r?\\n)?((?:.|\\r?\\n)*?)(?:\\r?\\n\\s*)?\"\"\"",
    "inputs": [
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "\na",
        "pump": [
          "a\r\n"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\"\"\""
        ],
        "suffix": "\na",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)",
    "inputs": [
      {
        "prefix": [
          "%{a:%0|"
        ],
        "suffix": "",
        "pump": [
          "|%~"
        ]
      },
      {
        "prefix": [
          "%{a:%0"
        ],
        "suffix": ":}:",
        "pump": [
          "|%|"
        ]
      },
      {
        "prefix": [
          "%{a:%0|%{a:%0|aFDH"
        ],
        "suffix": "%{%0|%%{%0|%{f40aC5D3694Cbc2cD2C8ACCEc8F9Bc10DE69Fb50b44CBed467639Eaf1",
        "pump": [
          "%{%0|%"
        ]
      },
      {
        "prefix": [
          "%{a:%0|"
        ],
        "suffix": "",
        "pump": [
          "|%~"
        ]
      },
      {
        "prefix": [
          "%{a:%0"
        ],
        "suffix": "%0|",
        "pump": [
          "|%|"
        ]
      },
      {
        "prefix": [
          ":%{b:%0|%0:%:"
        ],
        "suffix": "%{%0|%%{%0|%0:%%\t\r \r\t\t\n\t\t \t\t\t\t\n\t \n %:0]|*0",
        "pump": [
          "%{%0|%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\[\\s\\S]|[^\"])*\"|'(\\\\[\\s\\S]|[^'])*'|([^A-Za-z0-9]:([A-Za-z][A-Za-z0-9_-]*))",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "-$'\\a\":",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "[sS]\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "-$'\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "[sS]\u0000"
        ]
      },
      {
        "prefix": [
          "\"\t\\9"
        ],
        "suffix": "\\\\Z)-(~:]\\{\\(Az9-2(S-s:\\7\\1()zz[29]'[\\](?[[2]|]x5apOg9\\\\Z)-(~:]\\{(",
        "pump": [
          "\\\\Z)-(~:]\\{\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*,)*\\s*Negotiate\\s*([^,]*),?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ia,,",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e,aNeg",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w(?:\\.?[\\w%+-]+)*@\\w(?:[\\w-]*\\.)+?[a-z]{2,}$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A%"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "a@a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w%+"
        ],
        "suffix": "",
        "pump": [
          "w+"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "GMZgGMZgI4mCqvdcv8K",
        "pump": [
          "GMZg"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A%"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "A.@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w@w\u0000-"
        ],
        "suffix": "",
        "pump": [
          "w-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2AiH2AiH%hGkiPElpDA",
        "pump": [
          "2AiH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.+\\n)*content-disposition: inline",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "d\\x0a\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "d\\x0a\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "sit",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(\\s*([-;.:\\d\\w]*[-;\\d\\w])\\s*([:~<>]?=)((?:\\\\.|[^\\\\()]+)*)\\)\\s*",
    "inputs": [
      {
        "prefix": [
          "(a="
        ],
        "suffix": "",
        "pump": [
          "]!"
        ]
      },
      {
        "prefix": [
          "(a:=a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-=\u0000\u0000"
        ],
        "suffix": "(",
        "pump": [
          ".\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": ";==H;==H:2vX@J9q~J>P",
        "pump": [
          ";==H"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "(()",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "/("
        ],
        "suffix": ">4$R>4$R\r7R+O6-k|.",
        "pump": [
          ">4$R"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "a(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "(7z("
        ],
        "suffix": "9<X\"9<X\"`Y\\VxLO-",
        "pump": [
          "9<X\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^\\/>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "=\\a$'\\\t\\a\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9][a-z0-9_]?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "__",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaabcaaaabcjeaaaabcjeaab/",
        "pump": [
          "aaaabc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(http[s]?\\:\\/\\/)?([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-\\.]*[A-Za-z])+(:[0-9]+)?$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "!",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "tps::",
        "pump": [
          "aaa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "",
        "pump": [
          "AAa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aqEwaqEwMWuxVvboS;",
        "pump": [
          "aqEw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\.){2,}",
    "inputs": [
      {
        "prefix": [
          "."
        ],
        "suffix": "a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*(/\\*(.*\\s+)*\\*/)*([ \\t]*//.*\\s+)*)*",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n ",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": " \\ \r \\ \r \n\n \n\t\r\n\r",
        "pump": [
          " \\ \r"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t/*a\t*/\n//\t*",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "/** t\n\n\b"
        ],
        "suffix": "\t\b\t\r\t\b\t\r\t\t\t\t\t\t",
        "pump": [
          "\t\b\t\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*)*\\s*mixin\\(lodash\\)[\\s\\S]+?\\/\\*-+\\*\\/",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "///////////////////*RWgk/ixin(l",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "///////////////-/////*-*ixin(lo",
        "pump": [
          "////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<div\\s*class=\"prefixes\"\\>(.|\\s)*\\<\\/div\\>",
    "inputs": [
      {
        "prefix": [
          "<divclass=\"prefixes\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\">"
        ],
        "suffix": "p",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\"><divclass=\"prefixes\">\t\t\t\b"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\r\t\b\b\b\n\r\t\n\n\r\r\t\b",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\">"
        ],
        "suffix": "es",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<divclass=\"prefixes\">/\t\t\r \r"
        ],
        "suffix": "   \t   \t\n \n\t\n\t\r \t\n",
        "pump": [
          "   \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?: {4}|\\t)[^\\n]*\\n?([ \\t]*\\n)*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "    \t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^I generate a (.*)project named '((?:\\w|-|_)+)' that is '([^']*)'$",
    "inputs": [
      {
        "prefix": [
          "I generate a project named 'q"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          "I generate a project named '"
        ],
        "suffix": "r",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<script.*>.*<\\/script>)+|<\\/?[^>]+>|[[[:alpha:]][0-9]\\|`~!@#\\$%^&*\\(\\)\\-_\\+=\\[\\]{}:;'²³§\",\\.\\/?]+|\\s+|[[:punct:]]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "cr</scr",
        "pump": [
          "<script>></script>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "cr<></sc",
        "pump": [
          "<script>></script>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[-\\[\\]{}\\w*.+\\/:@=,#\\$%&!'^~\\s\\xC3\\x80-\\xCA\\xAF]|[^\\x00-\\x7F]|\\\\[a-fA-F\\d]{2})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "aË0",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\0",
        "pump": [
          "a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\% panel (.*) \\%\\}((.|\\n)*)\\{\\% endpanel \\%\\}",
    "inputs": [
      {
        "prefix": [
          "{% panel  %}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{% panel  %}"
        ],
        "suffix": "dpanel",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "{% panel  %}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{% panel  %}"
        ],
        "suffix": "dpa",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*(?:\\n|.)*\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(.|\\n)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+\\.?)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "w"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?",
    "inputs": [
      {
        "prefix": [
          "D\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "DD\t"
        ],
        "suffix": "DD",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "DD"
        ],
        "suffix": "\r\r\r\t\r\r\r\t\t\n\t\r\t\t\n\n\r\n",
        "pump": [
          "\r\r\r\t"
        ]
      },
      {
        "prefix": [
          "D\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "DD\t"
        ],
        "suffix": "MDo\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "DD"
        ],
        "suffix": "  \r\n  \r\n\n \t\t\r\r\n \t",
        "pump": [
          "  \r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([\\s\\t]*)\\/{2}\\s*?bower:\\s*?(\\S*))(\\n|\\r|.)*?(\\/{2}\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "//bower:"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//bower:"
        ],
        "suffix": "ena",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "//bower:"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//bower:"
        ],
        "suffix": "/\nbow",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?::.|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          ":;"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"\":",
        "pump": [
          ":a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          ":;"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          ":a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "func \\(.+? \\*?(.+?)\\) .+?\\(.+? .+?\\.ResponseWriter, .+? \\*.+?.Request\\) {(.|\\n)*}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(mint)[\\/\\s\\(]?(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "mint\ta"
        ],
        "suffix": "min\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "mintww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "mint\ta"
        ],
        "suffix": "\t$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "mintw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+_)*id$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "j___"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "id_a",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "___d_____d___d_33____d_334151003131___d__",
        "pump": [
          "___d__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(android)[\\/\\s-]?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "android\ta"
        ],
        "suffix": "dr\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "android."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "android\ta"
        ],
        "suffix": "d\t$andro",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "android.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'((?:[^'{]+|\\\\.)*)'$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'a"
        ],
        "suffix": "\\{a{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "}~i)}~i)M~oZul=x[a",
        "pump": [
          "}~i)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([[:lower:]][[:lower:]\\d]*[\\.\\?:\\/]?)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ".0",
        "pump": [
          "::"
        ]
      },
      {
        "prefix": [
          ":d"
        ],
        "suffix": "\u0000",
        "pump": [
          ":d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[A-Za-z0-9-]+(?:=\"[^\"]+\")?,?)+ *)?(ssh-(?:dss|rsa)) *([^ ]*) *(.*)",
    "inputs": [
      {
        "prefix": [
          "t"
        ],
        "suffix": "",
        "pump": [
          "tt"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a=\"a\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "rsaArsaA-Za-z0-9-",
        "pump": [
          "rsaA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*\\n)* *var sourceURL[^;]+;|\\+ *sourceURL",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " v",
        "pump": [
          "\t//\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " s;\n/var",
        "pump": [
          "\t//\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(\\[@\\S+\\]\\[\\](?:, \\[@\\S+\\]\\[\\])*\\)$",
    "inputs": [
      {
        "prefix": [
          "([@a][]"
        ],
        "suffix": "@",
        "pump": [
          ", [@a][], [@a][]"
        ]
      },
      {
        "prefix": [
          "([@a][]"
        ],
        "suffix": "]",
        "pump": [
          ", [@a][], [@a][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([achlmqstvz])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?\\s*,?\\s*)+)",
    "inputs": [
      {
        "prefix": [
          "a-"
        ],
        "suffix": "-0.+",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "aed"
        ],
        "suffix": "",
        "pump": [
          "eded"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "-0$",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "as"
        ],
        "suffix": "",
        "pump": [
          "ds"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "mac os x (\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "mac os x 0._0"
        ],
        "suffix": " x",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "mac os x ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "mac os x 0._0"
        ],
        "suffix": "mac",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "mac os x dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-ZÄÖÜ]+[a-zäöüß]*-?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "A\\xff"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "-a",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "DXZs"
        ],
        "suffix": "MLLRMLLRGZLLRG6",
        "pump": [
          "MLLR"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "A\\xff"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "-Aa$",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "EJXREJXRFHYXFKNRH?",
        "pump": [
          "EJXR"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(\\*(?:[\\s\\S]*?\\(\\*[\\s\\S]*?\\*\\))*[\\s\\S]*?\\*\\)",
    "inputs": [
      {
        "prefix": [
          "(*"
        ],
        "suffix": "(",
        "pump": [
          "(*(**)"
        ]
      },
      {
        "prefix": [
          "(*"
        ],
        "suffix": ")(**",
        "pump": [
          "(*(**)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *:?\\w+ *= *\\\"[^\\\"]*\\\" *)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " \":\"\"",
        "pump": [
          " a=\"\" "
        ]
      },
      {
        "prefix": [
          "w=\"\"w=\"\" "
        ],
        "suffix": "\u0000",
        "pump": [
          " w=\"\" "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " :",
        "pump": [
          " a=\"\" "
        ]
      },
      {
        "prefix": [
          "w=\"\"w=\"\" "
        ],
        "suffix": "\u0000",
        "pump": [
          " w=\"\" "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\+|(0(\\d+)?[-/.\\s]?))[1-9]\\d{0,2}[-/.\\s]?)?((\\(\\d{1,6}\\)|\\d{1,6})[-/.\\s]?)?(\\d+[-/.\\s]?)+\\d+$",
    "inputs": [
      {
        "prefix": [
          "1"
        ],
        "suffix": "\\x00",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\t(0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0220022021022021(",
        "pump": [
          "0220"
        ]
      },
      {
        "prefix": [
          "1"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ")",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0800080080080008(",
        "pump": [
          "0800"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n   ( -+[\\w,-]+)+)",
    "inputs": [
      {
        "prefix": [
          "\n   "
        ],
        "suffix": "\n\n",
        "pump": [
          " --a"
        ]
      },
      {
        "prefix": [
          "\n   "
        ],
        "suffix": "-a$\n   ",
        "pump": [
          " --a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\\"])\\/\\*([^\\*^\\/]*|[\\*^\\/*]*[^\\**\\/]*)*\\*\\/",
    "inputs": [
      {
        "prefix": [
          "#/*"
        ],
        "suffix": "",
        "pump": [
          "^"
        ]
      },
      {
        "prefix": [
          "a/*"
        ],
        "suffix": "*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":/*{:/*{(6HylD-",
        "pump": [
          ":/*{"
        ]
      },
      {
        "prefix": [
          "#/*"
        ],
        "suffix": "",
        "pump": [
          "^"
        ]
      },
      {
        "prefix": [
          "a/*"
        ],
        "suffix": "^",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "T/*3T/*3{xyC%FO",
        "pump": [
          "T/*3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*XXX:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*XXX:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*XXX:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "https?://(-\\.)?([^\\s/?\\.#-]+\\.?)+(/[^\\s]*)?",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps:\thttp",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "package\\s+([a-zA-z](.\\w+)*)",
    "inputs": [
      {
        "prefix": [
          "package\ta"
        ],
        "suffix": "e\t$",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "packagesA\u0000ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          "package\ta"
        ],
        "suffix": "e\t$p",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "packagesA\u0000ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "www"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:@Inject(?:\\n|.)*?\\s+(?:protected|public|lateinit|(\\w+(?:\\.\\w+)*))?\\s+(?:var(?:\\n|.)*?:\\s*)?)|(?:@field\\s*:\\s*\\[(?:\\n|.)*?Inject(?:\\n|.)*?\\]\\s*(?:protected|public|lateinit)?\\s*var\\s*.+?\\s*:\\s*))(\\w+(?:\\.\\w+)*)",
    "inputs": [
      {
        "prefix": [
          "@Inject"
        ],
        "suffix": "",
        "pump": [
          "\\x0b\\x0a"
        ]
      },
      {
        "prefix": [
          "@Inject"
        ],
        "suffix": "]var\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "@Inject"
        ],
        "suffix": "",
        "pump": [
          "\\x0b\\x0a"
        ]
      },
      {
        "prefix": [
          "@Inject"
        ],
        "suffix": "]lat",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "@Injectsw\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww\u0000w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^UPSTREAM: (\\d+)+:(.+)",
    "inputs": [
      {
        "prefix": [
          "UPSTREAM: 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "UPSTREAM: 0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "UPSTREAM: dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "UPSTREAM: "
        ],
        "suffix": "859685969117576190",
        "pump": [
          "8596"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\n|\\r)*?-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!--",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([A-Z]\\w+(::)?)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a:a",
        "pump": [
          "AaAa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:A",
        "pump": [
          "AaAa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?://)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([/\\w \\.-]*)*/+$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "h0..aa.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "t.ttt.ttp.ht.htthttp",
        "pump": [
          "t.tt"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "tps",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ht.hht.httphtt.https",
        "pump": [
          "ht.h"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/][*](\\s|.)+?[*][\\/]",
    "inputs": [
      {
        "prefix": [
          "/*!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "/*\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "\t\n\t\t\t\n\t\t\b\t\t*\t\n   \r \t\t ",
        "pump": [
          "\t\n\t\t"
        ]
      },
      {
        "prefix": [
          "/*0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "/*\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": ".\t\t\n\t\t.\t\t\n\t\t\t\b\r\r\n\b\t\n\t\t\b\b\r\b\t\t\r\t\n\t",
        "pump": [
          ".\t\t\n\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\[.*(,.*)+\\])(.*)",
    "inputs": [
      {
        "prefix": [
          "[,"
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "a",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "[,"
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "a",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\d (PAGE|EVEN|ROLE|DATE|TEXT|QUAY) ?(.*(\\n\\d CONT.*)*)$",
    "inputs": [
      {
        "prefix": [
          "0 TEXT "
        ],
        "suffix": "\n0 CON",
        "pump": [
          "\n0 CONT\n0 CONT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*,)*\\s*NTLM\\s*([^,]*),?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "M,,",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t,aNTL",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+)*}$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(ffprobe|avprobe|ffmpeg) version (\\d+)\\.?(\\d+)\\.?(\\d+)*",
    "inputs": [
      {
        "prefix": [
          "ffmpeg version 0.0.0"
        ],
        "suffix": "vpro",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ffmpeg version ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s|//.*?\\n|/[*].*?[*]/)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/\n/",
        "pump": [
          "\t//\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t//\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*[+-]?((\\d+_?)*\\d+(\\.(\\d+_?)*\\d+)?|\\.(\\d+_?)*\\d+)(\\s*|([eE][+-]?(\\d+_?)*\\d+)\\s*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "+.0"
        ],
        "suffix": "0_",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dEd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "67286728801621158.",
        "pump": [
          "6728"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*variant:\\s*(([\\w-]+,?)+).*",
    "inputs": [
      {
        "prefix": [
          "variant:a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "variant:a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "variant:-w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\/\\*\\*?(.|\\r?\\n)*?\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/*",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-zA-Z]+\\s*)+)(\\s[0-9]+)$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "qcBfqcBfcFlOMaIEd",
        "pump": [
          "qcBf"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "vJnuvJnuZSESqthNmh",
        "pump": [
          "vJnu"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Service Information \"update\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "inputs": [
      {
        "prefix": [
          "Service Information \"update\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"update\"\n"
        ],
        "suffix": "UR",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Service Information \"update\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"update\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+",
    "inputs": [
      {
        "prefix": [
          "normal 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "normal\t+0"
        ],
        "suffix": "0.E",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "normals00E00"
        ],
        "suffix": "",
        "pump": [
          "00E00"
        ]
      },
      {
        "prefix": [
          "normal 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "normal\t+0"
        ],
        "suffix": "0E0.0E",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "normals00\u0000"
        ],
        "suffix": "",
        "pump": [
          "00\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\nu='\\.(\\.(\\I|\\.("
        ],
        "suffix": "\\.(\\I\\I\\\\.(\\I\\I\\]s\\.=\t\r\t\r@?[a=\nlll=\n\t\r",
        "pump": [
          "\\.(\\I\\I\\"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a$'a\\\ta\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "=\\w=\"\\3\\AD55E2adeA09fcBddECda6='=\\=04bfdfcBddE"
        ],
        "suffix": "\\E\\>\\*)\\\\E\\>\\*)\\=|\\['\\.\\:^*\\??",
        "pump": [
          "\\E\\>\\*)\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<code[^>]*>\\s*(?:\\r\\n|\\r|\\n))((?:.|\\r|\\n)*?)<\\/code>",
    "inputs": [
      {
        "prefix": [
          "<code>\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<code>\r"
        ],
        "suffix": "</<>\r</co",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<code<cod>\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<code>\r"
        ],
        "suffix": "\r\na</cod",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\?xml\\sversion=\"1.0\"\\?>\\n<root (?:xmlns:\\w+=\".+?\".?)+>\\n\\s+([^\\s].+)\\n<\\/root>",
    "inputs": [
      {
        "prefix": [
          "<?xml version=\"1!0\"?>\\x0a<root xmlns:a=\"!\""
        ],
        "suffix": "",
        "pump": [
          "xmlns:a=\"!\"\""
        ]
      },
      {
        "prefix": [
          "<?xml\tversion=\"1a0\"?>\n<root "
        ],
        "suffix": "sion",
        "pump": [
          "xmlns:a=\"a\"\""
        ]
      },
      {
        "prefix": [
          "<?xml version=\"1<0\"?>\\x0a<root xmlns:a=\"<\""
        ],
        "suffix": "",
        "pump": [
          "xmlns:a=\"!\"\""
        ]
      },
      {
        "prefix": [
          "<?xml\tversion=\"1a0\"?>\n<root "
        ],
        "suffix": "?>",
        "pump": [
          "xmlns:a=\"a\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain nameservers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain nameservers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain nameservers:\n"
        ],
        "suffix": "ve",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain nameservers:\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain nameservers:\n"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{\\{((?:.|\\n)*?)\\}\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{{"
        ],
        "suffix": "{a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "{{{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{{{"
        ],
        "suffix": "{a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Z]+)=(\"(?:\\\\.|[^\"])*\") ?",
    "inputs": [
      {
        "prefix": [
          "A=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "A=\""
        ],
        "suffix": "A\\\"a\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "A=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "A=\""
        ],
        "suffix": "=A\\\"a\"A",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script id=\"journeyLinkData\" type=\"application\\/json\">((.|\\s)*?)<\\/script>",
    "inputs": [
      {
        "prefix": [
          "<script id=\"journeyLinkData\" type=\"application/json\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script id=\"journeyLinkData\" type=\"application/json\">"
        ],
        "suffix": "o",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script id=\"journeyLinkData\" type=\"application/json\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<script id=\"journeyLinkData\" type=\"application/json\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script id=\"journeyLinkData\" type=\"application/json\">"
        ],
        "suffix": "a<scr",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script id=\"journeyLinkData\" type=\"application/json\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<<script id=\"journeyLinkData\" type=\"application/json\">"
        ],
        "suffix": "^\t  \r ^\t  \r \r \r \r\t\r\t  \r \r ",
        "pump": [
          "^\t  \r "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- Preact intro -->(.|\\r?\\n)*<!-- Preact intro -->",
    "inputs": [
      {
        "prefix": [
          "<!-- Preact intro -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- Preact intro -->"
        ],
        "suffix": "c",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "<!-- Preact intro -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- Preact intro -->"
        ],
        "suffix": "ct ",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "gecko\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "gecko/0._0"
        ],
        "suffix": "e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "gecko/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "gecko/0._0"
        ],
        "suffix": "eck",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "gecko/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([^\\s=]+)\\s*=\\s*\\\"((?:\\\\.|[^\"])+)\\\"",
    "inputs": [
      {
        "prefix": [
          "\\x00\\x09=\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a=",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\\=\"^\\s"
        ],
        "suffix": "*\\\\s*\\s\\*\\\\s*\\s\\s*\\\\\\s*\\s^\\\\^\\\\s*=",
        "pump": [
          "*\\\\s*\\s\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[([^\\]]+?)\\]\\(((?:[^\\)]|\\s)+?)\\)",
    "inputs": [
      {
        "prefix": [
          "[^](!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "[a]("
        ],
        "suffix": "\t])\t",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "[^](\\"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "[a]("
        ],
        "suffix": "\t)]a[",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "[[^7]"
        ],
        "suffix": "(  \n(  \n\r\t \n\n\t \r\r",
        "pump": [
          "(  \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^a-z0-9]|-)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "$-"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "0",
        "pump": [
          "-\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$a",
        "pump": [
          "$-"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "0",
        "pump": [
          "-\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*[A-Z0-9_\\-]+\\s*=>\\s*[\"'A-Z0-9_\\-.+ ]+,*\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "_ =>\""
        ],
        "suffix": "\\x00",
        "pump": [
          "_=> ."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=>>",
        "pump": [
          "\t-=> --=> "
        ]
      },
      {
        "prefix": [
          "AA=>"
        ],
        "suffix": "AA--Z0-9_=>Z0-AA--Z0-9_=>Z0-9_=>A-ZA=>A-Z-Z0-Z0-9Z370631=",
        "pump": [
          "AA--Z0-9_=>Z0-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n2 NOTE ?(.*(?:\\n3.*)*)",
    "inputs": [
      {
        "prefix": [
          "\n2 NOTE "
        ],
        "suffix": "a",
        "pump": [
          "\n3\n3"
        ]
      },
      {
        "prefix": [
          "\n2 NOTE "
        ],
        "suffix": "a",
        "pump": [
          "\n3\n3"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|#.*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\t\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\u0000",
        "pump": [
          "s#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^.*?Y.log.*?(?:;|\\).*;|(?:\\r?\\n.*?)*?\\).*;).*;?.*?\\r?\\n",
    "inputs": [
      {
        "prefix": [
          "YYlog"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Yalog"
        ],
        "suffix": "o",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[A-Z]+|[A-Z][a-z_\\d\\x80-\\xff]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AAf"
        ],
        "suffix": "\u0000",
        "pump": [
          "uf"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ABABABABABBABA}",
        "pump": [
          "ABAB"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\|[^|]*\\||[-\\w.]*)+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "$|\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([MmLlHhVvCcSs])((?:-?(?:\\d+)?(?:\\.\\d+)?,?\\s?)+)",
    "inputs": [
      {
        "prefix": [
          "C-"
        ],
        "suffix": "0.\t",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "Cd"
        ],
        "suffix": "\u0000",
        "pump": [
          "-dd"
        ]
      },
      {
        "prefix": [
          "C-"
        ],
        "suffix": "0.",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "C,"
        ],
        "suffix": "\u0000",
        "pump": [
          "-d,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<!--\\s*runkit:activate((.|\\n)*)-->(.|\\n)*$",
    "inputs": [
      {
        "prefix": [
          "<!--runkit:activate"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--runkit:activate"
        ],
        "suffix": "--",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^&gt;&gt;&gt;(?:\\s|\\n)*",
    "inputs": [
      {
        "prefix": [
          "&gt;&gt;&gt;"
        ],
        "suffix": "&",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(/\\*(?:.|\\n)*?\\*/)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([/\\w\\.-]*)+\\:([\\d]+)(?:\\:([\\d]+))?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "7fq77fq7/qWinVhjI1",
        "pump": [
          "7fq7"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "fFFHfFFHv0FpZIlKI",
        "pump": [
          "fFFH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*,)*[ \t]*([^ \t]+)[ \t]+realm=\"([^\"]*)\"",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "al,\tr\"a,\trea",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "_|]S7ZXAL1#zMYz^SCx8yl+lF"
        ],
        "suffix": ",v,j;,PJne%`\\o<598@Wo*]SlYhZ:z]Bp<}92MQXR?+\"uLA@`6W7l",
        "pump": [
          ",v,j;,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m=",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<pre\\sclass=\"stdin\">edit\\s([\\w\\/.]+)<\\/pre>\\s+\n                   <pre\\sclass=\"traceback\">\\s+\n                   \\#&lt;IndexError:\\sregexp\\snot\\smatched&gt;\\s+\n                   (.*gorp\\/lib\\/gorp\\/edit.rb.*\\n\\s+)*\n                   ([\\w\\/.]+:\\d+)",
    "inputs": [
      {
        "prefix": [
          "                   "
        ],
        "suffix": "rr",
        "pump": [
          "agorp/lib/gorp/editarb\n\t"
        ]
      },
      {
        "prefix": [
          "                   "
        ],
        "suffix": "rr",
        "pump": [
          "agorp/lib/gorp/editarb\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z][a-z\\d]*([A-Z]+[a-z\\d]*)+$",
    "inputs": [
      {
        "prefix": [
          "aA"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "aA"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AAAA"
        ],
        "suffix": "\u0000",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "FKITFKITBIDUPYIYHN\r\r",
        "pump": [
          "FKIT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<b>.+?)+(<\\/b>)",
    "inputs": [
      {
        "prefix": [
          "<b>!"
        ],
        "suffix": "",
        "pump": [
          "<b>!<b>="
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<",
        "pump": [
          "<b>a<b>a"
        ]
      },
      {
        "prefix": [
          "<b>\u0000<b>\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "<b>\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "<b"
        ],
        "suffix": "><b>b<b><b><<<b>><b>b<b><b><<<b>>><b><b>b<b><b><<b>>b>nbEbBr()HRbNkYN<h<hqU+l><pdzahC",
        "pump": [
          "><b>b<b><b><<<b>"
        ]
      },
      {
        "prefix": [
          "<b>="
        ],
        "suffix": "",
        "pump": [
          "<b>!<b>="
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a</",
        "pump": [
          "<b>a<b>a"
        ]
      },
      {
        "prefix": [
          "<b>\u0000<b>\u0000"
        ],
        "suffix": "",
        "pump": [
          "<b>\u0000<b>\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":root\\W?\\{(.|\\n)*?\\}",
    "inputs": [
      {
        "prefix": [
          ":root{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ":root${"
        ],
        "suffix": "oo",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ":root{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ":root${"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:https?:\\/\\/|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\((?:[^\\s()<>]+|(?:\\([^\\s()<>]+\\)))*\\))+(?:\\((?:[^\\s()<>]+|(?:\\([^\\s()<>]+\\)))*@\\)|[^\\s`!()\\[\\]{};:\\'\".,<>?]))",
    "inputs": [
      {
        "prefix": [
          "https://("
        ],
        "suffix": "",
        "pump": [
          "*\\x00"
        ]
      },
      {
        "prefix": [
          "www.a"
        ],
        "suffix": "s:)",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://("
        ],
        "suffix": "wwwawwwa-z0-9.\\-?:",
        "pump": [
          "wwwa"
        ]
      },
      {
        "prefix": [
          "https://{"
        ],
        "suffix": "",
        "pump": [
          "}}"
        ]
      },
      {
        "prefix": [
          "www.a"
        ],
        "suffix": "-(a$h@w.wwh/(ahwww0.wa(a$h@w.hww",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@http://("
        ],
        "suffix": "?:ht?:https?:\\/\\/|",
        "pump": [
          "?:ht"
        ]
      },
      {
        "prefix": [
          "https://("
        ],
        "suffix": "",
        "pump": [
          "*\\x00"
        ]
      },
      {
        "prefix": [
          "www.a"
        ],
        "suffix": "-((a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://("
        ],
        "suffix": "?:ht?:https?:\\/\\/|",
        "pump": [
          "?:ht"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[!-)+-<>-~][!-~]*[+-](,[!-)+-<>-~][!-~]*[+-])+$",
    "inputs": [
      {
        "prefix": [
          ">-,-+"
        ],
        "suffix": "\\x00",
        "pump": [
          ",.+,++"
        ]
      },
      {
        "prefix": [
          "a+"
        ],
        "suffix": "a",
        "pump": [
          ",a+,a+"
        ]
      },
      {
        "prefix": [
          "!+,!+,!"
        ],
        "suffix": "",
        "pump": [
          "-,!+,!"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+=]*)*(\\.(mp3))$",
    "inputs": [
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "a\u0000aa/+"
        ],
        "suffix": "",
        "pump": [
          "d+"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "0554055497962664075",
        "pump": [
          "0554"
        ]
      },
      {
        "prefix": [
          "i"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps://a.",
        "pump": [
          "aaa."
        ]
      },
      {
        "prefix": [
          "a\u0000a/~"
        ],
        "suffix": "",
        "pump": [
          "d~"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0490049040663228600",
        "pump": [
          "0490"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z]+[a-zA-Z0-9_]*(::[a-zA-Z]+[a-zA-Z0-9_]*)+$",
    "inputs": [
      {
        "prefix": [
          "a0::A"
        ],
        "suffix": "!",
        "pump": [
          "::AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a:a",
        "pump": [
          "::aa"
        ]
      },
      {
        "prefix": [
          "A::A::AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "a::AA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'((?:\\\\.|[^\\'])*)'\\s*(.*)$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\:\\<\\\b\\:\\<\\\b|)(?])<(?*]?;.\\@:\b{;?:\\\\@:\b{;;}?=>~><?::\\?:\\\\@:\b{\b~:;:==|}>;?avlh\\.f(|.erwx:\\mt*;}=?",
        "pump": [
          "\\:\\<\\\b"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+://)(.+@)*([\\w\\d\\.]+)(:[\\d]+){0,1}/*(.*)",
    "inputs": [
      {
        "prefix": [
          "a://"
        ],
        "suffix": "",
        "pump": [
          "{@@@"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "$",
        "pump": [
          "a@a@"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "",
        "pump": [
          "{@@@"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "$",
        "pump": [
          "a@a@"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "",
        "pump": [
          "{@@@"
        ]
      },
      {
        "prefix": [
          "a://"
        ],
        "suffix": "$",
        "pump": [
          "a@a@"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "//.*(\\n[ \\t]*//.*)*",
    "inputs": [
      {
        "prefix": [
          "//"
        ],
        "suffix": "a",
        "pump": [
          "\n//\n//"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "a",
        "pump": [
          "\n//\n//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "ProjectSection\\(ProjectDependencies\\) = postProject(?:.|\\n)*?EndProjectSection",
    "inputs": [
      {
        "prefix": [
          "ProjectSection(ProjectDependencies) = postProject"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ProjectSection(ProjectDependencies) = postProject"
        ],
        "suffix": "ojec",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "ProjectSection(ProjectDependencies) = postProject"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "ProjectSection(ProjectDependencies) = postProject"
        ],
        "suffix": "(Pro",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*)<(\\/)?([\\w\\-:]+)((?:\\s+|(?:\\s+[\\w\\-:]+)|(?:\\s+[\\w\\-:]+=[^\\s\"'<>]+)|(?:\\s+[\\w\\-:\"]+=\"[^\"]*\")|(?:\\s+[\\w\\-:\"]+='[^']*'))*)(\\/)?>(\\s*)",
    "inputs": [
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09-"
        ]
      },
      {
        "prefix": [
          "</a\t"
        ],
        "suffix": "/",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<Q"
        ],
        "suffix": "\r\r\t\r\r\r\t\r\n\n      ",
        "pump": [
          "\r\r\t\r"
        ]
      },
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09-"
        ]
      },
      {
        "prefix": [
          "</a\t"
        ],
        "suffix": "a=</\"\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<p"
        ],
        "suffix": "\r \t\n\r \t\n\n\n\t\t\n\r\n\t",
        "pump": [
          "\r \t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+)+\\.(\\d+)\\.(\\d+)\\.(\\d+)/(\\d+)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "027502751584343205",
        "pump": [
          "0275"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--((.|[\\r\\n])*?)-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^__as(?:_[^\\W\\d]\\w*)+$",
    "inputs": [
      {
        "prefix": [
          "__as_A"
        ],
        "suffix": "!",
        "pump": [
          "_A_A"
        ]
      },
      {
        "prefix": [
          "__as"
        ],
        "suffix": "#",
        "pump": [
          "_a_a"
        ]
      },
      {
        "prefix": [
          "__a"
        ],
        "suffix": "s_s___s_s___________Si2cPoBmbKI___as_sGI?",
        "pump": [
          "s_s___"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:\\\\.|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@\"(\\\\.|.)*?\"",
    "inputs": [
      {
        "prefix": [
          "@\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "@\""
        ],
        "suffix": "@\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "@\"\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "@\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "@\""
        ],
        "suffix": "@\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "@\"."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\"@\"^\\.|"
        ],
        "suffix": "\\\\\\.\\\\\\\\\\.\\\\\\.heubtidabatdzx|\\\\\\.heubtidabatdzxkxnwlphfedohztrsnekpclumfugard",
        "pump": [
          "\\\\\\.\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+[smhdw]?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "dd",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "218921891909587886B",
        "pump": [
          "2189"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^%(.*)+?%",
    "inputs": [
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "&"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "%a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "%\t%"
        ],
        "suffix": "b:\"$b:\"$Dw\"p3\tZx@",
        "pump": [
          "b:\"$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<.*?>)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "<><\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "<><\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([ABCDEFGIJKLNPRST]+\\d*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AAC"
        ],
        "suffix": "\u0000",
        "pump": [
          "RC"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ABCDABCDEFGIJKLNPR+",
        "pump": [
          "ABCD"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "a",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AAF"
        ],
        "suffix": "\u0000",
        "pump": [
          "RF"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "BCDEBCDEFGIJKLNPRa",
        "pump": [
          "BCDE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z0-9-\\.]+(?:-[A-Za-z0-9-\\.]+)*$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "!",
        "pump": [
          "-.-."
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "-a-a"
        ]
      },
      {
        "prefix": [
          "---"
        ],
        "suffix": "\u0000",
        "pump": [
          "----"
        ]
      },
      {
        "prefix": [
          "-A-Za"
        ],
        "suffix": "-z0-A-Z--z0-A-Z-Za-z0-A-Za-zA-Za--9-\\",
        "pump": [
          "-z0-A-Z-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([\"](\\\\.|[^\"]|\\\\\")*?[\"])+)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\a",
        "pump": [
          "\"\\a\""
        ]
      },
      {
        "prefix": [
          "\"\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[_]_\"(?:[^\"\\\\]+|\\\\.)+\"",
    "inputs": [
      {
        "prefix": [
          "__\"!"
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "__\"a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "__\""
        ],
        "suffix": "__++__++__+_  _ :))",
        "pump": [
          "__++"
        ]
      },
      {
        "prefix": [
          "__\"`"
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "__\"a"
        ],
        "suffix": "_\"\"__",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"__\""
        ],
        "suffix": "wAuTwAuTUwGRCAGEAn",
        "pump": [
          "wAuT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\((@\\w+\\W*\\s*)+\\)",
    "inputs": [
      {
        "prefix": [
          "(@0"
        ],
        "suffix": "",
        "pump": [
          "@0\\x09"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": ")\ta",
        "pump": [
          "@a\t"
        ]
      },
      {
        "prefix": [
          "(@a((@a(@a(@a@a(@a"
        ],
        "suffix": "   \r\t\n\t @aa@     \r\t\n\t @aa@   \r\t\n\t \n\r \r\t  \t\t  \r\n\t ",
        "pump": [
          "   \r\t\n\t @aa@  "
        ]
      },
      {
        "prefix": [
          "(@0"
        ],
        "suffix": "",
        "pump": [
          "@0\\x09"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": ")\t",
        "pump": [
          "@a\t"
        ]
      },
      {
        "prefix": [
          "(@dg(@1~("
        ],
        "suffix": "@1~\n\t\r\n\r\n   @1~\n\t\r\n\r\n   \t\t \t@1~\n  \n\r\t\n \n\n \n\r  \t\t\r\r  \r\t\t",
        "pump": [
          "@1~\n\t\r\n\r\n   "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[Mm](?:\\d|[eE.,+-]|[LlHhVvQqCcTtSsAaZz]|\\W)+",
    "inputs": [
      {
        "prefix": [
          "M"
        ],
        "suffix": "MM",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "M"
        ],
        "suffix": "aB",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{% apibody %\\}((.*\\n)*?)\\{% endapibody %\\}",
    "inputs": [
      {
        "prefix": [
          "{% apibody %}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "{% apibody %}"
        ],
        "suffix": "% apibody %",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "{% apibody %}"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "{% apibody %}"
        ],
        "suffix": "% apibody ",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?://([-\\w\\.]+)+(/([\\w/_\\.]*(\\?\\S+)?(#\\S+)?)?)?)",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "/\t",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*(.|\\n)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/\n*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w+\\-].?)+@[a-z\\d\\-]+(\\.[a-z]+)*\\.[a-z]+",
    "inputs": [
      {
        "prefix": [
          "+"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+@-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          "B4\bh\b"
        ],
        "suffix": "bEuQjmbEuQjmNTs+_Pz6u!",
        "pump": [
          "bEuQjm"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a.@",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "++"
        ],
        "suffix": "",
        "pump": [
          "w+"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "QxKUCwQxKUCwSh6WSfL-62w",
        "pump": [
          "QxKUCw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test6Module(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "mpo",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "imports: [iimports:"
        ],
        "suffix": " [ \\   [ \\  \\\t\r\t\t\r \t\r\t\t\t",
        "pump": [
          " [ \\  "
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "]imports: [*"
        ],
        "suffix": " \t   \t  \t\t\t\n  \r\t  \r",
        "pump": [
          " \t  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/***/",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\r\n\n\n\r\n\n\n\r\n\r\r\t\r\b\r\n\t\r",
        "pump": [
          "\r\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[\\^((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]:",
    "inputs": [
      {
        "prefix": [
          "[^!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "[^"
        ],
        "suffix": "]:]^",
        "pump": [
          "a\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z0-9A-Z]+[-|_|\\\\.]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\\\.)+[a-zA-Z]{2,}$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "UE5UUE5UDVDBQRTEPL",
        "pump": [
          "UE5U"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "dO6jdO6j1Dbkqna4SM",
        "pump": [
          "dO6j"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(-?\\d+(\\.\\d+)?([eE]-?\\d+)?)\t(\\S+( \\S+)*)(\t(-?\\d+(\\.\\d+)?)([eE]-?\\d+)?)?$",
    "inputs": [
      {
        "prefix": [
          "-0\ta"
        ],
        "suffix": "\t-0\t-0.",
        "pump": [
          " a a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{@([^\\p{javaWhitespace}]+)((?:.|\\n)*)\\}",
    "inputs": [
      {
        "prefix": [
          "{@a"
        ],
        "suffix": "{",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "{@a"
        ],
        "suffix": "}a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\\\\\|\\\\'|[^'\\n])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a\\''a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\pExT{o|tw",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[$#_A-Za-z]{1}[$_\\w()]*((\\.[$#_A-Za-z]{1}[$_\\w()]*)|(\\[[$_.\\w()\\[\\]]+\\])|(\\['.*'\\])|(\\[\".*\"\\]))*$",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "!",
        "pump": [
          ".a[$][]]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a['a",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'([^']|.)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\r=It\r=ItI%(tEG:SD8",
        "pump": [
          "\r=It"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "s'"
        ],
        "suffix": "41b&41b&<Rp81Dg_&",
        "pump": [
          "41b&"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*(?:\\n\\s*)+)([^\\s].*?)(\\s*)$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\r\n\n\r\n\n\n\n\n",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- begin-scripts -->(?:.*\\r?\\n\\s)*<!-- end-scripts -->",
    "inputs": [
      {
        "prefix": [
          "<!-- begin-scripts -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a\\x0b"
        ]
      },
      {
        "prefix": [
          "<!-- begin-scripts -->"
        ],
        "suffix": "-s\n",
        "pump": [
          "\r\n\t"
        ]
      },
      {
        "prefix": [
          "<!-- begin-scripts -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a\\x0b"
        ]
      },
      {
        "prefix": [
          "<!-- begin-scripts -->"
        ],
        "suffix": "nd-scri",
        "pump": [
          "\r\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\|.*?[\\n\\r]{1,2}){3,}",
    "inputs": [
      {
        "prefix": [
          "|\n|\n"
        ],
        "suffix": "\na",
        "pump": [
          "|\n\n"
        ]
      },
      {
        "prefix": [
          "|\n|\n"
        ],
        "suffix": "\na",
        "pump": [
          "|\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "|\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9])+([a-zA-Z0-9_\\.\\+-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$",
    "inputs": [
      {
        "prefix": [
          "a-@a."
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a@aa"
        ],
        "suffix": "@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0@---."
        ],
        "suffix": "\u0000",
        "pump": [
          "0."
        ]
      },
      {
        "prefix": [
          "r@"
        ],
        "suffix": "-wTr-wTr6a-zA-Z0-9@",
        "pump": [
          "-wTr"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<\\?php\\s*echo )?lang\\('((?:[^\\\\']+|\\\\.)*)'([,)])(;\\s*\\?>)?",
    "inputs": [
      {
        "prefix": [
          "<?phpecho lang('"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "lang('a"
        ],
        "suffix": "<?",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "klang('"
        ],
        "suffix": "uyjVuyjVi|5S6,^EW\\",
        "pump": [
          "uyjV"
        ]
      },
      {
        "prefix": [
          "<?phpecho lang('"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "lang('a"
        ],
        "suffix": "ng'<l",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ";lang('"
        ],
        "suffix": "<?ph<?php<php*echo ",
        "pump": [
          "<?ph"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "C (\\S+) ; WX (\\S+) ; N (\\S+) ; B (\\S+) (\\S+) (\\S+) (\\S+) ;((?: L \\S+ \\S+ ;)+)?",
    "inputs": [
      {
        "prefix": [
          "C a ; WX a ; N a ; B a a a a ;"
        ],
        "suffix": " L",
        "pump": [
          " L a  a ;"
        ]
      },
      {
        "prefix": [
          "C a ; WX a ; N a ; B a a a a ;"
        ],
        "suffix": " Wa\tC aC ; WX  ; ; N  ; ; B  ;  ;  ; N",
        "pump": [
          " L a  a ;"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z_$][a-zA-Z_0-9$]*([.]?[a-zA-Z_$][a-zA-Z_0-9$]*)*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "!",
        "pump": [
          "A$"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a..",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaNCaaNCslRnbaRnbaa*",
        "pump": [
          "aaNC"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *?\\/\\/ WORKSHOP_START.*?\\n((.|\\n|\\r)*?) *\\/\\/ WORKSHOP_END.*?\\n",
    "inputs": [
      {
        "prefix": [
          "// WORKSHOP_START\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "// WORKSHOP_START\n"
        ],
        "suffix": "A",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "// WORKSHOP_START\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "// WORKSHOP_START\n"
        ],
        "suffix": "P_",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*([^\\,]+(?:\\\\.[^\\,]*)*)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t,",
        "pump": [
          "\\a\\\\a"
        ]
      },
      {
        "prefix": [
          "\u0000."
        ],
        "suffix": ",",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ",\\\t,",
        "pump": [
          "\\a\\\\a"
        ]
      },
      {
        "prefix": [
          "\u0000."
        ],
        "suffix": ",",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+:[a-zA-Z\\/]+,*)+$",
    "inputs": [
      {
        "prefix": [
          "a:/"
        ],
        "suffix": "!",
        "pump": [
          "a:/A_:/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",a::",
        "pump": [
          "a:aa"
        ]
      },
      {
        "prefix": [
          "w:/w:/a"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww:/a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "c:YxOnxKs:Yxc:YxOnxKs:YxOnxK1Y:YgZXE:sscnxM8:YgZXE4",
        "pump": [
          "c:YxOnxKs:Yx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\{?\"([^\"\\\\]|\\\\.)*\"|[^,{}]+)+([,}]+)",
    "inputs": [
      {
        "prefix": [
          "|"
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "V]oHV]oH\b65\n\t[kK",
        "pump": [
          "V]oH"
        ]
      },
      {
        "prefix": [
          "|"
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\n9J\t\n9JNt9\bQ'^Z\n",
        "pump": [
          "\t\n9J"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\w+(\\s+(\"[^\"]*\"|'[^']*'|[^>])+)?>|<\\/\\w+>",
    "inputs": [
      {
        "prefix": [
          "<a ("
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "<a\t"
        ],
        "suffix": "\t>'",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<ws\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "<a ="
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "<a\t"
        ],
        "suffix": "a\t<a",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "<ws\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'([^\\\\']*(\\\\.)*)*'$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "+n@1+n@1Exv?@.(e\r",
        "pump": [
          "+n@1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*[+-]?\\d+)(?:\\.(\\d+)*)?",
    "inputs": [
      {
        "prefix": [
          "+0.0"
        ],
        "suffix": "\t+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d\u0000d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{([a-zA-Z0-9]+=[a-zA-Z0-9]+(, )?)+}",
    "inputs": [
      {
        "prefix": [
          "{a=0"
        ],
        "suffix": "",
        "pump": [
          "a=00A=0"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "a{",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "Y{"
        ],
        "suffix": "TM=GfapderpwTM=GfapderpwelhvducyqmslrisaelGQ=MTQcyqmslrisaelG=GQrisaelG",
        "pump": [
          "TM=Gfapderpw"
        ]
      },
      {
        "prefix": [
          "{a=0"
        ],
        "suffix": "",
        "pump": [
          "a=00A=0"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": ",",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          "~{"
        ],
        "suffix": "t=oaf066Cd86t=oaf066Cd863efA24BfD6661E13b10bb8=oaf066Cd863efA24BfD666661E13b10bb804eb18f6aN",
        "pump": [
          "t=oaf066Cd86"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?://)?([\\da-z\\.-]+)\\.([a-z\\.]{2,})([/\\w \\.-]*)*/?$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": "t0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ht.hht.httprdb8IUVvnR{",
        "pump": [
          "ht.h"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "tp0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x.thx.thybqszpojnnru}",
        "pump": [
          "x.th"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+):(.*(?:\\n\\t.*)*)",
    "inputs": [
      {
        "prefix": [
          "a:"
        ],
        "suffix": "a",
        "pump": [
          "\n\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((http[s]?:\\/\\/)([a-zA-Z0-9_.]+))?:?([0-9]+)?([\\/]?[~]?(\\.?[^.]+[~]?)*)",
    "inputs": [
      {
        "prefix": [
          ":/~.a"
        ],
        "suffix": "tps:..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": ".",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s)*(\\/\\*.*\\*\\/)*\\s*\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "/**//**/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t*/",
        "pump": [
          "/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+?)(?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*=>",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "/**//**/"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "=",
        "pump": [
          "\t/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9])$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0\\00\\0\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\$$",
        "pump": [
          "a\\aa\\aa\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\\\9\\99\\9Z0-9\\-Aa\\\\9\\99\\9Z0-9\\-Az\\\\Z0-9\\\\zA-Z0-9\\0\\\\zA0\\99\\\\0-9\\\\zA0-",
        "pump": [
          "a\\\\9\\99\\9Z0-9\\-A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(    .*[\\n])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " a\n ",
        "pump": [
          "    \n    \n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a\n ",
        "pump": [
          "    \n    \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z]+(\\.?-?_?[A-Za-z0-9-])+$",
    "inputs": [
      {
        "prefix": [
          "a0"
        ],
        "suffix": "!",
        "pump": [
          "-a"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a..",
        "pump": [
          ".-_a"
        ]
      },
      {
        "prefix": [
          "A-a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^']*[^EIOUYaeiouy??????????????????????????????])('[hH]?([AEIOUYaeiouy??????????????????????????????][^']*)+)+",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "H'$",
        "pump": [
          "'aa"
        ]
      },
      {
        "prefix": [
          "\u0000'?'?"
        ],
        "suffix": "'",
        "pump": [
          "O'?"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "H'",
        "pump": [
          "'aa"
        ]
      },
      {
        "prefix": [
          "\u0000'?'i"
        ],
        "suffix": "'",
        "pump": [
          "Y'i"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<script(.|\\n)*?>(.|\\n)*?(<\\/script>){1}?)",
    "inputs": [
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "ip<scrip",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^msgstr\\[([0-9]+)\\] \"(((\\\\.)|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "msgstr[0] \""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "msgstr[0] \""
        ],
        "suffix": "g",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "msgstr[0] \""
        ],
        "suffix": "\\\\^D3\\0m[\\\\\\^D3\\0m[\\^D3\\0m7*[+8:\b<>;=~:?|\b:\b~|{}\\^\\[)9E\\\\\\^D3WXNTZIL9n4PZlM",
        "pump": [
          "\\\\^D3\\0m[\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>)",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a=''\\x090=\"\"\\x090=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<wswsw=\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"sw=\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/((?:(?:\\{.+?\\})|(?:[^/{}]+))+)",
    "inputs": [
      {
        "prefix": [
          "/a"
        ],
        "suffix": "}/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "}/",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "https://a.aa"
        ],
        "suffix": "t0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "ht.hht.htthttpCVljc6ka|",
        "pump": [
          "ht.h"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "https://a.a"
        ],
        "suffix": "tp0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://-."
        ],
        "suffix": "",
        "pump": [
          "d."
        ]
      },
      {
        "prefix": [
          "http:/"
        ],
        "suffix": "/a.h/a.http/a.ha.htpa\\.",
        "pump": [
          "/a.h"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:.|\\n)*?)<script>((?:.|\\n)*)<\\/script>((?:.|\\n)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<script><script",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*Bearer\\s+([^,\\s=\"]+?)=\"?([^\"]*?)\"?\\s*\n      (,\\s*([^,\\s=\"]+?)=\"([^:]*?)\"\\s*)*$",
    "inputs": [
      {
        "prefix": [
          "      "
        ],
        "suffix": "\t:\t",
        "pump": [
          ",a=\"\",a=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^\\s{;][^{;]*\\{(?:[^{}]*\\{[^{}]*\\}[^{}]*|[^{}]*)*\\}",
    "inputs": [
      {
        "prefix": [
          "|{"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "a{"
        ],
        "suffix": "\t;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "^/6!d=nN6IA_45 NL[3,o@Hb @jI?Q72<o#KqY=aF{"
        ],
        "suffix": "Z \rzZ \rzC*=",
        "pump": [
          "Z \rz"
        ]
      },
      {
        "prefix": [
          "|{"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "a{"
        ],
        "suffix": "\t}{a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-\tT%W<-&wQt{"
        ],
        "suffix": "-m\t,-m\t,/lh;3",
        "pump": [
          "-m\t,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\[\\s\\S]|[^\"])*\"|'(\\\\[\\s\\S]|[^'])*'|(\\?)",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\"a'\\a\"?",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\\'\\]"
        ],
        "suffix": "^\\((\\\\(\\^\\((\\\\(\\]s(]|'^S|*'s|([\\|\\ \\\t'\n[''[^**)*'''[\\\\|S\\",
        "pump": [
          "^\\((\\\\(\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\"a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "T\\N;[\\])]\\*\\|(|^]|(]\"\\((\\\\[][.["
        ],
        "suffix": "\\)\\|]\\*\\\\)\\|]\\*\\|(|]')[.[\\)\\|]\t\\['||] 7RAH[#",
        "pump": [
          "\\)\\|]\\*\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\*??) = ((\\(\\) .*)+)",
    "inputs": [
      {
        "prefix": [
          "* = "
        ],
        "suffix": "a",
        "pump": [
          "() () "
        ]
      },
      {
        "prefix": [
          "* = "
        ],
        "suffix": "a",
        "pump": [
          "() () "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\[((?:\\\\\\]|.|\\n)*?)\\]\\}",
    "inputs": [
      {
        "prefix": [
          "{["
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{["
        ],
        "suffix": "]",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "{["
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{["
        ],
        "suffix": "]}\\{",
        "pump": [
          "\\]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*)+\\.js$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "sa.j",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ex+OEx+O.a}a5Lt;t",
        "pump": [
          "Ex+O"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "sa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}2U,}2U,v\\JD]RuF2",
        "pump": [
          "}2U,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*-+\\*\\/\\n(?:\\s*\\/\\/.*)*\\s*lodash\\.\\w+ *=[\\s\\S]+?lodash\\.VERSION *=.+",
    "inputs": [
      {
        "prefix": [
          "/*-*/\\x0a"
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          "/*-*/\n"
        ],
        "suffix": "\t//lodash.al=",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          ">/*-*/\n"
        ],
        "suffix": "//lo\t/////lo\t////&oF)>cS@yadol\t //loda\t////&oF)>\t////&oF",
        "pump": [
          "//lo\t///"
        ]
      },
      {
        "prefix": [
          "/*-*/\\x0a"
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          "/*-*/\n"
        ],
        "suffix": "\t//lodash.alo",
        "pump": [
          "\t//\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^;']+|'([^']*)')+[;]?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "'a;a'a;'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "<\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "'a;;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "<\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ")(;\\",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "\n\\",
        "pump": [
          "\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9][a-zA-Z0-9_]?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "__",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aababaaababa85bfbaba85Waa-",
        "pump": [
          "aababa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\D|\\.|-)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".0",
        "pump": [
          "a."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\s)*[a-z]+(.|\\\\s)*:",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "\\s"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\a",
        "pump": [
          "a\\s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "%([xX])(?:{(.*?)})*",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**/*",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*/**\n\b\r\t\r\t\n\t"
        ],
        "suffix": "\t\n\b\r\r\n\t\n\b\r\r\n\b\b\b\t\n\r\b",
        "pump": [
          "\t\n\b\r\r\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\r?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r\\n?|\\n\\r?){2,}|((?:\\r\\n?|\\n\\r?)\\s*\\-\\s+)",
    "inputs": [
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "--",
        "pump": [
          "\r\n\r"
        ]
      },
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "-",
        "pump": [
          "\r\n\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "--",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#EXTM3U(\\s+\\S+?=\\S+)*",
    "inputs": [
      {
        "prefix": [
          "#EXTM3U"
        ],
        "suffix": "#\ta\t",
        "pump": [
          "\ta==a"
        ]
      },
      {
        "prefix": [
          "#EXTM3U"
        ],
        "suffix": "M3\ta#",
        "pump": [
          "\ta==a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\['((?:\\\\'|.)*)'\\]",
    "inputs": [
      {
        "prefix": [
          "['"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "['"
        ],
        "suffix": "]a",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "'\\'\\'\\'\\'\\'\\'|\\'|\\'\\'\\'(^\\'(}:~''\\?{>\b|(}';'>'}\\\\'|)'':;)['\\:|<*|?@]'\b^>.",
        "pump": [
          "'\\'\\'\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?::[^\\r\\n]+\\s*\\r?\\n)+)\\s*(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          ":a\t\r\n"
        ]
      },
      {
        "prefix": [
          ":H"
        ],
        "suffix": "+\t\r\n:e\t\t\n:+\t\r\n:e\t\t\n:^\t\t\t\r\n:^:08185183:^^:^^:\t\t\n:^^^](cE*[\t\t\t\t\r\r",
        "pump": [
          "+\t\r\n:e\t\t\n:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "var (__extends|__decorate|__metadata|__param) = \\(.*\\r?\\n\\s+(.*\\r?\\n)*\\s*\\};",
    "inputs": [
      {
        "prefix": [
          "var __extends = (\\x0a "
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "var __param = (\r\n\t"
        ],
        "suffix": "ar ",
        "pump": [
          "a\r\n"
        ]
      },
      {
        "prefix": [
          "var __extends = (\\x0a "
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "var __param = (\r\n\t"
        ],
        "suffix": "adat",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-z\\-]{0,6}://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "inputs": [
      {
        "prefix": [
          "://"
        ],
        "suffix": "#",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "://"
        ],
        "suffix": "-%A\u0000aa",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "://"
        ],
        "suffix": "#",
        "pump": [
          "aA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(ip[honead]+)(?:.*os\\s([\\w]+)*\\slike\\smac|;\\sopera)",
    "inputs": [
      {
        "prefix": [
          "ipno;os\\x09"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "ipaos\ta"
        ],
        "suffix": "mao\tlike",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ipaossww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "ipno;oipos\\x09"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "ipaos\ta"
        ],
        "suffix": "oo",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ipaossw"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "iphoneos\t"
        ],
        "suffix": "likalikadophonea",
        "pump": [
          "lika"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(sub \\w+):(\\n(?: +.*?\\n)*)",
    "inputs": [
      {
        "prefix": [
          "sub a:\n"
        ],
        "suffix": " a",
        "pump": [
          "  \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*\\*GC;\\n",
    "inputs": [
      {
        "prefix": [
          "typedef struct {\\x0a"
        ],
        "suffix": "",
        "pump": [
          "~\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "typedef struct{\n"
        ],
        "suffix": "\n\n*\n",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z][a-zA-Z\\d]*([A-Z][a-zA-Z\\d]*)*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "aAA"
        ],
        "suffix": "\u0000",
        "pump": [
          "dA"
        ]
      },
      {
        "prefix": [
          "v5UOYbMx"
        ],
        "suffix": "FMVHFMVHWgiIeFgvia\b",
        "pump": [
          "FMVH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\"([^\\\\\\\"]|\\\\.|\\\\)*\\\")|(\\'([^\\\\\\']|\\\\.|\\\\)*\\')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\'\\\\\\\\\\'\\\\\\\\'\\\\\\'\\\\'a147CCb5cbd56DBaB1FcAf736F46D2dCd232c4d863c8",
        "pump": [
          "\\'\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\\\""
        ],
        "suffix": "\\\\\\80109\\\\\\\\\\80109\\\\^0404104\\zvIu7ODiMbWG1frpbOSS5795828822398430h\\SP\\FTzrM\\p11683",
        "pump": [
          "\\\\\\80109\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "LEADER .+\\n(\\d\\d\\d .. .+\\n)+",
    "inputs": [
      {
        "prefix": [
          "LEADER a\n"
        ],
        "suffix": "LE",
        "pump": [
          "000 aa a\n000 aa a\n"
        ]
      },
      {
        "prefix": [
          "LEADER a\n"
        ],
        "suffix": "EA",
        "pump": [
          "000 aa a\n000 aa a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/\\/.*?\\\\n)|(\\/\\*(.|\\\\n)*?\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "a\\",
        "pump": [
          "\\n"
        ]
      },
      {
        "prefix": [
          "/*/*\\/*"
        ],
        "suffix": "\\n7\\n\\n7\\n\\n7\\n\\n7\\n\b;}?|}\b::}<n/\\n7fed1dEEb3F\\/\\?\\\\n\\/\\/.*?\\/*\\n494307116898692587526",
        "pump": [
          "\\n7\\n\\n7\\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "a\\",
        "pump": [
          "\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:( *[-*_]) *){3,}(?:\\n *)+\\n",
    "inputs": [
      {
        "prefix": [
          "__*"
        ],
        "suffix": "",
        "pump": [
          "* *"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": " **\n*",
        "pump": [
          " * "
        ]
      },
      {
        "prefix": [
          "***-"
        ],
        "suffix": "",
        "pump": [
          " -"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "* - - - * - - - -  -* - *_ -* -  -",
        "pump": [
          "* - - - "
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "",
        "pump": [
          "* *"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " \n *",
        "pump": [
          " * "
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "",
        "pump": [
          " *"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " * *   * * *   * *  *    * *   *\n ",
        "pump": [
          " * *   *"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|(\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|`(?:\\\\.|[^`])*`)",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "`a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "`a",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^bytes=((\\d*-\\d*,? ?)+)$",
    "inputs": [
      {
        "prefix": [
          "bytes=-"
        ],
        "suffix": "\\x00",
        "pump": [
          "-0-"
        ]
      },
      {
        "prefix": [
          "bytes="
        ],
        "suffix": "bb",
        "pump": [
          "0-0"
        ]
      },
      {
        "prefix": [
          "bytes=--"
        ],
        "suffix": "\u0000",
        "pump": [
          "d-"
        ]
      },
      {
        "prefix": [
          "bytes="
        ],
        "suffix": "9-9-7-3-9-9-7-3-3--9--9-7-337351-7-,35",
        "pump": [
          "9-9-7-3-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(von|van|de|den|der)\\s+\\S\\S+\\s+([a-z]+\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "von \\x00!\\x09a"
        ],
        "suffix": "\\x00",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "der\taa\ta"
        ],
        "suffix": "e\t$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "desSSsaa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "von\tvr\t"
        ],
        "suffix": "vvfyvvfyrxzrstgxhj+",
        "pump": [
          "vvfy"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```(blocks?|typescript)\\s+((.|\\s)+?)\\s*```",
    "inputs": [
      {
        "prefix": [
          "```blocks !"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```blocks\t"
        ],
        "suffix": "c",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```blocks\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "```blocks a"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```blocks\t"
        ],
        "suffix": "lo",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```blocks\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\pL+([- _.]+|\\pN+|\\pL+)+$",
    "inputs": [
      {
        "prefix": [
          "a "
        ],
        "suffix": "#",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "pL -"
        ],
        "suffix": "\u0000",
        "pump": [
          "_-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "iDpRiDpRXZxFVPhuJ\nJ",
        "pump": [
          "iDpR"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\w\\d.]*)\\s*=\\s*[\\w\\d.]*\\.getContext\\(?[`'\"](experimental-)*webgl[`'\"](,[\\w\\d\\s{}:.,!]*)*\\)?(\\s*\\|\\|\\s*[\\w\\d.]*\\.getContext\\(?[`'\"](experimental-)*webgl[`'\"](,[\\w\\d\\s{}:.,!]*)*\\)?)*",
    "inputs": [
      {
        "prefix": [
          "=.getContext(\"webgl\""
        ],
        "suffix": "=a.getCont",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "=.getContext(\"webgl\""
        ],
        "suffix": "\"experimen",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?|ftp|mms):\\/\\/((([A-z0-9]+[_\\-]?[A-z0-9]+\\.)*[A-z0-9]+\\-?[A-z0-9]+\\.[A-z]{2,})|(([0-9]{1,3}\\.){3}[0-9]{1,3}))(\\/.*)*\\/?",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          "0_`."
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "a_.a_-a",
        "pump": [
          "a_a."
        ]
      },
      {
        "prefix": [
          "ftp://000"
        ],
        "suffix": "",
        "pump": [
          "0000"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          "0_`."
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "a_.a_-a",
        "pump": [
          "a_a."
        ]
      },
      {
        "prefix": [
          "ftp://000"
        ],
        "suffix": "",
        "pump": [
          "0000"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          "0_`."
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "a_.a_-a",
        "pump": [
          "a_a."
        ]
      },
      {
        "prefix": [
          "ftp://00\u0000A/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.+/)*(\\d{2,4}-\\d{1,2}-\\d{1,2})-(.*)(\\.[^.]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/.",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/.",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z](?:-?[a-z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "--",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a995a995473317561837-",
        "pump": [
          "a995"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk)[\\/\\s-]?([\\w\\.-]+)*",
    "inputs": [
      {
        "prefix": [
          "redhat\ta"
        ],
        "suffix": "r\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "archw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "redhat\ta"
        ],
        "suffix": "k\t$mupclinuxo",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "archw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^0-9]*)+|[0-9]+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a0",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(doc_site_install\\s+::\\s+(.+\\n)+)([ \\t]*\\n)",
    "inputs": [
      {
        "prefix": [
          "doc_site_install ::  \\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "doc_site_install\t::\t"
        ],
        "suffix": "l",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "fxios\t0._0"
        ],
        "suffix": "x",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "fxios/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "fxios\t0._0"
        ],
        "suffix": "iri",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "fxios/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ";|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\n",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\n;\"\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          ".\""
        ]
      },
      {
        "prefix": [
          "'\\\\\\\":\\bF"
        ],
        "suffix": "7\\:?\\:\\\\7\\:?\\:\\\\??:\\\\4\\\\.\\\\.",
        "pump": [
          "7\\:?\\:\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*(.|\\n|\\r)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z]+\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\x00",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaaaaaaaaaaaaaaa\b",
        "pump": [
          "aaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(-?(?:[_a-z]|\\\\[\\da-f]+ ?)(?:[\\w-]|\\\\\\\\[\\da-f]+ ?)*)\\s*:",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "",
        "pump": [
          "\\\\00"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "\\a\t::",
        "pump": [
          "\\\\aaa"
        ]
      },
      {
        "prefix": [
          "_\\a"
        ],
        "suffix": "",
        "pump": [
          "d\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/albums\\/(.+?)\\/(?:(.*)\\/)*(.+?)\\.(.+?)$",
    "inputs": [
      {
        "prefix": [
          "/albums/!/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/albums/a/"
        ],
        "suffix": "a/.",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "/albums/\u0000/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          "/albums/\\/albums/\\a.?^+.:/."
        ],
        "suffix": "//\\/^\\/a//\\/^\\/al//\\/^\\/albu/a",
        "pump": [
          "//\\/^\\/a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(( '.*')|( \".*\")|('.*')|(\".*\"))+;*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          " ''''''"
        ]
      },
      {
        "prefix": [
          "\"\"\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " \";a",
        "pump": [
          " ''''''"
        ]
      },
      {
        "prefix": [
          "\"\" '"
        ],
        "suffix": "",
        "pump": [
          "''' '"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\na",
        "pump": [
          " >a "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*((?:\"[^\"]*\"|[^\\s#])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#\"\t",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:[a-zA-Z_]|\\$(?:\\{\\w+\\}|\\w+))+\\w*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a{",
        "pump": [
          "$aaa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "rxTKrxTKaItFgOP}",
        "pump": [
          "rxTK"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*FIXME:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*FIXME:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*FIXME:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\\\\\|\\\\'|[^'])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \t",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z0-9_]+(\\[(\\[.*?\\]|.)*?\\])?",
    "inputs": [
      {
        "prefix": [
          "a["
        ],
        "suffix": "a[",
        "pump": [
          "[]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(.+,?)*\\]$",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "^,"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "]a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[!EA[!EA-;o<e*: <b\\",
        "pump": [
          "[!EA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^From: (.*(?:\\r?\\n\\s+.*)*)",
    "inputs": [
      {
        "prefix": [
          "From: "
        ],
        "suffix": "a",
        "pump": [
          "\r\n\t\r\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Properties:\\n(?:.+=.+\\n)+",
    "inputs": [
      {
        "prefix": [
          "Properties:\n"
        ],
        "suffix": "p",
        "pump": [
          "a=a\n"
        ]
      },
      {
        "prefix": [
          "Properties:\n"
        ],
        "suffix": "i",
        "pump": [
          "a=a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*(\\w+)\\s*(=\\s*(\\w+|\\\"[^\\\"]*\\\"|\\((\\s*\\\"[^\\\"]*\\\"\\s*,?)*\\)))?,?",
    "inputs": [
      {
        "prefix": [
          "a =("
        ],
        "suffix": "",
        "pump": [
          "\"\"\\x09\"\""
        ]
      },
      {
        "prefix": [
          "a=("
        ],
        "suffix": "\"\",\t",
        "pump": [
          "\"\"\t\"\","
        ]
      },
      {
        "prefix": [
          "w=\"\""
        ],
        "suffix": "\u0000",
        "pump": [
          "s\"\""
        ]
      },
      {
        "prefix": [
          "a =("
        ],
        "suffix": "",
        "pump": [
          "\"\"\\x09\"\""
        ]
      },
      {
        "prefix": [
          "a=("
        ],
        "suffix": "\"\t",
        "pump": [
          "\"\"\t\"\","
        ]
      },
      {
        "prefix": [
          "w=\"\"s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s\"\"s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\\\\:]+|\\\\.)+)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": ":",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000."
        ],
        "suffix": ":",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\([ \\t]*)(%.*)*\\n",
    "inputs": [
      {
        "prefix": [
          "\\"
        ],
        "suffix": "",
        "pump": [
          "%%"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "a",
        "pump": [
          "%%"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "",
        "pump": [
          "%%"
        ]
      },
      {
        "prefix": [
          "\\"
        ],
        "suffix": "a",
        "pump": [
          "%%"
        ]
      },
      {
        "prefix": [
          "%\\%\\\\%\\\\%\\"
        ],
        "suffix": "\\%%\\%%\\%%\\%%\\%\\\\%\\*%\\\\\\%\\%",
        "pump": [
          "\\%%\\%%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<div class=\"map\"\\>(.|\\s)*\\<\\/div>",
    "inputs": [
      {
        "prefix": [
          "<div class=\"map\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<div class=\"map\">"
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<div class=\"map\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<div class=\"map\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<div class=\"map\">"
        ],
        "suffix": "p",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<div class=\"map\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "a<div class=\"map\">"
        ],
        "suffix": "\t \n \t \n \t\t\t  \n\t\r \n   ",
        "pump": [
          "\t \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\'([^\\\\\\'\\n]|\\\\[\\\\\"\\'nrbtfav\\?]|\\\\[0-7]{1,3}|\\\\x[0-9a-fA-F]+|\\\\[uU]([0-9a-fA-F]{4})([0-9a-fA-F]{4})?)*\\'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!\\00"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\x",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "\n'"
        ],
        "suffix": "\\x6515011585\\x651501158569636284656197309210563n}\\x6515011585696362846561",
        "pump": [
          "\\x6515011585"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!\\00"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\Uaaaa",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "'\\'U"
        ],
        "suffix": "\\x802676\\x80267686359092316002I\\x80267686359092316002973859303",
        "pump": [
          "\\x802676"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!\\00"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\Ua",
        "pump": [
          "\\00a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w)+((-)*(\\w)*)*);",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-;a",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2ZFF2ZFFgIwA4MuuG",
        "pump": [
          "2ZFF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*\\*(?:.|\\r|\\n)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/*",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "//",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(<\\?xml.*\\?>)?(\\r?\\n)*<xml>(.|\\r?\\n)*<\\/xml>$",
    "inputs": [
      {
        "prefix": [
          "<?xml?><xml>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<xml>"
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\[\\\\']|[^'])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'\\\\\\\\\\)XJSCi1O1ACXJS\\\\\\\\)hxR)\\RHHVEMMruv~|wJTzhJrPeINe\\bShMi"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\)hxR)\\RHHV",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!-- START langtable -->)(.|\\n)*(<!-- END langtable -->)",
    "inputs": [
      {
        "prefix": [
          "<!-- START langtable -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- START langtable -->"
        ],
        "suffix": "T lan",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!-- START langtable -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- START langtable -->"
        ],
        "suffix": "END langtab",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[([/]?)(list|li|table|tr|td|th)((\\s[^\\]]+)*)\\]",
    "inputs": [
      {
        "prefix": [
          "[/li"
        ],
        "suffix": "",
        "pump": [
          " !\\x09!"
        ]
      },
      {
        "prefix": [
          "[/td"
        ],
        "suffix": "r]r",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "[td 3"
        ],
        "suffix": "d\r  \n\td\r  \n\t \r\n\n\n \r\t\n\r\n\n\r",
        "pump": [
          "d\r  \n\t"
        ]
      },
      {
        "prefix": [
          "[/li"
        ],
        "suffix": "",
        "pump": [
          " !\\x09!"
        ]
      },
      {
        "prefix": [
          "[/td"
        ],
        "suffix": "]a",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "h[t"
        ],
        "suffix": "d\n\n\r\b\td\n\n\r\b\t\t\b\r\r\t\b\r\b\b\r\b\t\r\n\b\r\t\n\t\n",
        "pump": [
          "d\n\n\r\b\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(\\\\[|])|[^|`]|`[^`]+`|`)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "`a|`|",
        "pump": [
          "\\|`a`"
        ]
      },
      {
        "prefix": [
          "\u0000`"
        ],
        "suffix": "|",
        "pump": [
          "]`"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "`a|",
        "pump": [
          "\\|`a`"
        ]
      },
      {
        "prefix": [
          "\u0000`\u0000`"
        ],
        "suffix": "|",
        "pump": [
          "[`\u0000`"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[\\w\\d-]+\\.?)+@(?:(?:[\\w\\d]\\-?)+\\.)+\\w{2,63}$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-@a-.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-@d\u0000d-"
        ],
        "suffix": "",
        "pump": [
          "wd\u0000d-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "J742J7426cA4DE4fbD",
        "pump": [
          "J742"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--d"
        ],
        "suffix": "",
        "pump": [
          "wd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "twahtwah6o20qgCUAN",
        "pump": [
          "twah"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "__\\s*((.|\\n|\\r)*?)\\s*__",
    "inputs": [
      {
        "prefix": [
          "__"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "__"
        ],
        "suffix": "\na_",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "__"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "__"
        ],
        "suffix": "\na",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\t|\\x0a|\\x0d|\\s)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[$][{]\\s*((?:\\w|.)*?)\\s*[}]",
    "inputs": [
      {
        "prefix": [
          "${"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "${a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "5${"
        ],
        "suffix": "Q0\\8Q0\\83292862434",
        "pump": [
          "Q0\\8"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "}${a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "{rms{rmsugirsdviwa",
        "pump": [
          "{rms"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[_a-zA-Z][_a-zA-Z0-9]*(\\\\s*,\\\\s*[_a-zA-Z][_a-zA-Z0-9]*)*\\\\s*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a,",
        "pump": [
          "\\,\\sa"
        ]
      },
      {
        "prefix": [
          "A,A0"
        ],
        "suffix": "\u0000",
        "pump": [
          "B,A0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\,",
        "pump": [
          "\\,\\sa"
        ]
      },
      {
        "prefix": [
          "A,a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0,a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\?\\?((?:.[^?]|[^?].)+)\\?\\?",
    "inputs": [
      {
        "prefix": [
          "??@?"
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "??"
        ],
        "suffix": "a????",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "??"
        ],
        "suffix": "uN\\[qxuN\\[qxAHME3dA(\\Tu|Y8f>\b/X,V",
        "pump": [
          "uN\\[qx"
        ]
      },
      {
        "prefix": [
          "??@?"
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "??"
        ],
        "suffix": "a?",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "@\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "<??"
        ],
        "suffix": "P|:sM\bP|:sM\bq4PKW 7L\bs\"Y`ihUrDqv",
        "pump": [
          "P|:sM\b"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^#include\\s\"(.+\\/|\\/|\\w|-|\\/)+\\.(md|markdown)\"",
    "inputs": [
      {
        "prefix": [
          "#include \"0"
        ],
        "suffix": "",
        "pump": [
          "/"
        ]
      },
      {
        "prefix": [
          "#include\t\""
        ],
        "suffix": "n.a",
        "pump": [
          "a//"
        ]
      },
      {
        "prefix": [
          "#includes\"-w"
        ],
        "suffix": "",
        "pump": [
          "/w"
        ]
      },
      {
        "prefix": [
          "#include\t\"jkpjkbmrlnhejbljrysq"
        ],
        "suffix": "sqxvape/sqxvape/WLNTUKBZHRCBINFZCXUQFGZAErd/^~~\\w5ld\\",
        "pump": [
          "sqxvape/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- @@((?:\\n?.)*?)-->",
    "inputs": [
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "",
        "pump": [
          "\\x0a."
        ]
      },
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "->-",
        "pump": [
          "\na"
        ]
      },
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "",
        "pump": [
          "\\x0a."
        ]
      },
      {
        "prefix": [
          "<!-- @@"
        ],
        "suffix": "@<",
        "pump": [
          "\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+?\\n){5,}",
    "inputs": [
      {
        "prefix": [
          "a\na\na\na\n"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "a\na\na\na\n"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " '(?: \\\\. | \\\\' | [^'\\n])*' ",
    "inputs": [
      {
        "prefix": [
          " '"
        ],
        "suffix": "",
        "pump": [
          " \\  "
        ]
      },
      {
        "prefix": [
          " '"
        ],
        "suffix": "a",
        "pump": [
          " \\' "
        ]
      },
      {
        "prefix": [
          "\\ '"
        ],
        "suffix": " \\   \\   \\   \\   \\   \\   \\   \\   \\   \\   \\     \\   \\     \\     \\   [",
        "pump": [
          " \\   \\   \\   \\  "
        ]
      },
      {
        "prefix": [
          " '"
        ],
        "suffix": "",
        "pump": [
          " \\  "
        ]
      },
      {
        "prefix": [
          " '"
        ],
        "suffix": "a '",
        "pump": [
          " \\' "
        ]
      },
      {
        "prefix": [
          " ' \\'"
        ],
        "suffix": "  \\   \\   \\   \\   \\   \\   \\   \\   \\   \\   \\   \\   \\   \\  ",
        "pump": [
          "  \\   \\   \\ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(('.*'|[+\\-]?\\d+),)+\\[(\\\".*\\\",?)+\\](,\\d){2,}\\]$",
    "inputs": [
      {
        "prefix": [
          "['',"
        ],
        "suffix": "",
        "pump": [
          "'','',"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "[+0,",
        "pump": [
          "'','',"
        ]
      },
      {
        "prefix": [
          "[2,[\"\"\"]\",\"\",\"]\","
        ],
        "suffix": "\"\",\"\"\"\"\",\"\"\",\",\"2,[\"\"],2,\"\",),2,\"\"",
        "pump": [
          "\"\",\"\"\""
        ]
      },
      {
        "prefix": [
          "['',"
        ],
        "suffix": "",
        "pump": [
          "'','',"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": ",",
        "pump": [
          "'','',"
        ]
      },
      {
        "prefix": [
          "[''','','',''','','','["
        ],
        "suffix": "','',',','','',',',','[''['',['',[",
        "pump": [
          "','',',','"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*([^:]+?)\\s*:((?:\\(.*?\\)|\".*?\"|'.*?'|[^;]+?)+);?$",
    "inputs": [
      {
        "prefix": [
          " \\x00:)"
        ],
        "suffix": "(\";*",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "a;\t:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\s:\\\\s:\\|\".*?\"|'.*?;?$",
        "pump": [
          "\\s:\\"
        ]
      },
      {
        "prefix": [
          " \\x00::"
        ],
        "suffix": "(\";*",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "a;\t:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000:'\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "g:<ig:<i-%662K09+U<5;\b",
        "pump": [
          "g:<i"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`([^\\\\`]|@escapes)+`",
    "inputs": [
      {
        "prefix": [
          "`A"
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "aa",
        "pump": [
          "a@escapes"
        ]
      },
      {
        "prefix": [
          "`\u0000@escapes"
        ],
        "suffix": "",
        "pump": [
          "@escapes@escapes"
        ]
      },
      {
        "prefix": [
          "`A"
        ],
        "suffix": "",
        "pump": [
          "@escapes"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "e",
        "pump": [
          "a@escapes"
        ]
      },
      {
        "prefix": [
          "`\u0000@escapes"
        ],
        "suffix": "",
        "pump": [
          "@escapes@escapes"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\d+:\\s+([a-zA-Z0-9\\.-]+)(@\\S+)*:\\s+(.*)$",
    "inputs": [
      {
        "prefix": [
          "0: -"
        ],
        "suffix": "",
        "pump": [
          "@\\x00@A"
        ]
      },
      {
        "prefix": [
          "0:\ta"
        ],
        "suffix": "a",
        "pump": [
          "@a@a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|\\r|\\n)*<td/>(.|\\r|\\n)*<td/>(.|\\r|\\n)*<td/>(.|\\r|\\n)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<td/>",
        "pump": [
          "a\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<t",
        "pump": [
          "a\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<a'",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s:-"
        ],
        "suffix": "",
        "pump": [
          "ss=\u0000s:-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\subsection{((.|\\n)*?)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^(منفی\\s|مثبت\\s)*یک\\sهزار",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x09"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s!(\\\\\\\\|\\\\!|[^!])*!(\\\\\\\\|\\\\!|[^!])*![msixpodualngc]*",
    "inputs": [
      {
        "prefix": [
          "s!"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s!"
        ],
        "suffix": "s$!!$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s!!\\"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s!\\\\\\\\|"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\\\\:;}<{?}=?|~\b<;@=}<}\b~>=}<{~|~;~~~",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "s!"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s!"
        ],
        "suffix": "!s$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s!\\"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s!s!s"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\>cbZiWYsorJlOj0Z3hACAjG2\\sss\\\\cS~@F22e889FebAceD2D6fdFf9T7V9Y2uCh~G",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?[\\w:\\-]+(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*\\s*(\\/?)>$",
    "inputs": [
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "<",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "a=</\"<\ta\t",
        "pump": [
          "\ta=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:\\/\\/.+\\s+|var\\s+\\w+\\s*=\\s*require\\([^)]+\\).*\\s+)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "eq",
        "pump": [
          "//a\t\t"
        ]
      },
      {
        "prefix": [
          "varsw=require\u0000"
        ],
        "suffix": "",
        "pump": [
          "*svarsw=require\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":([a-z]+_?)*format$",
    "inputs": [
      {
        "prefix": [
          ":"
        ],
        "suffix": "",
        "pump": [
          "gg"
        ]
      },
      {
        "prefix": [
          ":a"
        ],
        "suffix": "or:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "r:"
        ],
        "suffix": "formformrormrmrmaa",
        "pump": [
          "form"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "",
        "pump": [
          "gg"
        ]
      },
      {
        "prefix": [
          ":a"
        ],
        "suffix": "ma",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "_:"
        ],
        "suffix": "formformaffmafform",
        "pump": [
          "form"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+)*",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\\\/|[^\\/\\\\]+)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "/",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^radiant-|-extension(-[\\d\\.a-z]+|-[a-z\\d]+)*$",
    "inputs": [
      {
        "prefix": [
          "-extension"
        ],
        "suffix": "!",
        "pump": [
          "-0"
        ]
      },
      {
        "prefix": [
          "-extension"
        ],
        "suffix": "--",
        "pump": [
          "-a-a"
        ]
      },
      {
        "prefix": [
          "-extension-.a"
        ],
        "suffix": "\u0000",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          "-extension-extensio"
        ],
        "suffix": "n-e-e-e-n-e-e-e-extension-aensi-e-extension-a08ten-",
        "pump": [
          "n-e-e-e-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "arn:aws:iam::[0-9]+:role\\/([\\w+=,.@-]+)*",
    "inputs": [
      {
        "prefix": [
          "arn:aws:iam::0:role/a"
        ],
        "suffix": "0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arn:aws:iam::0:role/+@"
        ],
        "suffix": "\u0000",
        "pump": [
          "w@"
        ]
      },
      {
        "prefix": [
          "arn:aws:iam::0:role/a"
        ],
        "suffix": "n:ar",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "arn:aws:iam::0:role/-"
        ],
        "suffix": "\u0000",
        "pump": [
          "w-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "0a",
        "pump": [
          "\\00a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "0a\"\\0",
        "pump": [
          "\\00a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Name Servers Information:\\n\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Name Servers Information:\\x0a\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name Servers Information:\n\n"
        ],
        "suffix": "er\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Name Servers Information:\\x0a\\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name Servers Information:\n\n"
        ],
        "suffix": "m",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+,?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ",,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "8260826080733850177l",
        "pump": [
          "8260"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r*\\n|\\r)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([.\\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz){1}?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".r",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "222222222222221",
        "pump": [
          "2222"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\x0A|\\xA0|\\x0A|\\r|\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\r"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\na",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\x01-\\x27\\x2B-\\x5B\\x5D-\\x7F]|[^[:ascii:]]|\\\\[0-9a-fA-F][0-9a-fA-F])*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\:",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "\u0000",
        "pump": [
          "2:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((.|\\s)*?)(%)((.|\\s)*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\\\;]+|\\\\.)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\;;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": ";",
        "pump": [
          "<\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\;;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000."
        ],
        "suffix": ";",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\\\\\"]+|\\\\\\\\|\\\\'|\\\\\")*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"'"
        ],
        "suffix": "",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "3\rn:3\rn:4UU\tP5)Y;",
        "pump": [
          "3\rn:"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\"\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ")\""
        ],
        "suffix": ">f\nL>f\nL]{.T9\rf\r\n",
        "pump": [
          ">f\nL"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s|&nbsp;|<\\s*br\\s*\\/*\\s*>)*|(?:\\s|&nbsp;|<\\s*br\\s*\\/*\\s*>)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          "\t<br\t>"
        ]
      },
      {
        "prefix": [
          "<brs"
        ],
        "suffix": "",
        "pump": [
          "s><brs"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/([^/]*\\.)+[^/]*$",
    "inputs": [
      {
        "prefix": [
          "/."
        ],
        "suffix": "/",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a./",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "0\u0000"
        ]
      },
      {
        "prefix": [
          "/."
        ],
        "suffix": "/",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "/a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "0\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((.|\\n)*;)\\s*(get;|get\\s*.\\w*;)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "et",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\u0001?\u001b\\]((?:.|;)*?)(\u0007)\u0002?",
    "inputs": [
      {
        "prefix": [
          "\\x01\\x1b]"
        ],
        "suffix": "",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u0001\u001b]"
        ],
        "suffix": "\u0001;",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u001b];"
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          "\\x01\\x1b]"
        ],
        "suffix": "",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u0001\u001b]"
        ],
        "suffix": "a",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          "\u001b]\u0000"
        ],
        "suffix": "",
        "pump": [
          ";\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<AUTHOR_LIST(?:\\s*(\\w+)\\s*=\\s*\"([^\"]+)\"\\s*)*>",
    "inputs": [
      {
        "prefix": [
          "<AUTHOR_LIST"
        ],
        "suffix": "",
        "pump": [
          "0=\"#\"\\x090=\"!\""
        ]
      },
      {
        "prefix": [
          "<AUTHOR_LIST"
        ],
        "suffix": "HOR",
        "pump": [
          "\ta=\"a\"\t"
        ]
      },
      {
        "prefix": [
          "<AUTHOR_LISTw=\"\"\"s"
        ],
        "suffix": "",
        "pump": [
          "sw=\"\"\"s"
        ]
      },
      {
        "prefix": [
          "<AUTHOR_LIST"
        ],
        "suffix": "",
        "pump": [
          "0=\"#\"\\x090=\"!\""
        ]
      },
      {
        "prefix": [
          "<AUTHOR_LIST"
        ],
        "suffix": "U",
        "pump": [
          "\ta=\"a\"\t"
        ]
      },
      {
        "prefix": [
          "<AUTHOR_LISTw=\"\"\""
        ],
        "suffix": "",
        "pump": [
          "sw=\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:\\\\.)|(?:[^,]))*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ",,",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": ",",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": ",",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\{(,? ?[A-z0-9 ]+)+\\}$",
    "inputs": [
      {
        "prefix": [
          "{0"
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "{, a"
        ],
        "suffix": "{{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{,"
        ],
        "suffix": "3Aff3Affaefe086e9e",
        "pump": [
          "3Aff"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s([frentopc-]{0,4}bsd|dragonfly)\\s?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "\tbsd\ta"
        ],
        "suffix": "\tc-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sbsd.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "\tbsd\ta"
        ],
        "suffix": "r-\t-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sbsd.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "\tbsd\ta"
        ],
        "suffix": "r\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sbsd."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "qupzilla\t0._0"
        ],
        "suffix": "l",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "qupzilla/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "qupzilla\t0._0"
        ],
        "suffix": "qu",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "qupzilla/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *lodash\\.templateSettings[\\s\\S]+?};\\n",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": " /*/\nlodash.templateSe",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "ng",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\n /"
        ],
        "suffix": "***********.\nvn^d(}te**.\n?P*^\\X*[etti***s*j+8927}***.\nvn^d(**.\n?P*^\\X*[etti***s*j+8927};\n***.\n",
        "pump": [
          "****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\s|.)*?)(\\..*|\\[.*\\])?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?\\r\\n)*?\\r\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!\\x0d\\x0a\\x0d\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "task update: :environment do\\n((\\n|\\s*.*\\n)*)\\s+end",
    "inputs": [
      {
        "prefix": [
          "task update: :environment do\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "task update: :environment do\n"
        ],
        "suffix": " do",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "task update: :environment do\n\t "
        ],
        "suffix": "\t \n\n\t \n\n\r\t\t\t   \n\t\n\t\t\t\n\r\n",
        "pump": [
          "\t \n\n"
        ]
      },
      {
        "prefix": [
          "task update: :environment do\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "task update: :environment do\n"
        ],
        "suffix": "v",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "task update: :environment do"
        ],
        "suffix": "\n\n\n \n\n\n \t\n\t\n\r\t\n\t\n\r\t\n\r\b\b",
        "pump": [
          "\n\n\n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(SESSION|RESOURCE)\\s+RATE\\s+TO\\s+(((:\\$+)?\\w+)|\\d+)\\s+WHERE\\s+VERSION\\s*=\\s*(\\$*\\w+)(\\s+AND\\s+(LOG_CHANGE|VIRTUAL_CHANGE)\\s*=\\s*(.+))*$",
    "inputs": [
      {
        "prefix": [
          "SESSION\tRATE\tTO\t0\tWHERE\tVERSION=a"
        ],
        "suffix": "\tAND\tLOG",
        "pump": [
          "\tAND\tLOG_CHANGE=\ta"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+)+ is (ready|ready and printing|not ready)$",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "!!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": " pri",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "not not ready is r",
        "pump": [
          "not "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-z]+:)([a-z]+)+)",
    "inputs": [
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "a::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a:aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "a$a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a:aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Servidor\\(es\\) de Nombres de Dominio:\\n\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Servidor(es) de Nombres de Dominio:\\x0a\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Servidor(es) de Nombres de Dominio:\n\n"
        ],
        "suffix": "ni",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Servidor(es) de Nombres de Dominio:\\x0a\\x0aS\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Servidor(es) de Nombres de Dominio:\n\n"
        ],
        "suffix": "es d",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*\\*\\s*\\n?([^\\*]*(\\*[^\\/])?)*\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "/**\n"
        ],
        "suffix": "/*/\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "AaXNAaXNk}0-P>eTi",
        "pump": [
          "AaXN"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "/**\n"
        ],
        "suffix": "*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "C/**"
        ],
        "suffix": "Qf`oQf`otk~^:(7}d",
        "pump": [
          "Qf`o"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\S+::\\w+)[.]?(\\S+)*\\s=\\s(.*)$",
    "inputs": [
      {
        "prefix": [
          "!::A"
        ],
        "suffix": "",
        "pump": [
          "{;"
        ]
      },
      {
        "prefix": [
          "a::a.a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "S::wS"
        ],
        "suffix": "",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "X::aX::aec4hOBR;WM(Jq",
        "pump": [
          "X::a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^macro\\s+([a-zA-Z0-9_]+)\\s*\\(\\s*((?:[a-zA-Z0-9_]+(?:,\\s*)?)*)\\s*\\)$",
    "inputs": [
      {
        "prefix": [
          "macro a("
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "macro\ta(a"
        ],
        "suffix": "ma",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "macros00,s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s0,s"
        ]
      },
      {
        "prefix": [
          "macro\tc("
        ],
        "suffix": "macrmacrodAB9d8fb",
        "pump": [
          "macr"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\#.*(\\\\\\n.*)*",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "a",
        "pump": [
          "\\\n\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "lang\\(('(?:[^\\\\']+|\\\\.)*')([),])",
    "inputs": [
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "lang('a"
        ],
        "suffix": "(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "langlang96792778735",
        "pump": [
          "lang"
        ]
      },
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "lang('a"
        ],
        "suffix": "an'al",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lang('"
        ],
        "suffix": "^eEe^eEe84E34aaeaE6",
        "pump": [
          "^eEe"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w+|::)+)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:import|from) .*\\n(?:(?:import|from) .*\\n)*\\n*",
    "inputs": [
      {
        "prefix": [
          "from \n"
        ],
        "suffix": "o",
        "pump": [
          "from \nfrom \n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r\\n|[\\x20\\x0d\\x0a\\x09])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "09"
        ],
        "suffix": "\u0000",
        "pump": [
          "x9"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "0x"
        ],
        "suffix": "\u0000",
        "pump": [
          "xx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*\\s*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\",
        "pump": [
          ".a['']['']"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a[",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "typeof asset(.|\\s)+?require\\('fs'\\)\\.readFileSync\\(__dirname \\+ '\\/style\\.css', 'utf8'\\)",
    "inputs": [
      {
        "prefix": [
          "typeof asset!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "typeof asset"
        ],
        "suffix": "mere",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "typeof asset\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "typeof asset + '"
        ],
        "suffix": "  \t\t  \t\t\t\t\r \t\r\t\r\r\r\t",
        "pump": [
          "  \t\t"
        ]
      },
      {
        "prefix": [
          "typeof assetz"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "typeof asset"
        ],
        "suffix": "y",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "typeof asset\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n    ([^\\s;,]+(?:[ \\t]*;[ \\t]*(?:[^\\s;,q][^\\s;,]*|q[^\\s;,=][^\\s;,]*))*)\n    (?:[ \\t]*;[ \\t]*q=(\\d*(?:\\.\\d+)?)[^,]*)?",
    "inputs": [
      {
        "prefix": [
          "    a"
        ],
        "suffix": " ;",
        "pump": [
          "\t; a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\(((?:[^)\\\\]+|\\\\.)*)\\)",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "\t)\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(w_P(w_P0&2h\rPXv~'D",
        "pump": [
          "(w_P"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\d]*(\\d+)[^\\d]*)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "\u0000d"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000d\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\+((?:\\+)?[\\w\\-]+)*(?:\\.v\\d+\\.\\d+\\.\\d+)?(?:\\.js)$",
    "inputs": [
      {
        "prefix": [
          "+"
        ],
        "suffix": "",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          "++a"
        ],
        "suffix": "j",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "R+"
        ],
        "suffix": "IsmiIsmiWX3FMX2QP",
        "pump": [
          "Ismi"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          "++a"
        ],
        "suffix": "j.v0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "+v+e+v+ee+v+e+v+"
        ],
        "suffix": "jv+eevjv+eev+ee+v+e+v+jv+ee+v+e+v+",
        "pump": [
          "jv+eev"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\S+\\s*)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "SSS"
        ],
        "suffix": "\u0000",
        "pump": [
          "sSS"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "SSS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```docgen(.*\\r?\\n)*```",
    "inputs": [
      {
        "prefix": [
          "```docgen"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "```docgen"
        ],
        "suffix": "e",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "```docgen"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "```docgen"
        ],
        "suffix": "`docg``",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[([a-z]+\\w*)+([~\\|\\^\\$\\*!=]=?)?['\"]?([^\\]]*?)['\"]?\\]",
    "inputs": [
      {
        "prefix": [
          "[a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "az7taz7tcucnBlC5sR",
        "pump": [
          "az7t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^author-mail <([^>]+)+>$",
    "inputs": [
      {
        "prefix": [
          "author-mail <!"
        ],
        "suffix": "",
        "pump": [
          "?!"
        ]
      },
      {
        "prefix": [
          "author-mail <a"
        ],
        "suffix": "-ma",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "author-mail <\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "?\u0000"
        ]
      },
      {
        "prefix": [
          "author-ma"
        ],
        "suffix": "il <il <7.dGJBk\r-wV\r~`",
        "pump": [
          "il <"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z][a-zA-Z_0-9]*)+( )",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a  ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "CAhJCAhJhboVlOqdmt",
        "pump": [
          "CAhJ"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ZiKCZiKCzBGUJLMrq",
        "pump": [
          "ZiKC"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.(Symbol\\.(?:[a-z]+[A-Z]?)+)",
    "inputs": [
      {
        "prefix": [
          ".Symbol.a"
        ],
        "suffix": "ymb.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000Symbol\u0000aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ".Symbol.a"
        ],
        "suffix": "mb.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000Symbol\u0000aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([AIFED])(\\d+)\\.*(\\d+)*",
    "inputs": [
      {
        "prefix": [
          "A00"
        ],
        "suffix": "0.A",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Add"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "A00"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Add"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\*\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t*\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t*\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[.*?\\])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\\\|(\\\\?\\w+)+)$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "!",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "\\a"
        ],
        "suffix": "\\\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "KEDAKEDALNBLAASUJ\\",
        "pump": [
          "KEDA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+\\/)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000/\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\S]+)+\\s([\\S]+)\\s[{]{1}$",
    "inputs": [
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "{\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "SS"
        ],
        "suffix": "",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "P:0^P:0^n,a\bwv?@on",
        "pump": [
          "P:0^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\n)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\r \r\t\n\t\r \t  \t\t \r"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\t\n \n\r\t",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\t\n\n\n\n\n\t\n\n\n\r\n\t\n\t\n\n\n\r\n\t\r\r\r\r\r\r\r\r\r\t\r\r",
        "pump": [
          "\n\n\t\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "__!\\s*((.|\\n|\\r)*?)\\s*__",
    "inputs": [
      {
        "prefix": [
          "__!"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "__!"
        ],
        "suffix": "\na",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "__!"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "__!"
        ],
        "suffix": "\na",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\t*exitf\\((.*\\n)*?.*\\);\\n",
    "inputs": [
      {
        "prefix": [
          "exitf("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "exitf("
        ],
        "suffix": "i",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "exitf("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "exitf("
        ],
        "suffix": "i",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(<math( ('.*?'|\".*?\"|[^>])+)>)",
    "inputs": [
      {
        "prefix": [
          "<math ("
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "<math "
        ],
        "suffix": "a",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "<math \u0000\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      },
      {
        "prefix": [
          "<math "
        ],
        "suffix": "'.'?'''.'?''|\"'.'.\"'.''|\"'.'?'",
        "pump": [
          "'.'?''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`((?:\\S| -> |, )+)(\\|)(\\S+)`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "-",
        "pump": [
          "a -> "
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "-a `,",
        "pump": [
          "a -> "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z][a-z0-9]*(-[a-z0-9]*[a-z][a-z0-9]*)*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "-aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "--",
        "pump": [
          "-aa"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "",
        "pump": [
          "aa-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "z-aaa-zaaaz-aaa-zaaa0a0-a0aaaa0a-a0taz-aa0aaaaz--9",
        "pump": [
          "z-aaa-zaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$",
    "inputs": [
      {
        "prefix": [
          "https://-"
        ],
        "suffix": "{",
        "pump": [
          ":---"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "a",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "a-z0a-z0362501888752401*",
        "pump": [
          "a-z0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*/?(?:\\n|[^/]|[^*]/)*\\*/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "*/"
        ],
        "suffix": "**/\n",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "//*\t\t  \n\r\n \t\r\t\r \r \r\r\r\t\t\r\t\r \t\t \r"
        ],
        "suffix": "\n\n\n\t   \r\r\n\n\n\n\t   \r\r\n\t\n \t\t\n\r \t\n\r\n\t\r\n\t",
        "pump": [
          "\n\n\n\t   \r\r\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*/"
        ],
        "suffix": "/**",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "//*Z\\ruAK?^T]i[*[(/\t"
        ],
        "suffix": "\t\n\n\r\n\n\t\n\n\r\n\n \t\r \n\t\t\n\r\t\r\n\r\r\r\n \r\r\n \n\n \t",
        "pump": [
          "\t\n\n\r\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\+([A-Za-z_]+\\w*)(\\((.+(,\\s)?)*\\))?$",
    "inputs": [
      {
        "prefix": [
          "+a("
        ],
        "suffix": "",
        "pump": [
          "*,\\x09"
        ]
      },
      {
        "prefix": [
          "+a(a"
        ],
        "suffix": "+",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "+A(++A(+A(+A()(+A(+A(\t",
        "pump": [
          "+A(+"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:RMSG\\s+([^\\s]+)\\s+([^\\s]+)\\s+(?:([|+]\\s+([\\w\\s]+)|[^\\s]+)[^\\S\\r\\n]+)?(\\d+)\\s*\\r\\n([^\\\\r\\\\n]*?)\\r\\n)+?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "MSn$\t0\t",
        "pump": [
          "RMSG\ta\ta\t+\t\t\t0\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "MSGR\r\nR\r\t",
        "pump": [
          "RMSG\ta\ta\t0\r\n\r\nRMSG\r\nRMSG\ta\ta\t0\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\$[lh]\\[.+\\]|\\$[lh])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[]$",
        "pump": [
          "$h[a]$h[a]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "$h[a]$h[a]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-z]\\/([a-zA-Z0-9]{0,}\\/{0,})+)|([a-z][^L\\W]([a-zA-Z0-9]{0,}\\/)+))[a-zA-Z0-9]{1,}",
    "inputs": [
      {
        "prefix": [
          "a/"
        ],
        "suffix": "",
        "pump": [
          "/"
        ]
      },
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "aa/a_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a/"
        ],
        "suffix": "",
        "pump": [
          "/"
        ]
      },
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "aA$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a/"
        ],
        "suffix": "",
        "pump": [
          "/"
        ]
      },
      {
        "prefix": [
          "a/"
        ],
        "suffix": "aa/a_",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\\\'"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"a\\",
        "pump": [
          "\\\\\\\""
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\\\'"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\\\\\\""
        ]
      },
      {
        "prefix": [
          "('\\\\\\'\\'"
        ],
        "suffix": "\\\\\\'\\\\\\'\\\\\\'\\\\\\\\\\'\\\\\\'\\\\\\'\\\\\\'\\\\\\'\"\\'\\\\\\'\"\n\n\t\t\r\n\n\r\r \t\n\r \t\t\n \t \n\n\n\n\t\t\t\n\r",
        "pump": [
          "\\\\\\'\\\\\\'\\\\\\'\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(\\s*\\n)+\\s*",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a\n\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ \\t\\n]+((.|\\n)*?)[ \\t\\n]+$",
    "inputs": [
      {
        "prefix": [
          "\\x09"
        ],
        "suffix": "!",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[\\S+(?:\\s*,\\s*\\S+)*\\]|\\(\\S+(?:\\s*,\\s*\\S+)*\\)|[^\\r\\n\\t\\f ,]+(?:\\s*,\\s*[^\\r\\n\\t\\f ,]+)+",
    "inputs": [
      {
        "prefix": [
          "[,"
        ],
        "suffix": "",
        "pump": [
          ",^,^"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\u000b,\u000b,\t\u000b\t",
        "pump": [
          "\t,\u000ba"
        ]
      },
      {
        "prefix": [
          "\u0000,\u0000,"
        ],
        "suffix": "",
        "pump": [
          "s\u0000,"
        ]
      },
      {
        "prefix": [
          "[\\"
        ],
        "suffix": "",
        "pump": [
          ",^,^"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "\t,\u000ba"
        ]
      },
      {
        "prefix": [
          "\u0000,\u0000,\u0000\u0000"
        ],
        "suffix": "\t",
        "pump": [
          "s,\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[A-Z]\\w*[a-z]\\w+\\:\\:)*[A-Z]\\w*[a-z]\\w+) \\((.*)\\)(?: on line #(\\d+) of (.+))?\\:\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "n",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          "Aw"
        ],
        "suffix": "",
        "pump": [
          "www::Aw"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "Aaaa::"
        ]
      },
      {
        "prefix": [
          "Aw"
        ],
        "suffix": "",
        "pump": [
          "www::Aw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\.@each){2,}",
    "inputs": [
      {
        "prefix": [
          ".@each"
        ],
        "suffix": "eaca",
        "pump": [
          "a.@each"
        ]
      },
      {
        "prefix": [
          "\u0000@each\u0000@each\u0000@each"
        ],
        "suffix": "\u0000",
        "pump": [
          "\u0000@each\u0000@each"
        ]
      },
      {
        "prefix": [
          ".@each"
        ],
        "suffix": "aca.",
        "pump": [
          "a.@each"
        ]
      },
      {
        "prefix": [
          "\u0000@each\u0000@each\u0000@each"
        ],
        "suffix": "\u0000",
        "pump": [
          "\u0000@each\u0000@each"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "eaca.",
        "pump": [
          "a.@each"
        ]
      },
      {
        "prefix": [
          "\u0000@each\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000@each\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\begin{center}((.|\\n)*?)\\\\end{center}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "%\\{((?:.|\\n)+?)\\}",
    "inputs": [
      {
        "prefix": [
          "%{!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "%{"
        ],
        "suffix": "%",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "%{&"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "%{"
        ],
        "suffix": "\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<textarea(\\r|\\t|\\n|.)*?<\\/textarea>",
    "inputs": [
      {
        "prefix": [
          "<textarea"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<textarea"
        ],
        "suffix": "ar",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<textareaeaxtextarea<xtaareaxtarareaxtextarea<xt"
        ],
        "suffix": "\t\t \t\r\t\t\t \t\r\t\t\r \n\n\n\r \t\t\n \n\n \r \r\t\t  \r\n\r\r\n\t ta",
        "pump": [
          "\t\t \t\r\t"
        ]
      },
      {
        "prefix": [
          "<textarea"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<textarea"
        ],
        "suffix": "e",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<textarea<\t\r\t\r"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\n\t\t\t\n\n\t\t",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(::|[_a-z])([_a-z0-9]*::[_a-z0-9]+)*[_a-z0-9]*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a:a",
        "pump": [
          "a::aa"
        ]
      },
      {
        "prefix": [
          "_::0_"
        ],
        "suffix": "\u0000",
        "pump": [
          "0::0_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(\\\\.|[^'])*'$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\w\\s]{2,}){5,}",
    "inputs": [
      {
        "prefix": [
          "$$$$$$$$"
        ],
        "suffix": "\t",
        "pump": [
          "$$$$"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "$$$$$$$$"
        ],
        "suffix": "$a$$$$$$",
        "pump": [
          "$$$$"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\t",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "t\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(float|int|bool|vec2|vec3|vec4|struct)([ \\t\\n\\r]+[^\\;]+[ \\t\\n\\r]*\\,*)+\\;",
    "inputs": [
      {
        "prefix": [
          "float !"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09-"
        ]
      },
      {
        "prefix": [
          "vec3"
        ],
        "suffix": "o",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "bool"
        ],
        "suffix": " b\t\r b\t\r\t\t\r\n\n\n\n\n\t",
        "pump": [
          " b\t\r"
        ]
      },
      {
        "prefix": [
          "float w"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09-"
        ]
      },
      {
        "prefix": [
          "vec3"
        ],
        "suffix": "c",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "mvec3"
        ],
        "suffix": "\rk\n\n\rk\n\n\nd\t\nM\t\nMStN5|Ls(J!q\t5uN)A7",
        "pump": [
          "\rk\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$\\{(([\\w\\$\\-]+(\\.|\\s)?[\\w\\$\\-]*)+)\\}",
    "inputs": [
      {
        "prefix": [
          "${$"
        ],
        "suffix": "",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "$\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "_$Sp_$Sp6Pq0xv",
        "pump": [
          "_$Sp"
        ]
      },
      {
        "prefix": [
          "${$"
        ],
        "suffix": "",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "a$\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "$${"
        ],
        "suffix": "$$aZ$$aZtQO1x${$$aZtQO1x",
        "pump": [
          "$$aZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$",
    "inputs": [
      {
        "prefix": [
          "|==="
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "|==="
        ],
        "suffix": "|",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "|="
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "|="
        ],
        "suffix": "|",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "|="
        ],
        "suffix": "\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\n\r\n\t\r\r\n\t \r\n\t \n\r\t\r\n\n \t\t\n  \r \t\t  ",
        "pump": [
          "\r\n\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((a{0,5}){0,5})*[c]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "acc",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "aaa"
        ],
        "suffix": "",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaaaaaaaa",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a$caa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Z"
        ],
        "suffix": "aaaaaaaaaaa",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "acc",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaaaaaaaa",
        "pump": [
          "aaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Z](?:(?:\\S+\\s\\S+)+|\\S+)$",
    "inputs": [
      {
        "prefix": [
          "A!\\x09\\x00"
        ],
        "suffix": "\\x09",
        "pump": [
          "! \\x00\\x00!\\x09\\x00"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "Aa\t\t",
        "pump": [
          "a\taa"
        ]
      },
      {
        "prefix": [
          "ASsSSsS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SSsS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Gl\b\nKy|5( ;_Gl\b\nKy|5( ;_P+23q.h#0P?d\t(2f\t0L!Q^9|/\tP*16cw\t",
        "pump": [
          "Gl\b\nKy|5( ;_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^\\\\:]+|\\\\.)*)(?::(.*))?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "J%MTJ%MTpp55GIH\n,:\r)",
        "pump": [
          "J%MT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\s*)(@charset)( [^;]+;\\s*))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "et",
        "pump": [
          "\t@charset a;\t"
        ]
      },
      {
        "prefix": [
          "@charset \u0000;@charset \u0000;s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s@charset \u0000;s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*(?:\\d+|(?:\\d*\\s*\\-\\s*\\d+)|(?:\\d+\\s*\\-\\s*\\d*))\\s*,\\s*)*\\s*(?:\\d+|(?:\\d*\\s*\\-\\s*\\d+)|(?:\\d+\\s*\\-\\s*\\d*))\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0-0,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-,,",
        "pump": [
          "\t\t-0,"
        ]
      },
      {
        "prefix": [
          "d-s"
        ],
        "suffix": "",
        "pump": [
          "s,d-s"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0,\t\t\r\r \r\r   0,\t\t\r\r \r\r    \r \r\n\n\t\r\r\n\t\r  \t \n\r\t \t\r\t\n \t  \r\n\r",
        "pump": [
          "0,\t\t\r\r \r\r   "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test1Module(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "mpo",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "]imports: [\t\n\t\t\b"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\b\t\b\t\b\b\t\b\b\b\n\b\b\r\n\n",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d)+|((\\d)+\\.(\\d)+)((,)(\\d)+|((\\d)+\\.(\\d)+))*",
    "inputs": [
      {
        "prefix": [
          "0.0"
        ],
        "suffix": "0..",
        "pump": [
          ",000.0"
        ]
      },
      {
        "prefix": [
          "d\u0000dd\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dddd"
        ]
      },
      {
        "prefix": [
          "0.0"
        ],
        "suffix": ",",
        "pump": [
          ",000.0"
        ]
      },
      {
        "prefix": [
          "d\u0000ddd"
        ],
        "suffix": "",
        "pump": [
          "dddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{\"(\\s|\\w|\\n|:|\\.|\\,|\")+\"}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(\"([^\\\\\"]|\\\\.|\\\\)*\")|('([^\\\\']|\\\\.|\\\\)*')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\\'"
        ],
        "suffix": "\\\\'\\'\\\\\\'\\'\\'C4Ae\\D]|\\'\\10''*e5'[\\'\\7*([.\\|(",
        "pump": [
          "\\\\'\\'\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a\\",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[,:]\\s*\\[(.+:.+,?\\s*)+\\]$",
    "inputs": [
      {
        "prefix": [
          ":[!:;"
        ],
        "suffix": "",
        "pump": [
          "^::::^"
        ]
      },
      {
        "prefix": [
          ",["
        ],
        "suffix": "::",
        "pump": [
          "a:a"
        ]
      },
      {
        "prefix": [
          ",[.+:.VjRbmVK3GiyOht$q.s"
        ],
        "suffix": "u*:]t:u*:]t:(k[z][+\\q]Taj5PUKjcIzQX35e4",
        "pump": [
          "u*:]t:"
        ]
      },
      {
        "prefix": [
          ":[::\\"
        ],
        "suffix": "",
        "pump": [
          "^::::^"
        ]
      },
      {
        "prefix": [
          ",["
        ],
        "suffix": "]:[",
        "pump": [
          "a:a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",[.+:.+,,[.+:.+,?\\ss*caEB6Deb0C7E5e3CBccCDbEe2,[:.+,[],[.+:.+,1504",
        "pump": [
          ",[.+:.+,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "struct ([a-zA-Z0-9_$]+)[\\n]{(.|[\\n])*?[\\n]};",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^'([^\\n\\r\\f\\\\']|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!\\0 "
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "aaaa",
        "pump": [
          "\\aa\t"
        ]
      },
      {
        "prefix": [
          "'[0-9a-f]]"
        ],
        "suffix": "",
        "pump": [
          "\t[0-9a-f]]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!\\0 "
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\aa\t"
        ]
      },
      {
        "prefix": [
          "'[0-9a-f] "
        ],
        "suffix": "",
        "pump": [
          "[0-9a-f][0-9a-f] "
        ]
      },
      {
        "prefix": [
          "'r\\"
        ],
        "suffix": "ffcI\\ffc\\fffcI\\ffc\\ffc\\f33cc36cIZuVDdz4F3A6dz4W86etetUfcIZuVDdz4W86etUPpC9l",
        "pump": [
          "ffcI\\ffc\\f"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(http[s]?://twitter.com/([a-zA-Z]|[0-9]|[$-_@.&+])+/status/[0-9]+/photo/([0-9])+)",
    "inputs": [
      {
        "prefix": [
          "https://twitter!com/["
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "https://twitteracom/"
        ],
        "suffix": "h",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "https://twitterhcom/i"
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "https://twitteracom/"
        ],
        "suffix": "ps:/",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "http://twitterpcom/"
        ],
        "suffix": "600260025aQpshtttpshttps60025tps",
        "pump": [
          "6002"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\d\\s_-]|['])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a'"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "-",
        "pump": [
          "'\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a'"
        ]
      },
      {
        "prefix": [
          "\u0000'"
        ],
        "suffix": "-",
        "pump": [
          "''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\\\[^\\n\\r]|[^\\]{])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "]]",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((((([^\",\\\\{}\\s]|NULL)+|\"([^\"\\\\]|\\\\\"|\\\\\\\\)*\")))(,)?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "ULN\"\"",
        "pump": [
          "aNULL"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "aNULL"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/\\\\\\\\+=&amp;%\\$#_]*)?$",
    "inputs": [
      {
        "prefix": [
          "https://0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ftps://a"
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "666B666BDBc6BabEf}",
        "pump": [
          "666B"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?\\w+((\\s+\\w+(\\s*=\\s*(?:\"(.|\\n)*?\"|'(.|\\n)*?'|[^'\">\\s]+))?)+\\s*|\\s*)\\/?>",
    "inputs": [
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a='\\x0a'"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "</\n",
        "pump": [
          "\ta=\"\"\na=\"\""
        ]
      },
      {
        "prefix": [
          "</a 0"
        ],
        "suffix": "",
        "pump": [
          " a='\\x0a'"
        ]
      },
      {
        "prefix": [
          "</a"
        ],
        "suffix": "=\na",
        "pump": [
          "\ta=\"\"\na=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:r?[$one_char_types]\\d*_*)+)keysort((?:_?inplace)?)$",
    "inputs": [
      {
        "prefix": [
          "s"
        ],
        "suffix": "",
        "pump": [
          "rs"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "rar_"
        ]
      },
      {
        "prefix": [
          "o"
        ],
        "suffix": "________yse_yse_ys_e_yse_ys__r",
        "pump": [
          "____"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:recall x)|(?:precision y)): \\[(\\d+.\\d+(, \\d+.\\d+)+)\\]",
    "inputs": [
      {
        "prefix": [
          "recall x: [000,0, 000"
        ],
        "suffix": "",
        "pump": [
          ", 0000"
        ]
      },
      {
        "prefix": [
          "recall x: [0a0"
        ],
        "suffix": " 0",
        "pump": [
          ", 0000"
        ]
      },
      {
        "prefix": [
          "recall x: [000,0, 000"
        ],
        "suffix": "",
        "pump": [
          ", 0000"
        ]
      },
      {
        "prefix": [
          "recall x: [0a0"
        ],
        "suffix": " [0r0",
        "pump": [
          ", 0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "## Command reference(.|\\n)*\\n## Team",
    "inputs": [
      {
        "prefix": [
          "## Command reference"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "## Command reference"
        ],
        "suffix": "r\n#",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "## Command reference"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "## Command reference"
        ],
        "suffix": " Te",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\(fwd\\)\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "(fwd)"
        ],
        "suffix": "\\x00",
        "pump": [
          "(fwd)\\x09(fwd)"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t(ff",
        "pump": [
          "\t(fwd)\t"
        ]
      },
      {
        "prefix": [
          "fwdfwd"
        ],
        "suffix": "\u0000",
        "pump": [
          "sfwd"
        ]
      },
      {
        "prefix": [
          "(fwd)"
        ],
        "suffix": "\\x00",
        "pump": [
          "(fwd)\\x09(fwd)"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "w",
        "pump": [
          "\t(fwd)\t"
        ]
      },
      {
        "prefix": [
          "fwdfwd"
        ],
        "suffix": "\u0000",
        "pump": [
          "sfwd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\.#])((?:[^\\.#\\[:\\\\\\s]+|\\\\.)+)",
    "inputs": [
      {
        "prefix": [
          "#a"
        ],
        "suffix": "\\\ta#",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:\\s*\\/\\/.*)*\\s*lodash\\._[^=]+=.+\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=lod",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//////////////   \t\n\n ",
        "pump": [
          "////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\s\\n]*<align left><\\/align>([\\s\\n])*){2,}",
    "inputs": [
      {
        "prefix": [
          "<align left></align>"
        ],
        "suffix": "</",
        "pump": [
          "\t<align left></align>\t"
        ]
      },
      {
        "prefix": [
          "<align left></align>"
        ],
        "suffix": "></align",
        "pump": [
          "\t<align left></align>\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "eft><",
        "pump": [
          "\t<align left></align>\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n                    --TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)\\s*(?:--DATA--\\s*(.*))?\\s*--EXCEPTION--\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "                    --TEST--"
        ],
        "suffix": "--TEMPLATE()----TEM",
        "pump": [
          "--TEMPLATE()--)--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ">Year.(&#160;|\\n)active(.|\\n)*?<td>[^<]*present\\\\s*<",
    "inputs": [
      {
        "prefix": [
          ">Year!&#160;active"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">Yeara\nactive"
        ],
        "suffix": "<\nacti",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ">Year>&#160;active"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">Yeara\nactive"
        ],
        "suffix": "ese",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))",
    "inputs": [
      {
        "prefix": [
          "::slotted("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "::slotted("
        ],
        "suffix": ")a(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "::slotted\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "|::slotted("
        ],
        "suffix": "SqiUSqiUAbCo=Oj\n*",
        "pump": [
          "SqiU"
        ]
      },
      {
        "prefix": [
          "::slotted("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "::slotted("
        ],
        "suffix": ":((::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "::slotted\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "::slotted("
        ],
        "suffix": "dettdettodbeslugq",
        "pump": [
          "dett"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\/JG-CONTROLLER((.|\\n)*)\\/\\/END JG-CONTROLLER",
    "inputs": [
      {
        "prefix": [
          "//JG-CONTROLLER"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "//JG-CONTROLLER"
        ],
        "suffix": "//J",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "//JG-CONTROLLER"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "//JG-CONTROLLER"
        ],
        "suffix": "NT",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9-.])*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "",
        "pump": [
          "00a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xFj1xFj1It8CR8tFmD\b",
        "pump": [
          "xFj1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(([^\"]|\\\\\"|{\\s*\\$\\w[\\w\\d_]+\\[\"(([^\"]|\\\\\")*)\"\\]\\s*})*)\"",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "Service Information \"delete\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "inputs": [
      {
        "prefix": [
          "Service Information \"delete\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"delete\"\n"
        ],
        "suffix": "UR",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Service Information \"delete\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"delete\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[\\[(([a-zA-Z_-]+\\.\\d+)?([a-zA-Z0-9_.{}-]+)*)\\]\\])",
    "inputs": [
      {
        "prefix": [
          "[["
        ],
        "suffix": "",
        "pump": [
          "{-"
        ]
      },
      {
        "prefix": [
          "[[a"
        ],
        "suffix": "a.a[",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "cL6ycL6yQFMUrkvkqb",
        "pump": [
          "cL6y"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "",
        "pump": [
          "{-"
        ]
      },
      {
        "prefix": [
          "[[a"
        ],
        "suffix": "a.a]",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ".[["
        ],
        "suffix": "b.0ab.0a-zA-Z0-9_.",
        "pump": [
          "b.0a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\n*(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+.*)(\\n.+|\\n{2,}([*+-].*|\\d+[.])[ \\t]+.*|\\n{2,}[ \\t]+\\S.*)*)\\n*",
    "inputs": [
      {
        "prefix": [
          "*\t"
        ],
        "suffix": "\n",
        "pump": [
          "\na\n\n*\t"
        ]
      },
      {
        "prefix": [
          "*\t"
        ],
        "suffix": "\n",
        "pump": [
          "\na\n*\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:%'|.)+?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "%a",
        "pump": [
          "%'%'"
        ]
      },
      {
        "prefix": [
          "'\u0000%'"
        ],
        "suffix": "",
        "pump": [
          "%'%'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a%",
        "pump": [
          "%'%'"
        ]
      },
      {
        "prefix": [
          "'\u0000%'"
        ],
        "suffix": "",
        "pump": [
          "%'%'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain servers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain servers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain servers:\n"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain servers:\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain servers:\n"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(\\\\[\\\\>]|[^>])*>[egimosx]*",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": ">a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "><",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([`](\\\\.|[^\"]|\\\\\")*?[`])+)",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "`\\a",
        "pump": [
          "````"
        ]
      },
      {
        "prefix": [
          "```\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: *\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\n)?( *)lodash\\.VERSION *=",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": " /**/**",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*/"
        ],
        "suffix": "*****************[*^**9I)8:(:?\\* [(?***[*^\\^**9I)8:(=*",
        "pump": [
          "******"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/?v?\\d\\.(\\d+\\.?)*",
    "inputs": [
      {
        "prefix": [
          "/v0.0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d\u0000d"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "/v0.0"
        ],
        "suffix": "0v",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d\u0000dd"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *try *\\{(?:\\s*\\/\\/.*)*\\n *var noNodeClass[\\s\\S]+?catch[^}]+}\\n",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "rc/*/\t}ca\n",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": " /*/c$\n var noNodeCl",
        "pump": [
          "a**a*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[-\\w]+( *\\. *[-/\\w]*)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a.a /",
        "pump": [
          " . "
        ]
      },
      {
        "prefix": [
          "-\u0000w"
        ],
        "suffix": "",
        "pump": [
          "/w"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a./$",
        "pump": [
          " . "
        ]
      },
      {
        "prefix": [
          "- "
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@example_html((.|[\\n\\r])*)\\*\\/",
    "inputs": [
      {
        "prefix": [
          "@example_html"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "@example_html"
        ],
        "suffix": "htm",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "@example_html"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "@example_html"
        ],
        "suffix": "e_",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)\\(((?:'.+'(?:::\\w+)?, *)*)(\\w+)\\)",
    "inputs": [
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "'!',''',"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": ":",
        "pump": [
          "'a','a',"
        ]
      },
      {
        "prefix": [
          "w'\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "','\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "'!',''',"
        ]
      },
      {
        "prefix": [
          "a("
        ],
        "suffix": ":",
        "pump": [
          "'a','a',"
        ]
      },
      {
        "prefix": [
          "w'\u0000"
        ],
        "suffix": "",
        "pump": [
          "','\u0000','\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<html>(.|\\r|\\n)*<title><\\/title>(.|\\r|\\n)*<\\/html>",
    "inputs": [
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "<",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<html>"
        ],
        "suffix": "itl",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^CMSSW_(\\d+)_(\\d+)_(\\d+)(_\\S+)*$",
    "inputs": [
      {
        "prefix": [
          "CMSSW_0_0_0"
        ],
        "suffix": "\\x09",
        "pump": [
          "_\\x00_`"
        ]
      },
      {
        "prefix": [
          "CMSSW_0_0_0"
        ],
        "suffix": "\t",
        "pump": [
          "_a_a"
        ]
      },
      {
        "prefix": [
          "CMSS"
        ],
        "suffix": "W_0_0_0_W_0_0_0_SW_0_0_0_S_0_0_0_\\SCMS_0_0dF&QB)C&%.\n4",
        "pump": [
          "W_0_0_0_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([#\\.\\@]?[\\w-]+|\\[([\\w-!?=:\"']+(=\"([^\"]|\\\\\")+\")? {0,})+\\]|\\~[\\w$]+=[\\w$]+|&[\\w$]+(=[\\w$]+)?|[#\\.\\@]?!([^!]|\\\\!)+!){0,}(\\{([^\\}]|\\\\\\})+\\})?",
    "inputs": [
      {
        "prefix": [
          "@a!\\\\!@a!@A!&aa=aa[!"
        ],
        "suffix": "",
        "pump": [
          "_=\"=\""
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "a}a\\!#!a&a=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "U["
        ],
        "suffix": "JxxQJxxQ7HhQnUbxb",
        "pump": [
          "JxxQ"
        ]
      },
      {
        "prefix": [
          "@a!\\\\\\x00@A!@a&aa$=aa$[:"
        ],
        "suffix": "",
        "pump": [
          "_=\"=\""
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "a#!\\!#!a{\\!#!a~a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "70617061291615814",
        "pump": [
          "7061"
        ]
      },
      {
        "prefix": [
          "@a!\\\\!@a!@A!&aa=aa[!"
        ],
        "suffix": "",
        "pump": [
          "_=\"=\""
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "=a!\"]#!a~",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "pBiSpBiS=iSBiS=iS",
        "pump": [
          "pBiS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$/(\\$.|.)*?/\\$",
    "inputs": [
      {
        "prefix": [
          "$/"
        ],
        "suffix": "",
        "pump": [
          "$0"
        ]
      },
      {
        "prefix": [
          "$/"
        ],
        "suffix": "a",
        "pump": [
          "$a"
        ]
      },
      {
        "prefix": [
          "$/"
        ],
        "suffix": "\\$..$.$/\\$\\$..$.$/\\$..$.$..$..|//.|$/\\..$..|/|$/\\$.",
        "pump": [
          "\\$..$.$/\\$"
        ]
      },
      {
        "prefix": [
          "$/"
        ],
        "suffix": "",
        "pump": [
          "$0"
        ]
      },
      {
        "prefix": [
          "$/"
        ],
        "suffix": "$$",
        "pump": [
          "$a"
        ]
      },
      {
        "prefix": [
          "$KbNmDMHVymFqmlWASjMX$/$KbNmDMHVymFqml$/"
        ],
        "suffix": "G$$$K$J\\PLTIANtZLTksVymFqmlWASj$/G$$$K$J\\PLTIANt",
        "pump": [
          "G$$$K$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*(.|[\\r\\n])*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\.|\\\\\\n|[^\\\\\\n])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+\\.)*[xy]$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "z..."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..............+......",
        "pump": [
          "...."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*inspec-test-fixture\\s+\\((\\d+\\.\\d+\\.\\d+(,\\s)?){2,}\\)",
    "inputs": [
      {
        "prefix": [
          "inspec-test-fixture (0.0.00, 0.0.0"
        ],
        "suffix": "",
        "pump": [
          "0.0.000.0.0"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixture\t(0.0.0"
        ],
        "suffix": "(0.0.0,\t",
        "pump": [
          "0.0.00"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixturesd\u0000d\u0000dd\u0000d\u0000dd\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dddddd"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixture (0.0.00, 0.0.0"
        ],
        "suffix": "",
        "pump": [
          "0.0.000.0.0"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixture\t(0.0.0"
        ],
        "suffix": "0.",
        "pump": [
          "0.0.00"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixturesd\u0000d\u0000dd\u0000d\u0000dd"
        ],
        "suffix": "",
        "pump": [
          "ddd\u0000dd"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixture (0.0.0"
        ],
        "suffix": "",
        "pump": [
          "0.0.000.0.0"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixture\t("
        ],
        "suffix": "0,\t",
        "pump": [
          "0.0.00"
        ]
      },
      {
        "prefix": [
          "inspec-test-fixturesd\u0000d\u0000dd\u0000dd"
        ],
        "suffix": "",
        "pump": [
          "dddddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^K([^+]+)+.+private$",
    "inputs": [
      {
        "prefix": [
          "K!"
        ],
        "suffix": "",
        "pump": [
          "!q"
        ]
      },
      {
        "prefix": [
          "Ka"
        ],
        "suffix": "at+privat",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "K\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "K~o\bK~o\bQ\"=4#fxt7LI",
        "pump": [
          "K~o\b"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z0-9\\._]+)\\s*;\\s*(([0-9\\.]+)+)",
    "inputs": [
      {
        "prefix": [
          "a;."
        ],
        "suffix": ".a",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ".;.."
        ],
        "suffix": "\u0000",
        "pump": [
          "0."
        ]
      },
      {
        "prefix": [
          "a;."
        ],
        "suffix": ".;$a",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ".;..0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\|.*\\|)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "||||"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "|a",
        "pump": [
          "||||"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(rim\\stablet\\sos)[\\/\\s-]?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "rim\ttablet\tos\ta"
        ],
        "suffix": "m\tta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "rimstabletsosw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "rim\ttablet\tos\ta"
        ],
        "suffix": "m\tr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "rimstabletsos.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*use\\s+([\\w\\:]+)*;.*$",
    "inputs": [
      {
        "prefix": [
          "use\\x09"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "use\ta"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "usesw"
        ],
        "suffix": "",
        "pump": [
          ":w"
        ]
      },
      {
        "prefix": [
          "use\t"
        ],
        "suffix": "WgbTWgbTaNjD3TaNjD",
        "pump": [
          "WgbT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z]*\\\\s*)*(([a-z]*[A-Z]*[0-9]*(_|-)*)*/*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\u0000",
        "pump": [
          "xa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "B"
        ],
        "suffix": "\u0000",
        "pump": [
          "xB"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[MmLlHhVvQqCcTtSsAaZz](?:\\d|[eE.,+-]|\\W)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "aa",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "aB",
        "pump": [
          "0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^\\s\"']+|([^\\s\"']*\"([^\"]*)\"[^\\s\"']*)+|'([^']*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\"'\"'",
        "pump": [
          "a\"\"a"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\"'",
        "pump": [
          "a\"\"a"
        ]
      },
      {
        "prefix": [
          "\"\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\+|(0(\\d+)?[-\\/.\\s]?))[1-9]\\d{0,2}[-\\/.\\s]?)?((\\(\\d{1,6}\\)|\\d{1,6})[-\\/.\\s]?)?(\\d+[-\\/.\\s]?)+\\d+$",
    "inputs": [
      {
        "prefix": [
          "1"
        ],
        "suffix": "\\x00",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\t(0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "069706970586115(",
        "pump": [
          "0697"
        ]
      },
      {
        "prefix": [
          "1"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ")",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0000000070702200\t",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z_](.[a-z_0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "{",
        "pump": [
          "!000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "$$",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "_\u00000_"
        ],
        "suffix": "\u0000",
        "pump": [
          "00_"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "zehnzehnn4083252307168063Y",
        "pump": [
          "zehn"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'((?:[^']|\\\\.)*)'$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'\\|\\|\\\\|"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\|\\|\\\\|\\\\\\\\'\\",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- Usage of azlyrics.com content by any third-party lyrics provider is prohibited by our licensing agreement. Sorry about that. -->((.|\\n|\\r)*?)</div>",
    "inputs": [
      {
        "prefix": [
          "<!-- Usage of azlyrics!com content by any third-party lyrics provider is prohibited by our licensing agreement! Sorry about that! -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!-- Usage of azlyricsacom content by any third-party lyrics provider is prohibited by our licensing agreementa Sorry about thata -->"
        ],
        "suffix": "zly",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!-- Usage of azlyrics<com content by any third-party lyrics provider is prohibited by our licensing agreement< Sorry about that< -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<!-- Usage of azlyricsacom content by any third-party lyrics provider is prohibited by our licensing agreementa Sorry about thata -->"
        ],
        "suffix": " by",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|[\\n\\r])*Compiling REx.*?[\\r\\n]",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "i",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*SELECT\\s+((COUNT)\\([\\s\\S]*\\)\\s*,?)+((\\s*)|(\\s+FROM[\\s\\S]*))?$",
    "inputs": [
      {
        "prefix": [
          "SELECT COUNT()"
        ],
        "suffix": "D",
        "pump": [
          "COUNT()COUNT()"
        ]
      },
      {
        "prefix": [
          "SELECT\t"
        ],
        "suffix": "COUNT(),CO",
        "pump": [
          "COUNT()COUNT()"
        ]
      },
      {
        "prefix": [
          "SELECTsCOUNTCOUNTS"
        ],
        "suffix": "\u0000",
        "pump": [
          "sCOUNTS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^Error: false should be true(\\n    at .+)+",
    "inputs": [
      {
        "prefix": [
          "Error: false should be true"
        ],
        "suffix": "\n  ",
        "pump": [
          "\n    at a\n    at a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".* type=(?:\"((?:\\\\.|[^\\\"])*)\"|([^;\\s]*))",
    "inputs": [
      {
        "prefix": [
          " type=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " type=\""
        ],
        "suffix": "yp a\" \t ty",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          " type=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " type=\""
        ],
        "suffix": "yp ta\" \t ty",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\d+(?:.\\d+)+(:?-\\d+)?(?:-[a-z0-9]{8})?",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "0:-0-",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "d\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "-000aa",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "d\u0000d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:N(['](\\\\.|[^']|\\\\')*?['])+)",
    "inputs": [
      {
        "prefix": [
          "N'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "N"
        ],
        "suffix": "a'N",
        "pump": [
          "'\\a'"
        ]
      },
      {
        "prefix": [
          "N'''\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      },
      {
        "prefix": [
          "N'\\\\\\B^KmBOdxa*sMS4K]NN"
        ],
        "suffix": "\\\\B\\BFt\\(sO(+yk+(sOhS:r[*)J).h]\\NHy<G8207\\N]K^B\\(sOhf6Z5Hl7Xrb",
        "pump": [
          "\\\\B\\BFt\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+)+(\\/){1}(.+)+",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "*CF-*CF-5B38;7 35",
        "pump": [
          "*CF-"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(&nY(&nYu)k+h#gc\"",
        "pump": [
          "(&nY"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "::(\\w+)+$",
    "inputs": [
      {
        "prefix": [
          "::0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "::a"
        ],
        "suffix": ":::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "::www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "XUJcXUJcCAGXgRfxVVB:",
        "pump": [
          "XUJc"
        ]
      },
      {
        "prefix": [
          "::0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "::a"
        ],
        "suffix": ":a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "::ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "::"
        ],
        "suffix": "L460L460Pgita9fGqVF:",
        "pump": [
          "L460"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(#.*)*\\s*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "#\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "#\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^  Mono: (Playback |Capture )?(\\d+)(\\s+|\\[[^\\]]+\\])*(Capture (\\d+))?",
    "inputs": [
      {
        "prefix": [
          "  Mono: 0\t"
        ],
        "suffix": "o: ",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "  Mono: ds"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\u001b\\[(\\d*;?)*\\S)",
    "inputs": [
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": ";aa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u001b["
        ],
        "suffix": ";aa\u001b",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+)[_-](\\d+\\.\\d{1,6})+",
    "inputs": [
      {
        "prefix": [
          "a-"
        ],
        "suffix": "0.",
        "pump": [
          "0.00"
        ]
      },
      {
        "prefix": [
          "\u0000-d\u0000dd\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd\u0000dd"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "0.",
        "pump": [
          "0.00"
        ]
      },
      {
        "prefix": [
          "\u0000-d\u0000dd"
        ],
        "suffix": "",
        "pump": [
          "dddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "----a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "#<!\n-- \n\t"
        ],
        "suffix": "\r\r\n\r\r\r\n\r\t\n\r\t\n\t\r\r\r\t\t\r",
        "pump": [
          "\r\r\n\r"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "--\t-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "\r\r\b\n\r\r\b\n\b\r\b\n\b\r\b\r\b\n\r\r\b\r\r\r",
        "pump": [
          "\r\r\b\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\(([^\\)]*\\(\\?[^\\)]*\\)[^\\)]*)*\\)",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "(",
        "pump": [
          "a(?(?)"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "(",
        "pump": [
          "a(?(?)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\d+\\.\\s+([^\\n]*)\\n)*(\\d+\\.\\s+([^\\n]*)\\n?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0a\n.",
        "pump": [
          "0.\t\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\.[^/]+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          ".!.!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "/",
        "pump": [
          "0\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/",
        "pump": [
          ".!.!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "/",
        "pump": [
          "0\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..^.^^.^..^.^^.^..JONIFWFINOJHQNBGNRDYMRSJYCS..JONIFWDJYCS..JONIFWDRZYIORJBADYCS..JONI/",
        "pump": [
          "..^.^^.^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "int3\\s*\\n(\\s*int3\\s*\\n)*",
    "inputs": [
      {
        "prefix": [
          "int3\n"
        ],
        "suffix": "\t\nn",
        "pump": [
          "int3\n\nint3\n"
        ]
      },
      {
        "prefix": [
          "int3\n"
        ],
        "suffix": "inint",
        "pump": [
          "int3\n\nint3\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{%\\s*(\\w+)(?:\\s+(?:\\w+)\\s*=\\s*(?:(?:\"(?:.+?)\")|(?:'(?:.+?)')))*\\s*%\\}",
    "inputs": [
      {
        "prefix": [
          "{%0"
        ],
        "suffix": "",
        "pump": [
          " a=\"!\"\\x090=\"\"\""
        ]
      },
      {
        "prefix": [
          "{%a"
        ],
        "suffix": "=",
        "pump": [
          "\ta=\"a\"\ta=\"a\""
        ]
      },
      {
        "prefix": [
          "{%0"
        ],
        "suffix": "",
        "pump": [
          " a=\"!\"\\x090=\"\"\""
        ]
      },
      {
        "prefix": [
          "{%a"
        ],
        "suffix": "%}\"{%a",
        "pump": [
          "\ta=\"a\"\ta=\"a\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|[\\r\\n])*?-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "->-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<link.*href=(s*?)*(.+).*?(s*?)>",
    "inputs": [
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "e",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "sa",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^I generate a (.*)project named '((?:\\w|-|_)+)' that is '([^']*)' and described as '([^']*)'$",
    "inputs": [
      {
        "prefix": [
          "I generate a project named 'q"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          "I generate a project named '"
        ],
        "suffix": "mapr",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:.*[\\\\\\/])*(\\w+)(?:\\.my\\w)?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "my/",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      },
      {
        "prefix": [
          "'''(\\5/2\\6"
        ],
        "suffix": "\\)\\)/\\\\)\\)/\\3\\w\\[\\w\\",
        "pump": [
          "\\)\\)/\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "y",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|\\n)*FAIL at -e line 1\\.",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\w+(\\.\\w+)?|'.*?'|\".*?\")\\s+(in|==|!=|not in)\\s+(\\w+(\\.\\w+)?|'.*?'|\".*?\")(\\s+(or|and)\\s+)?)+$",
    "inputs": [
      {
        "prefix": [
          "a.a in 0"
        ],
        "suffix": "{",
        "pump": [
          "\"\"\\x09!=\\x09\"\"\\x09!=\\x09'\"'\"\"\"\\x09in\\x090"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "nd\tand",
        "pump": [
          "a\t!=\ta''\t!=\t'\t!=\t''"
        ]
      },
      {
        "prefix": [
          "ws!=swws!=s\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"ws!=s\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Ht in\tnK6JJY3Yg5Ht in\tnK6JJY3Yg5HIDkHX0kVuKFWN80Y3x1BVHdBiZmKX2LEXPdi in\tnninnHt in\tnn\t in\tnnYg ",
        "pump": [
          "Ht in\tnK6JJY3Yg5"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#([^\\s=]+)*",
    "inputs": [
      {
        "prefix": [
          "#a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#\u0000\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#\u0000\u0000"
        ],
        "suffix": "=",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(no)\\s+([\\w\\-:]*)\\s*(\\d+[.]?(\\d+[._]?)*)",
    "inputs": [
      {
        "prefix": [
          "no\t0.0"
        ],
        "suffix": "n",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "no\t0.0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*>",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "\\<T bGfgOTt"
        ],
        "suffix": "yAT bGfgO yAT bGfgO TyHA7A7yAHtMHy",
        "pump": [
          "yAT bGfgO "
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a_\"a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asww"
        ],
        "suffix": "",
        "pump": [
          "wsww"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "B\nD6\nD62NNB\nD6\nD62NN\nD6\nN6\nD62NN\nD6\nD62j",
        "pump": [
          "B\nD6\nD62NN"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "<nw jLjLvBC\riiBZqBC\r"
        ],
        "suffix": "qB\rinw jqB\rinw jLjLv",
        "pump": [
          "qB\rinw j"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*test\\s+('(.*)'|\"(.*)\")+\\s*(\\{|do)",
    "inputs": [
      {
        "prefix": [
          "test ''"
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      },
      {
        "prefix": [
          "test\t"
        ],
        "suffix": "\t",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<p.*?>|<P>|<br>)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "<P",
        "pump": [
          "<p><P>"
        ]
      },
      {
        "prefix": [
          "<P><p\u0000"
        ],
        "suffix": "",
        "pump": [
          "><p\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<P",
        "pump": [
          "<p><P>"
        ]
      },
      {
        "prefix": [
          "<P><p"
        ],
        "suffix": "",
        "pump": [
          "><P><p"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*)(, | {2})((\\s*(\\w+)(\\s+|::)\\w+\\s*.*?,?)+)\\s*$",
    "inputs": [
      {
        "prefix": [
          ", "
        ],
        "suffix": "\ta",
        "pump": [
          "\ta\taa\ta"
        ]
      },
      {
        "prefix": [
          "  wswwsww"
        ],
        "suffix": "",
        "pump": [
          "wwsww"
        ]
      },
      {
        "prefix": [
          ", 2\n2, 22\n"
        ],
        "suffix": "\nC641B\nC641BeccEaD4EB8D20ce5BEbA,\n2u",
        "pump": [
          "\nC641B"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:'[^']*'|\"[^\"]*\"|,[\\s\\n]|[^\\s\\n])*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\t\"\t'\t",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\n)*(#=\\ *require\\ +.*\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "=",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^=,\\s]*)\\s*=\\s*((?:\"(?:\\\\.|[^\"\\\\]+)*\"|'(?:\\\\.|[^'\\\\]+)*')|[^'\"\\s]*)",
    "inputs": [
      {
        "prefix": [
          "\\x09='"
        ],
        "suffix": "",
        "pump": [
          "]!"
        ]
      },
      {
        "prefix": [
          "=\"a"
        ],
        "suffix": "\\a'a\\,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "L='"
        ],
        "suffix": "o<WWo<WW:k|aRhjZ\rU",
        "pump": [
          "o<WW"
        ]
      },
      {
        "prefix": [
          "\\x09='"
        ],
        "suffix": "",
        "pump": [
          "]!"
        ]
      },
      {
        "prefix": [
          "='a"
        ],
        "suffix": "\\\"'\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "u=\""
        ],
        "suffix": "\ngo<\ngo<\nMV\t19bXRm",
        "pump": [
          "\ngo<"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*((?:.|\\s)+?)\\s*\\{((?:.|\\s)+?)\\}",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "}\t",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "Dy$ua"
        ],
        "suffix": "\t.$|~}  t\t\t.$|~}  t\t,8c%8LfM3pKx8M^4<jK\tovQex\ttd\nDf\rQvbY'O5io\n%S(,x-\t&=\\^=y\rl2+6\t(FlR%?Cd^P>/^2eeyj|>",
        "pump": [
          "\t.$|~}  t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
    "inputs": [
      {
        "prefix": [
          "^.^@[250.250.250.2500:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "2a\"@[26.26.26.",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "^\"^\"@a-.^@a.a!\\x0e^\"@[250.250.250.2500:\\x7f"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "-",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\\\\\|\\\\.|[^'\\\\])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'\\\\\\\\\\'"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \t\r\\\\dnqyvxx4{RE5443FD8bc290Fee794Bngrenelc\b\r\b\b\t\n\b\r\n\tEruYO79pGy9DTpklMY",
        "pump": [
          "\\\\\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\?\\[([^\\[]+?)\\\\?\\])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\[a[",
        "pump": [
          "\\[a\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "]a[",
        "pump": [
          "\\[a\\]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([^>\\s\\/]+)((\\s+[^=>\\s]+(\\s*=\\s*((\\\"[^\"]*\\\")|(\\'[^']*\\')|[^>\\s]+))?)*\\s*\\/?\\s*)>",
    "inputs": [
      {
        "prefix": [
          "<\\x00"
        ],
        "suffix": "",
        "pump": [
          " ?=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=\"/\t/\"\t=",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<\u0000s\u0000=s"
        ],
        "suffix": "",
        "pump": [
          "\"\"s\u0000=s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*>.*<\\/(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a_\"\t<",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a<a\ta=\"a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "R jB\nNjNkzR jB\nNjNkzqletynzchryufhbohdbgxbosiptterksybmtxbeddhciuslhkyczsywftgyotiedbay ",
        "pump": [
          "R jB\nNjNkz"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a_>",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "I\tsMt\taZI\tsMt\taZOhdrmwqUtMs\tiJI\tsMt\tssMti",
        "pump": [
          "I\tsMt\taZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(\\s*\\n)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\t",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a\n",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```(.*\\n)+?```",
    "inputs": [
      {
        "prefix": [
          "```\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`a\n``",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "```\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Name Servers:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Name Servers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name Servers:\n"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Name Servers:\\x0aN\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Name Servers:\n"
        ],
        "suffix": "s:a\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([\\s\\r\\n]*|(\\/\\/[^\\r\\n]*)[\\r\\n]|\\/\\*(?:.|\\r|\\n)*\\*\\/)*",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n/",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\r|\\n|\\t)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\na",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\"([^\\\\\\\\\\\"]|\\\\\\\\.|\\\\\\\\)*\\\")|('([^\\\\\\\\']|\\\\\\\\.|\\\\\\\\)*')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\("
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\\",
        "pump": [
          "\\\\a"
        ]
      },
      {
        "prefix": [
          "'\\"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",/^=[?@?%,<%^;=`~&}.%",
        "pump": [
          "\\\\\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\("
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\",
        "pump": [
          "\\\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "'\""
        ],
        "suffix": "\\\\|\\\\|\\\\\\\\\\|\\\\|\\\\|\\\\\\\\\\|\\\\gyfc\\\\ssnjgyfc\\\\ssnbfhqtchgiyvbjyeybhjatceeaizjgyfc\\\\ssnhgiyvbjyeybhjatcee",
        "pump": [
          "\\\\|\\\\|\\\\\\\\\\|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[\\s*((\\d+(\\s+)?)*)\\s*\\]\\s*(\\d+)",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "\t[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "00300030000300030",
        "pump": [
          "0030"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "0a[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "]["
        ],
        "suffix": "74777477115831334",
        "pump": [
          "7477"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*,)*\\s*CredSSP\\s*([^,]*),?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e,,Ca",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e,\tCredSS",
        "pump": [
          "a,"
        ]
      },
      {
        "prefix": [
          ","
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(E:Failed to fetch.+Hash Sum mismatch)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "t",
        "pump": [
          "E:Failed to fetchaHash Sum mismatchE:Failed to fetchaHash Sum mismatch"
        ]
      },
      {
        "prefix": [
          "E:Failed to fetch\u0000Hash Sum mismatchE:Failed to fetch\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "Hash Sum mismatchE:Failed to fetch\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "hHas",
        "pump": [
          "E:Failed to fetchaHash Sum mismatchE:Failed to fetchaHash Sum mismatch"
        ]
      },
      {
        "prefix": [
          "E:Failed to fetch\u0000Hash Sum mismatchE:Failed to fetch\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "Hash Sum mismatchE:Failed to fetch\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^/?((?:[^/\\s]+/?)+)",
    "inputs": [
      {
        "prefix": [
          "/a"
        ],
        "suffix": "a//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "s",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[\\s\\pP]+|(?:&(?:[a-z]+|#[0-9]+);?))*$",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "#&0",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "p"
        ],
        "suffix": "\u0000",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "F"
        ],
        "suffix": "\r\r\n\r\r\r\n\r \r \t \r\t\r\t~",
        "pump": [
          "\r\r\n\r"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "&a"
        ],
        "suffix": "\u0000",
        "pump": [
          "s&a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "::_%::_%\"[_[.:&']\\+",
        "pump": [
          "::_%"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<body[^>]*>((\\n|.)*)<\\/body>",
    "inputs": [
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "b<></bo",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "b>",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": ",\"a,',",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": ",",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+\\n){3,}\\n",
    "inputs": [
      {
        "prefix": [
          "!\\x0a\\x0a\\x0a\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "a\na\n"
        ],
        "suffix": "a\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.?:container\\((?:[^()]+|\\([^()]*\\))+\\)",
    "inputs": [
      {
        "prefix": [
          ".:container(!"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          ".:container(a"
        ],
        "suffix": ".:()a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\u0000\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":container("
        ],
        "suffix": "c\tF<c\tF<A}%,Q`/J!A",
        "pump": [
          "c\tF<"
        ]
      },
      {
        "prefix": [
          ".:container(;"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          ".:container(a"
        ],
        "suffix": "er:().:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "):container("
        ],
        "suffix": "^\\.?^\\.?:container\\",
        "pump": [
          "^\\.?"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<!--\\s*([\\/]{0,1})tmpl_([a-z]+)+\\s*([\\w\\W]*)\\s*-->$",
    "inputs": [
      {
        "prefix": [
          "<!--/tmpl_a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--tmpl_a"
        ],
        "suffix": "--t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--tmpl_aaa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--tmpl_"
        ],
        "suffix": "lpmtlpmt----a\t \r\t\n\n \t \n\n\n\n\n   \r \t\r\r\r\r\t \n\r\t\t \n\t \t\r\r\r\t\t\n\t\r\t\n\t\n\r\t\r\t\t\t \r\t\n\n\t\r\t \t ",
        "pump": [
          "lpmt"
        ]
      },
      {
        "prefix": [
          "<!--/tmpl_a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--tmpl_a"
        ],
        "suffix": "t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--tmpl_aa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<!--tmpl_"
        ],
        "suffix": "ttlpttlpmtpm!--tmpl--FF0ec2a5215C9fc2bFl_E1Ec1c4f09fDcd8A95E1C66F598\t\t\r\n  \n\n\r\t \n\n\t\n\t   \r\t\n\t\t \t",
        "pump": [
          "ttlp"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(&lt;\\/?\\w(.|\\n)*?\\/?&gt;)",
    "inputs": [
      {
        "prefix": [
          "&lt;0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "&lt;/a"
        ],
        "suffix": "/",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "&lt;0"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "&lt;/a"
        ],
        "suffix": "gt",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*([\\r\\n]|.)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<!--\\s*?@@(?:(?:\\n?.)*?)-->)",
    "inputs": [
      {
        "prefix": [
          "<!--@@"
        ],
        "suffix": "",
        "pump": [
          "\\x0a."
        ]
      },
      {
        "prefix": [
          "<!--@@"
        ],
        "suffix": "-@",
        "pump": [
          "\na"
        ]
      },
      {
        "prefix": [
          "<!--@@"
        ],
        "suffix": "",
        "pump": [
          "\\x0a."
        ]
      },
      {
        "prefix": [
          "<!--@@"
        ],
        "suffix": "-@\n",
        "pump": [
          "\na"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\d+\\s+\\d+\\s*)*)(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "0\t00"
        ]
      },
      {
        "prefix": [
          "dsd"
        ],
        "suffix": "",
        "pump": [
          "ddsd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "6\t66666\t666\t66666\t66666\t666\t\t\t66\t6\t6\t6\t\t\t\t\t6\t6\t\t6\t\t\t6\t\t\t\b\b\t\t\n\t",
        "pump": [
          "6\t66666\t66"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<body[^>]*>((.|[\\n\\r])*)<\\/body>",
    "inputs": [
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "b<></bo",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<body>"
        ],
        "suffix": "b>",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<Translate(\\s*)?((component=\"[a-z]+\")(\\s*)|(contentKey=(\"[a-zA-Z0-9.\\-_]+\"|\\{.*\\}))(\\s*)|(interpolate=\\{.*\\})(\\s*))*(\\s*)\\/?>|<\\/Translate>",
    "inputs": [
      {
        "prefix": [
          "<Translate"
        ],
        "suffix": "",
        "pump": [
          "component=\"a\" contentKey={}contentKey={}"
        ]
      },
      {
        "prefix": [
          "<Translate"
        ],
        "suffix": "\tcomponen",
        "pump": [
          "component=\"a\"contentKey={}contentKey={}"
        ]
      },
      {
        "prefix": [
          "<Translate"
        ],
        "suffix": "",
        "pump": [
          "component=\"a\" contentKey={}contentKey={}"
        ]
      },
      {
        "prefix": [
          "<Translate"
        ],
        "suffix": "\tcomponen",
        "pump": [
          "component=\"a\"contentKey={}contentKey={}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+)(\\(((\\w|\\d|\\.)+,?)*\\))?\\.?$",
    "inputs": [
      {
        "prefix": [
          "a("
        ],
        "suffix": "",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a(0"
        ],
        "suffix": "a.(",
        "pump": [
          "0aa"
        ]
      },
      {
        "prefix": [
          "rc("
        ],
        "suffix": "9FYJ9FYJum9o9F",
        "pump": [
          "9FYJ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([MZLHVCSQTAmzlhvcsqta])([eE ,\\-.\\d]+)*",
    "inputs": [
      {
        "prefix": [
          "a "
        ],
        "suffix": "aa",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "Ad"
        ],
        "suffix": "\u0000",
        "pump": [
          ",d"
        ]
      },
      {
        "prefix": [
          "a "
        ],
        "suffix": "$",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "AE"
        ],
        "suffix": "\u0000",
        "pump": [
          ",E"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<meta name=\"keywords\"([^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<meta name=\"keywords\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"keywords\""
        ],
        "suffix": "eywo",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Q<meta name=\"keywo"
        ],
        "suffix": "rds\"rds\"'dE\n'7.\t14L|'h",
        "pump": [
          "rds\""
        ]
      },
      {
        "prefix": [
          "<meta name=\"keywords\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"keywords\""
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<meta name=\"keywo"
        ],
        "suffix": "rds\"rds\"FwzR8lJz\n~&B^\n",
        "pump": [
          "rds\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([:*])(\\w+)|\\{(\\w+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}",
    "inputs": [
      {
        "prefix": [
          "{a:{"
        ],
        "suffix": "",
        "pump": [
          "~!"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "F:g\rF:g\r0A>/lSeT>[s",
        "pump": [
          "F:g\r"
        ]
      },
      {
        "prefix": [
          "{0:{"
        ],
        "suffix": "",
        "pump": [
          "~;"
        ]
      },
      {
        "prefix": [
          "{a:a"
        ],
        "suffix": "a:\\*",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "9\n{"
        ],
        "suffix": "A:foA:fo(c06zf?#^Rp",
        "pump": [
          "A:fo"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\((?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*(.+?)(?:\\s|\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\n)*[,\\)]",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          " /**/\\x09/**/"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "//",
        "pump": [
          "/**//**/"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          " /**/\\x09/**/"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "//",
        "pump": [
          "/**//**/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\((?:[^)(]+|\\((?:[^)(]+|\\([^)(]*\\))*\\))*\\)",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "(()",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "*lpG*lpGlD{I^VGmYA",
        "pump": [
          "*lpG"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "a(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "Z("
        ],
        "suffix": "1'AL1'ALZ}\nzOx#Ru\"",
        "pump": [
          "1'AL"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(?:[^\"\\\\]+|\\\\.)*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\\"\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "/\r(Y/\r(Yw9bum3B\r\t>",
        "pump": [
          "/\r(Y"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\a\"\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "M\""
        ],
        "suffix": "2)452)45vQitu'RbWM",
        "pump": [
          "2)45"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^javascript\\{((.|\\r?\\n)+)\\}$",
    "inputs": [
      {
        "prefix": [
          "javascript{!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "javascript{"
        ],
        "suffix": "cr",
        "pump": [
          "a\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(?:[^']|\\\\.)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([\\-A-Za-z0-9:_]+)((?:\\s+[\\-A-Za-z0-9:_]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s-a"
        ],
        "suffix": "",
        "pump": [
          "s-a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d\\d)/(\\d\\d)/(\\d\\d\\d\\d)\\s*\\t\\s*((?:[^\\t]|\\n)*?)\\s*\\t\\s*([0-9.]+),(\\d\\d)\\s*\\t\\s*([0-9.]+),(\\d\\d)",
    "inputs": [
      {
        "prefix": [
          "00/00/0000\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "00/00/0000\t"
        ],
        "suffix": ",00\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "00/00/0000\t\t\t\t"
        ],
        "suffix": "\n\n\n\b\n\r\r\r\n\n\t\t\t\t0",
        "pump": [
          "\n\n\n\b"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\s\\n]*<align center><\\/align>[\\s\\n]*){2,}",
    "inputs": [
      {
        "prefix": [
          "<align center></align>"
        ],
        "suffix": "\t<alig",
        "pump": [
          "\t<align center></align>\t"
        ]
      },
      {
        "prefix": [
          "<align center></align>"
        ],
        "suffix": "\t<al",
        "pump": [
          "\t<align center></align>\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ig",
        "pump": [
          "\t<align center></align>\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\{[^}]*\\}|[^/])*)[/](.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "{}{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^;])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ")(;\\",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z]+(\\_*[a-zA-Z0-9]+)*",
    "inputs": [
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a0_",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(((.|[\\r\\n])*)\\)$",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "(",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[error\\].+?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "r",
        "pump": [
          "[error]a\n[error]a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "err",
        "pump": [
          "[error]a\n[error]a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "function getDefaultAdapter(.|[\\r\\n])*?return adapter;[\\r\\n]}[\\r\\n]",
    "inputs": [
      {
        "prefix": [
          "function getDefaultAdapter"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "function getDefaultAdapter"
        ],
        "suffix": "e",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "function getDefaultAdapter"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "function getDefaultAdapter"
        ],
        "suffix": " adapte",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "//[^\\n]*\\n|/\\*(?:.|[\\r\\n])*?\\*/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*\na/",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s+(([^\\s].+\\n){2,})",
    "inputs": [
      {
        "prefix": [
          "\taa\n"
        ],
        "suffix": "\ta",
        "pump": [
          "aa\naa\n"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "aa\naa\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*/a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "11Qw\b/*4od\tZ\n\b"
        ],
        "suffix": "\r\n\r\r\r\n\r\r\b\r\r\b#/{&nu1<Ti#Uh~dH9?x<,~rUQw\bx<,~rUQw\b\nS/*4od\tZ_u/*",
        "pump": [
          "\r\n\r\r"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*/a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\r\r\b\n\r\r\b\n\r\b\n\r\n\n\r\n\b\n\t\b^",
        "pump": [
          "\r\r\b\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([^\\x00-\\x1F\\x2E\\x2F\\x3A\\x7F]{1,63}\\.)*?)*?([^\\x00-\\x1F\\x2E\\x2F\\x3A\\x7F]{1,63})(\\.[^\\x00-\\x1F\\x2E\\x2F\\x3A\\x7F]{1,63})?(:\\d{1,5})?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:",
        "pump": [
          "a.."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "y\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0a::",
        "pump": [
          "a.."
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "y\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "+\\.+\\.pVVITt2\\.Tt2\\.+\\.+\\.pVVITt2\\.Tt2\\.nGMHHWG.\"},!\"#(=^?|.+\\.pVVI+VVITt.+\\.R3NF.",
        "pump": [
          "+\\.+\\.pVVITt2\\.Tt2\\."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(\\\\\\n)?\\/(\\n|(.|\\n)*?[^\\\\]\\n)",
    "inputs": [
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "\\",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*#.*)*(?:\\n([^\\n\\S]*))*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t#\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "S",
        "pump": [
          "s#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t#\t"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "S",
        "pump": [
          "s#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\s\\S]*?<(\\/?)([-a-zA-Z:0-9_.]+|{[\\s\\S]+?}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+{[\\s\\S]+?}|\\s+[-a-zA-Z:0-9_.]+|\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{[\\s\\S]+?}))*\\s*(\\/?)\\s*>",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\s\"']+|[\"'][^\"']*[\"'])+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"\t\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(((?:(?: OR )?\\[[^\\]]+\\]\\s*=\\s*'(?:''|[^']+)*')+)\\)$",
    "inputs": [
      {
        "prefix": [
          "( OR [^]='"
        ],
        "suffix": "",
        "pump": [
          "(!"
        ]
      },
      {
        "prefix": [
          "([a]='a"
        ],
        "suffix": " OR",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "([4]='"
        ],
        "suffix": "=F*{=F*{u\t\r=F*{u>)",
        "pump": [
          "=F*{"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\s]*([\\S]+)+[\\s]*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\ta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "SS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "SSS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[a-zA-Z_\\$]+[\\w\\$]*(?:\\s*\\.\\s*(?:[a-zA-Z_\\$]+[\\w\\$]*|\\d+))*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t..",
        "pump": [
          "\t.aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0a\t",
        "pump": [
          "\t.aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Async:\\*\\*((.|[\\n\\r])+?)\\n\\n",
    "inputs": [
      {
        "prefix": [
          "Async:**!"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "Async:**"
        ],
        "suffix": "yn",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Async:**B"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "Async:**"
        ],
        "suffix": "yAs",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/\\*(.|[\\r\\n])*?\\*/)|(--(.*|[\\r\\n]))",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z0-9]|[A-Z0-9]+[a-z0-9]+(?:[A-Z0-9]+[a-z0-9]*)*)$",
    "inputs": [
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0a0"
        ],
        "suffix": "#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "Aa09Aa09YFNAA96iG5A*",
        "pump": [
          "Aa09"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "sleipnir\t0._0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "sleipnir/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "sleipnir\t0._0"
        ],
        "suffix": "l",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "sleipnir/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[\\d+\\-=\\/ \\*]+(?:\\s?,\\s?\\d+)){4,}",
    "inputs": [
      {
        "prefix": [
          " \t,\t0 \t,\t0 \t,\t0"
        ],
        "suffix": "\t",
        "pump": [
          " \t,00"
        ]
      },
      {
        "prefix": [
          " ,d ,d ,d ,d ,d"
        ],
        "suffix": "\u0000",
        "pump": [
          "/,d"
        ]
      },
      {
        "prefix": [
          " \t,\t0 \t,\t0 \t,\t0"
        ],
        "suffix": ",\t \t",
        "pump": [
          " \t,00"
        ]
      },
      {
        "prefix": [
          " ,d ,d *"
        ],
        "suffix": "",
        "pump": [
          "/*"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\t",
        "pump": [
          " \t,00"
        ]
      },
      {
        "prefix": [
          " ,d ,dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "/,dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "f\\s+((([\\d]{1,}\\/[\\d]{1,}\\/[\\d]{1,}[\\s]?){3,})+)",
    "inputs": [
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "0\t0/",
        "pump": [
          "0/0/000/0/00/0/0"
        ]
      },
      {
        "prefix": [
          "fsd/d/dd/d/dd/d/dd/d/dd/d/dd/d/dd/d/ds"
        ],
        "suffix": "\u0000",
        "pump": [
          "d/d/dd/d/dd/d/dd/d/ds"
        ]
      },
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "\t\t0/0/00/",
        "pump": [
          "0/0/000/0/00/0/0"
        ]
      },
      {
        "prefix": [
          "fsd/d/dd/d/dd/d/dd/d/dd/d/dd/d/dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd/d/dd/d/dd/d/dd/d/dd"
        ]
      },
      {
        "prefix": [
          "f\t0/0/0"
        ],
        "suffix": "\tf",
        "pump": [
          "0/0/00"
        ]
      },
      {
        "prefix": [
          "fsd/d/dd/d/dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd/d/dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "('(?:\\\\'|.)*?')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\(?:(\\S[^\\s,;)}\\]]*)|(?:\\s+(?:#.*)?)*)",
    "inputs": [
      {
        "prefix": [
          "\\\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\\\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<tpl(?:\\sname=\"([\\w-]+)\")?>((?:.|\\n)*?)<\\/tpl>",
    "inputs": [
      {
        "prefix": [
          "<tpl>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<tpl>"
        ],
        "suffix": "\nn",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<tpl>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<tpl>"
        ],
        "suffix": "t<t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<meta name=\"robots\"([^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<meta name=\"robots\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"robots\""
        ],
        "suffix": "t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "m<meta name=\"rob"
        ],
        "suffix": "ots\"ots\"M^`$`xf)BD\tCKx",
        "pump": [
          "ots\""
        ]
      },
      {
        "prefix": [
          "<meta name=\"robots\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"robots\""
        ],
        "suffix": " n$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "e<meta name=\"rob"
        ],
        "suffix": "ots\"ots\"sSI@vVH$yohY$<",
        "pump": [
          "ots\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w+(?:[\\w.-]+\\.)+\\w+$",
    "inputs": [
      {
        "prefix": [
          "aa."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a.",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "w-\u0000-"
        ],
        "suffix": "",
        "pump": [
          "w-\u0000-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s+)?(((\\w+)|\\.)+)\\((\\d(-\\d)?)\\)=(\\d)",
    "inputs": [
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ")=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000w"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "XojpXojpGxjOCZ4J",
        "pump": [
          "Xojp"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "w\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "PPuFPPuFDqh0RJR1",
        "pump": [
          "PPuF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9a-zA-Z_]+[ ]?)*[0-9a-zA-Z_]$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a  ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2bBE2bBEac1a83DAd6a\b",
        "pump": [
          "2bBE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "ORGANIZER(:|;)(.*?\\r?\\n)(\\s.*?\\r?\\n)*",
    "inputs": [
      {
        "prefix": [
          "ORGANIZER;\r\n"
        ],
        "suffix": "NIZ",
        "pump": [
          "\t\n\r\n"
        ]
      },
      {
        "prefix": [
          "ORGANIZER;\r\n"
        ],
        "suffix": "A",
        "pump": [
          "\t\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^a-zA-Z0-9]|-)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "0",
        "pump": [
          "$-"
        ]
      },
      {
        "prefix": [
          "\u0000-"
        ],
        "suffix": "0",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$a",
        "pump": [
          "$-"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "0",
        "pump": [
          "-\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9a-zA-Z]+([_.-]?[0-9a-zA-Z]+)*@[0-9a-zA-Z]+[0-9,a-z,A-Z,.,-]*(.){1}[a-zA-Z]{2,4})+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "@0a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0Yxf0YxfSSdskJkLup",
        "pump": [
          "0Yxf"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": ",$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "SJ62SJ62XPALDiAqlD",
        "pump": [
          "SJ62"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(http|https|ftp):(\\/\\/|\\\\)(([\\w\\/\\\\+\\-~`@:%])+\\.)+([\\w\\/\\\\.\\=\\?\\+\\-~`@\\':!%#]|(&)|&)+",
    "inputs": [
      {
        "prefix": [
          "ftp:\\a."
        ],
        "suffix": "\u0000",
        "pump": [
          "a&"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(var|const)\\s+settings\\s*=\\s*(\\{(.|\\n)+?\\n\\s*\\};)",
    "inputs": [
      {
        "prefix": [
          "var settings={!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "var\tsettings={"
        ],
        "suffix": "ca",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "var settings={w"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "var\tsettings={"
        ],
        "suffix": "ng",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<\\?\\=[\\s]*(\\$[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*(?:(?:->\\S+|\\[[^\\]]+\\]))*)[\\s]*;?[\\s]*\\?\\>",
    "inputs": [
      {
        "prefix": [
          "<?=$A"
        ],
        "suffix": "",
        "pump": [
          "->\\x00->\\"
        ]
      },
      {
        "prefix": [
          "<?=$a"
        ],
        "suffix": "=$",
        "pump": [
          "->a->a"
        ]
      },
      {
        "prefix": [
          "<?=$\\x7f"
        ],
        "suffix": "",
        "pump": [
          "->\\x00->\\"
        ]
      },
      {
        "prefix": [
          "<?=$a"
        ],
        "suffix": "=]-?[\t;",
        "pump": [
          "->a->a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<link.*href=(s*?)*(.+)[?]__inline.*?(s*?)>",
    "inputs": [
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "nl",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<linkhref="
        ],
        "suffix": "l",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[A-Z][^\\s]*\\s?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x09!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\t",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA\u0000"
        ],
        "suffix": "s\u0000",
        "pump": [
          "A\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "M}DGM}DGWF/A;V=EAM\bLwW^iJ{\n'",
        "pump": [
          "M}DG"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*/)*nph-[^/]*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ph/np",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "V((\\d)+\\.?)+__.+\\.sql$",
    "inputs": [
      {
        "prefix": [
          "V0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "V0"
        ],
        "suffix": "s",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Vddd"
        ],
        "suffix": "",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "sV"
        ],
        "suffix": "33333333333333333.",
        "pump": [
          "3333"
        ]
      },
      {
        "prefix": [
          "V0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "V0"
        ],
        "suffix": "sa",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Vdd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "V"
        ],
        "suffix": "096809689045622937",
        "pump": [
          "0968"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(img|embed)([^>]+src=['\"]([^'\"]+)['\"])*[^\\/>]*\\/?>",
    "inputs": [
      {
        "prefix": [
          "<img"
        ],
        "suffix": "",
        "pump": [
          "?src=\"src=\"ssrc=\"s\""
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "c>\"a/sr",
        "pump": [
          "asrc=\"a\"asrc=\"a\""
        ]
      },
      {
        "prefix": [
          "<img\u0000src='"
        ],
        "suffix": "",
        "pump": [
          "\"\"\u0000src='"
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "",
        "pump": [
          "?src=\"src=\"ssrc=\"s\""
        ]
      },
      {
        "prefix": [
          "<img"
        ],
        "suffix": "c",
        "pump": [
          "asrc=\"a\"asrc=\"a\""
        ]
      },
      {
        "prefix": [
          "<img\u0000src=\"\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\u0000src=\"\u0000\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "foo|(x+x+)+y",
    "inputs": [
      {
        "prefix": [
          "xx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ff",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          "xxxx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "xxxxxxxxxxxxxxxxxx",
        "pump": [
          "xxxx"
        ]
      },
      {
        "prefix": [
          "xx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "of",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          "xxxx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "xxxxxxxxxxxxxxxxxx",
        "pump": [
          "xxxx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "## Asana Tasks:\\s+(.*#(\\d{12,}))+",
    "inputs": [
      {
        "prefix": [
          "## Asana Tasks:\t"
        ],
        "suffix": "as#00000000",
        "pump": [
          "a#000000000000"
        ]
      },
      {
        "prefix": [
          "## Asana Tasks:s#dddddddddddd#ddddddddddddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "#dddddddddddd#ddddddddddddd"
        ]
      },
      {
        "prefix": [
          "## Asana Tasks:\t"
        ],
        "suffix": "s:#00000000",
        "pump": [
          "a#000000000000"
        ]
      },
      {
        "prefix": [
          "## Asana Tasks:s#dddddddddddd\u0000"
        ],
        "suffix": "",
        "pump": [
          "#dddddddddddd\u0000"
        ]
      },
      {
        "prefix": [
          "## Asana Tasks:\t"
        ],
        "suffix": "#",
        "pump": [
          "a#0"
        ]
      },
      {
        "prefix": [
          "## Asana Tasks:s#d\u0000"
        ],
        "suffix": "",
        "pump": [
          "#d\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\t ]+by[\\t ]+(\\w+([\\w.-]+\\.)+\\w+)",
    "inputs": [
      {
        "prefix": [
          " by aa."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "\tby\ta"
        ],
        "suffix": "b\t",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\tby\tw-\u0000."
        ],
        "suffix": "",
        "pump": [
          "w-\u0000."
        ]
      },
      {
        "prefix": [
          " by by."
        ],
        "suffix": "",
        "pump": [
          "-..."
        ]
      },
      {
        "prefix": [
          "\tby\ta"
        ],
        "suffix": "y\ta",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\tby\tw-\u0000-."
        ],
        "suffix": "",
        "pump": [
          "w-."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*\\*_XPrivDisplay;\\n",
    "inputs": [
      {
        "prefix": [
          "typedef struct {\\x0a"
        ],
        "suffix": "",
        "pump": [
          "~\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "typedef struct{\n"
        ],
        "suffix": "XPri",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((A|B|C|D|E|I|II|III|IV|\\)+)\\s+et\\s+(A|B|C|D|E|I|II|III|IV|\\))+)",
    "inputs": [
      {
        "prefix": [
          "IV\tet\t"
        ],
        "suffix": "\tV",
        "pump": [
          "AII"
        ]
      },
      {
        "prefix": [
          "IV\tet\t"
        ],
        "suffix": "e",
        "pump": [
          "AII"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( {2,})+?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "     "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "     "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "#",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": "\u0000",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((https?:)(\\/\\/\\/?)([\\w]*(?::[\\w]*)?@)?([\\d\\w\\.-]+)(?::(\\d+))?)?([\\/\\\\\\w\\.()-]*)?(?:([?][^#]*)?(#.*)?)*",
    "inputs": [
      {
        "prefix": [
          "?"
        ],
        "suffix": "a",
        "pump": [
          "#??"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\u0000",
        "pump": [
          "?#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "opera\t0._0"
        ],
        "suffix": "p",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "opera/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "opera\t0._0"
        ],
        "suffix": "a\t0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "opera/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\.?[a-zA-Z][a-zA-Z_0-9]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          ".aa"
        ]
      },
      {
        "prefix": [
          "AA0"
        ],
        "suffix": "\u0000",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "U8mT2f9"
        ],
        "suffix": "xpmOxpmOXUuK63s.",
        "pump": [
          "xpmO"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^ip-address\\s*(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) *(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})*",
    "inputs": [
      {
        "prefix": [
          "ip-address0.0.0.0"
        ],
        "suffix": "0.0.000.000.00",
        "pump": [
          "0.0.0.000.0.0.0"
        ]
      },
      {
        "prefix": [
          "ip-addressd\u0000d\u0000d\u0000dd\u0000d"
        ],
        "suffix": "",
        "pump": [
          "ddd\u0000dd\u0000d"
        ]
      },
      {
        "prefix": [
          "ip-address0.0.0.0"
        ],
        "suffix": "0.0.00.00.0",
        "pump": [
          "0.0.0.00"
        ]
      },
      {
        "prefix": [
          "ip-addressd\u0000d\u0000d\u0000dd\u0000d\u0000d\u0000d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd\u0000d\u0000d\u0000d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(```(.|\\n)*```)",
    "inputs": [
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`\n``",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$(\\\\[\\\\\\$]|[^\\$])*\\$[egimosx]*",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "$a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$\\\\>"
        ],
        "suffix": "\\\\>\\\\\\\\{>{@\",;!\":!&{@=<=~~~|\\\\{>{\\\\>(|(\\\\{>{@?~KH>(|([\\\\{>{@?~~~=<=@{\\jfQgWVzrdBEFAiKPoAbwva",
        "pump": [
          "\\\\>\\\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "$a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(blackberry)\\w*\\/?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "blackberry/a"
        ],
        "suffix": "r./",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "blackberry.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "blackberry/a"
        ],
        "suffix": "r.$blackbe",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "blackberryw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\t)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\t\r\t\t\t\r\t\r\t\t\t\r\t\t\r\r\t\r\r\t\r\n\t\n\t\b",
        "pump": [
          "\r\t\r\t\t\t"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\t\t \t "
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t \t\t \n\n F",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\n\\r|\\n|\\r){2,}",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{(.|[\\r\\n])*?}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(_form|_query|_request|globals|session)({(\".+?\"|\\d+|\\$[\\w_]+)})+(\\[\\[\\d+\\]\\])*",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*(.|\\s)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/**?\\*\t\b\b\b\r\b\n\b\b\b\b\t\n"
        ],
        "suffix": "\r\t\t\n\n\r\t\t\r\t\t\n\n\r\t\t\n\n\t\b\b\b\r\t\b\b\t\r\b\r\r\t\r\t\b\r",
        "pump": [
          "\r\t\t\n\n\r\t\t"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*  \r \t\r\t \r \n \r"
        ],
        "suffix": "  \t   \t \r",
        "pump": [
          "  \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\",]+|\\\"(?:\\\\.|.)*?\\\")+?)\\s*,\\s*|((?:[^\",]+|\\\"(?:\\\\.|.)*?\\\")+?)\\s*",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\\,\\a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "^3u/^3u/&\nQ#2J<r\\",
        "pump": [
          "^3u/"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\\,a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"."
        ],
        "suffix": "",
        "pump": [
          "\"\"."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "2;rk2;rk4p@8\bsd&",
        "pump": [
          "2;rk"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+) \\[(.+)(\\..+)*\\]$",
    "inputs": [
      {
        "prefix": [
          "! [!"
        ],
        "suffix": "",
        "pump": [
          ".^.^"
        ]
      },
      {
        "prefix": [
          "a [a"
        ],
        "suffix": "]. ",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "] [.. [\\@>\">')(_+*+)~$=\\~_).+ .]).&)[\\\\"
        ],
        "suffix": ".'.}..\\.)~$=\\~.+ .])",
        "pump": [
          ".'.}.."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\r?\\n|\\r)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*CREATE\\s+UNIQUE\\s+INDEX\\s+(?:[\"`\\[]?\\w+[\"`\\]]?\\.)?[\"`\\[]?\\w+[\"`\\]]?\\s+ON\\s+['\"`\\[]?\\w+['\"`\\]]?\\s*\\(\\s*((?:\\s*[\"`\\[]?\\w+[\"`\\]]?\\s*,\\s*)*[\"`\\[]?\\w+[\"`\\]]?)\\s*\\)\\s*$",
    "inputs": [
      {
        "prefix": [
          "CREATE UNIQUE INDEX `a\".`a\" ON `a("
        ],
        "suffix": "",
        "pump": [
          "`a,\\x09a,"
        ]
      },
      {
        "prefix": [
          "CREATE\tUNIQUE\tINDEX\t\"a\"\tON\t\"a\"("
        ],
        "suffix": "N\tON\t",
        "pump": [
          "\ta,\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Za-z0-9_\\-]+)=(?:\"((?:[^\"]+|\\\\\")*)\"|'((?:[^']+|\\\\')*)')",
    "inputs": [
      {
        "prefix": [
          "a='"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "a='a"
        ],
        "suffix": "=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "4w=\""
        ],
        "suffix": "%W!o%W!oscT#9k\bN ",
        "pump": [
          "%W!o"
        ]
      },
      {
        "prefix": [
          "a='"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "a=\"a"
        ],
        "suffix": "=\\\"'$\\a\"$a='",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-=\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "JiDM='"
        ],
        "suffix": ")\bH^)\bH^/7X^6\"\ne",
        "pump": [
          ")\bH^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([.]?[\\\\/])*([.][.])[\\\\/]([.]?[\\\\/])*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "/..",
        "pump": [
          "./.././"
        ]
      },
      {
        "prefix": [
          "../..//"
        ],
        "suffix": "\u0000",
        "pump": [
          "/..//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".",
        "pump": [
          "./.././"
        ]
      },
      {
        "prefix": [
          "../..//"
        ],
        "suffix": "\u0000",
        "pump": [
          "/..//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\n\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*')|\\/\\*[\\s\\S]*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"*",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "/*\"\\\\^'\\\b:/\\|(\b.>\\~]:(]*"
        ],
        "suffix": "\\|=\\~]:(\\|=?>\\\\|=\\~]:(\\|=?>\\~]:(\\|=|*\\|",
        "pump": [
          "\\|=\\~]:(\\|=?>\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\n",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\\^*'s\"\\\\\\\\/*|)8fiPKpdRufqg3rRuvGM"
        ],
        "suffix": "Q\\\\/*|)\\\\\\Q\\\\/*|)\\\\\\\\/*|)8fiPKpdRufqg3rRuvGMQ7zvVB",
        "pump": [
          "Q\\\\/*|)\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\\\.|[^=\\s]+)*)=(\"(?:\\\\.|[^\"\\\\]+)*\"|(?:\\\\.|[^\\s\"\\\\]+)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\t\"a\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "W'b0W'b0(JdWA;tam",
        "pump": [
          "W'b0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "t29<t29<biV(hS.>2",
        "pump": [
          "t29<"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9])?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "0\\00\\0\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\$$",
        "pump": [
          "a\\aa\\aa\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\\-z\\\\zA\\2a\\-z\\\\zA\\23\\\\2\\0Z0\\\\0\\za\\-Z0-9z0AZ\\Z0-9aZ0-9a-zAA-Z0\\\\-",
        "pump": [
          "a\\-z\\\\zA\\2"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#p?\"(\\\\.|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "#\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "#p\""
        ],
        "suffix": "#\"\"#",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "#\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "#p\""
        ],
        "suffix": "p#",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:[[:alpha:]\\d\\-]+[.])+[[:alpha:]\\d\\-]+,?)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a..",
        "pump": [
          "a.a"
        ]
      },
      {
        "prefix": [
          "-.--.:"
        ],
        "suffix": "\u0000",
        "pump": [
          "h-.:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":a.:a.:alp:a.:a.:alph.:alphaa.:alph:a:alph.::a.",
        "pump": [
          ":a.:a.:alp"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:%\\{(.|\\n)*?\\}%)",
    "inputs": [
      {
        "prefix": [
          "%{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "%{"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*search\\s*(([^\\s]+\\s*)*)$",
    "inputs": [
      {
        "prefix": [
          "searcha"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^msgstr \"(((\\\\.)|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "msgstr \""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "msgstr \""
        ],
        "suffix": "tr\"r",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z_]\\w*)+([.][a-zA-Z_]\\w*)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "AAw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "sofwsofwxdumnlrfzf\\",
        "pump": [
          "sofw"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n|.)*(\\<\\?xml)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "x",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "m",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Za-z0-9\\-\\_]+,?\\s?)+$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "\\x00",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ",\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "kscSkscSdbumHeKnA\nG$",
        "pump": [
          "kscS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+),*\\s*(\\d+)*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "0\t0\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "4\r"
        ],
        "suffix": "097809789825120483 ",
        "pump": [
          "0978"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\.|\\\\\\n|.)*?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\n\\",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\n",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "\\'\\\\."
        ],
        "suffix": "|\\|\\\\\\|\\|\\\\\\n\\\\\\b\\|\\\\\\n.|\\\\",
        "pump": [
          "|\\|\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([0-9]+\\s?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\t\t",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "?"
        ],
        "suffix": "81988198466055584}",
        "pump": [
          "8198"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0\ta",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "202520252396202582o",
        "pump": [
          "2025"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z][A-Za-z0-9]+)+$",
    "inputs": [
      {
        "prefix": [
          "A0"
        ],
        "suffix": "!",
        "pump": [
          "A0A0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "AaAa"
        ]
      },
      {
        "prefix": [
          "A0A0A"
        ],
        "suffix": "\u0000",
        "pump": [
          "A0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "GBTEPSMQIMCGCAXLSWGYV\t",
        "pump": [
          "GBTE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^arm(v6.*|v7.*)*$",
    "inputs": [
      {
        "prefix": [
          "arm"
        ],
        "suffix": "a",
        "pump": [
          "v6v6"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((-|\\+)?[0-9]+(\\.[0-9]+)?)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0.",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(mac\\sos\\sx)\\s?([\\w\\s\\.]+\\w)*",
    "inputs": [
      {
        "prefix": [
          "mac\tos\tx\t"
        ],
        "suffix": "os\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "macsossx.w"
        ],
        "suffix": "",
        "pump": [
          "w.w"
        ]
      },
      {
        "prefix": [
          "mac\tos\tx\t"
        ],
        "suffix": "\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "macsossx.w"
        ],
        "suffix": "",
        "pump": [
          "w.w"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*)?(\\()?select(\\s+.+\\s)+(\\s*)?from\\s+",
    "inputs": [
      {
        "prefix": [
          "(select  \\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "(select"
        ],
        "suffix": "\tfr\t",
        "pump": [
          "\t\t\t"
        ]
      },
      {
        "prefix": [
          "select\rj\t\t\r  \r\n"
        ],
        "suffix": "\t    \r  \r\r  ",
        "pump": [
          "\t   "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(!?\\[)((?:\\\\[\\s\\S]|[^\\[\\]])+?)\\]",
    "inputs": [
      {
        "prefix": [
          "![^"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "![[",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "[!\\!\\\\!mkD?\\176608590155979007744908371344\\diholickcdeyqmk\\Dah\\!m"
        ],
        "suffix": "k\\\\!\\\\k\\\\!\\\\dbdyexupgaejhlma",
        "pump": [
          "k\\\\!\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<head[^>]*>((.|[\\n\\r])*)<\\/head>",
    "inputs": [
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "</<></he",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<head>"
        ],
        "suffix": "ad>a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\\\\\|\\\\'|[^\\n'])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a\\''a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "\\'"
        ],
        "suffix": "\\\\\\mh(MS\\\\\\\\\\\\\\mh(MS\\\\\\\\a7c25aC01F7E0a93BCedff\\\\=)>_\\\\mh(MS/\\\\\\mh(\\\\mh(MS/d2w\\\\E\\\\=",
        "pump": [
          "\\\\\\mh(MS\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([^\\S\\n\\r])+(\\r\\n|\\n|\\r)+)",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\t\n\t",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<script.*?>)((\\n|\\r|.)*?)(?:<\\/script>)",
    "inputs": [
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "ip",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "ip",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9]+\\.[0-9]+(?: \\| )?)+$",
    "inputs": [
      {
        "prefix": [
          "0.0"
        ],
        "suffix": "\\x00",
        "pump": [
          "0.000.0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0..",
        "pump": [
          "0.00"
        ]
      },
      {
        "prefix": [
          "0\u000000\u00000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00\u00000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0.00000.000.00000.0000135.07000.000052154427.00000.",
        "pump": [
          "0.00000.00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(ip[honead]+)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)",
    "inputs": [
      {
        "prefix": [
          "ipnos"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "ipaosa"
        ],
        "suffix": "mao\tlik",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ipaosww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "ipnipnipn&ipneeos\r"
        ],
        "suffix": "3ceJ3ceJliYceos\r",
        "pump": [
          "3ceJ"
        ]
      },
      {
        "prefix": [
          "ipnos"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "ipaosa"
        ],
        "suffix": "pe",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ipaosww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ";ip"
        ],
        "suffix": "ososososossopososossos",
        "pump": [
          "osos"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain servers:\\n\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain servers:\\x0a\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain servers:\n\n"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain servers:\\x0a\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain servers:\n\n"
        ],
        "suffix": "ers",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((void|VALUE|int|char *\\*|ID|struct \\w+ *\\*|st_table *\\*) *)?\\n(\\w+)\\(.*\\)\\n\\s*((.+;\\n)*)\\{",
    "inputs": [
      {
        "prefix": [
          "void\\x0aa()\\x0a"
        ],
        "suffix": "",
        "pump": [
          "|;\\x0a;;\\x0a"
        ]
      },
      {
        "prefix": [
          "\na()\n"
        ],
        "suffix": "s",
        "pump": [
          "a;\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "QStringRef(?:[^\\w]+(?:.*?))+?$",
    "inputs": [
      {
        "prefix": [
          "QStringRef$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "QStringRef$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\\\|\\n|\\r|\\t)*\\(",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n(\n",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\r\r\n\n\r\r\t\r\t\t\r\t\t\n",
        "pump": [
          "\n\n\r\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          "3 "
        ],
        "suffix": "\t\r \t\t\r \t\t\n\r\n \n \r \t\t",
        "pump": [
          "\t\r \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,2}([ ]?_[ ]?){3,}[ \\t]*$",
    "inputs": [
      {
        "prefix": [
          "   _  __"
        ],
        "suffix": "\\x00",
        "pump": [
          "_ _"
        ]
      },
      {
        "prefix": [
          " _  _ "
        ],
        "suffix": "\t_",
        "pump": [
          " _ _"
        ]
      },
      {
        "prefix": [
          "____"
        ],
        "suffix": "\u0000",
        "pump": [
          " _"
        ]
      },
      {
        "prefix": [
          "_"
        ],
        "suffix": "\\x00",
        "pump": [
          "_ _"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t_",
        "pump": [
          " _ _"
        ]
      },
      {
        "prefix": [
          "__"
        ],
        "suffix": "\u0000",
        "pump": [
          " _"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?\\:\\/\\/)?((\\d{1,3}\\.){3}\\d{1,3}|([a-zA-Zа-яА-ЯёЁ0-9][a-zA-Zа-яА-ЯёЁ\\d\\-\\._]+\\.)+[a-zA-Zа-яА-ЯёЁ]{2,7})(:\\d+)?(\\/[^\\?]*(\\?\\S+(\\=\\S*))*(\\#\\S*)?)?$",
    "inputs": [
      {
        "prefix": [
          "ht."
        ],
        "suffix": "",
        "pump": [
          "\\xff-.AA."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s\t?a",
        "pump": [
          "aa.aa."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h..bc.h.h.h..bc.h.h.hNh.h.hNh.h1h.h.hNh.h.1.h.hDNht11.a",
        "pump": [
          "h..bc.h.h."
        ]
      },
      {
        "prefix": [
          "ht."
        ],
        "suffix": "",
        "pump": [
          "\\xff-.AA."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ps\t?\t",
        "pump": [
          "aa.aa."
        ]
      },
      {
        "prefix": [
          "tp.tp.etp.etp.tp.tp.etp.e"
        ],
        "suffix": "tp.tp.e.e.tp.e/?",
        "pump": [
          "tp.tp.e.e."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z](\\w|_)+::)+[A-Z](\\w|_)+$",
    "inputs": [
      {
        "prefix": [
          "A0"
        ],
        "suffix": "",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_:a",
        "pump": [
          "A_::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<p>\\{% apibody %\\}.*\\n((.*\\n)*?).*\\{% endapibody %\\}</p>",
    "inputs": [
      {
        "prefix": [
          "<p>{% apibody %}\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<p>{% apibody %}\n"
        ],
        "suffix": "% apib",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "<p>{% apibody %}\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<p>{% apibody %}\n"
        ],
        "suffix": "%}</\n",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script[^>]+>(.|\\n|\\r)*?<\\/script\\s*>",
    "inputs": [
      {
        "prefix": [
          "<script?>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<scripta>"
        ],
        "suffix": "<s",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<script?>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<scripta>"
        ],
        "suffix": "\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\s,\"]|\"(?:\\\\.|[^\"])*\")+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\t\"\t",
        "pump": [
          "a\"\\a\""
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": ",",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "W\\/\\?:\\\\W\\/\\?:\\\\MR\\/\\?:\\\\.^\\?:\\\\.PJOXOWSSJXQ",
        "pump": [
          "W\\/\\?:\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\\\t",
        "pump": [
          "a\"\\a\""
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w)+([\\.\\-\\_]\\w+)*@(\\w)+(([\\.\\-\\_]\\w+)+)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "-0_0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "_-@",
        "pump": [
          "-a_a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "untuk( *|\\n*)*?\\(",
    "inputs": [
      {
        "prefix": [
          "untuk"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "untuk"
        ],
        "suffix": "un\n",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "untuk"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ",
        "pump": [
          "\n\n\n\n"
        ]
      },
      {
        "prefix": [
          "untuk"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "untuk"
        ],
        "suffix": "un",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "Juntuk"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\/[^\\s\\/]*?(?:['\"`{}][^\\s\\/]*?)*\\/)",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "``"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "/\"/\"",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "/{"
        ],
        "suffix": "",
        "pump": [
          "\"{"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "c'''c'''\"$`]\")''}{':'`",
        "pump": [
          "c'''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "return\\s*\"((?:\\\\\"|[^\"]+)+)\"",
    "inputs": [
      {
        "prefix": [
          "return\"]"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return\"a"
        ],
        "suffix": "rn\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "return\""
        ],
        "suffix": "\\\n\t\t\\\n\t\t\n\n\r\t\b\t\n\n\t\b",
        "pump": [
          "\\\n\t\t"
        ]
      },
      {
        "prefix": [
          "return\"s"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return\"a"
        ],
        "suffix": "urr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return\"\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "return\""
        ],
        "suffix": "returetururreturur",
        "pump": [
          "retu"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/tmp\\/(\\w|\\W|block|\\d)+$",
    "inputs": [
      {
        "prefix": [
          "/tmp/"
        ],
        "suffix": "$",
        "pump": [
          "ablock"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((menu|page)[-_\\w+]+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "menuamenua"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```(.|\\s)+```",
    "inputs": [
      {
        "prefix": [
          "```!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "\t``",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "```a"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "\t`",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "` \t ` \t \t  \r\t\t\n\t\n   ",
        "pump": [
          "` \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n",
    "inputs": [
      {
        "prefix": [
          "    \\x00"
        ],
        "suffix": "",
        "pump": [
          "    !     !"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          "    a    a"
        ]
      },
      {
        "prefix": [
          "    \u0000    \u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "    \u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(([a-zA-Z])+((\\s+\\w+)=?(\"?.+\"?)?){0,})(\\s*\\/)\\s*>",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 0\"0"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asww"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000sww"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "V\rFYkB BV\rFYkB BXg`\r2b8'\ryKXxdU!*\bHg]a[b($8ld`wyM",
        "pump": [
          "V\rFYkB B"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 0\"0"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw="
        ],
        "suffix": "",
        "pump": [
          "\"\u0000sw="
        ]
      },
      {
        "prefix": [
          "(<"
        ],
        "suffix": "q\r6caOD\tq\r6caOD\t\r2 XV}\nK9w_PfL;1:?API2Y.<{s^![n#d\nwy",
        "pump": [
          "q\r6caOD\t"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 0\"0"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asww"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000sww"
        ]
      },
      {
        "prefix": [
          "B<rd\rBbCG~\tm5phw6\n4DciI("
        ],
        "suffix": "6\tM5 N?M?1",
        "pump": [
          "6\tM5 N"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`(\\\\\\\\|\\\\`|[^`])*`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "``a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "`\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      },
      {
        "prefix": [
          "\\`0"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\308tlp\\\\28798\\\\\\308t\\\\2879833494626988482\r\n\b\r\r\n\t\b\r\b\b0803068gh^F@44191128\\\\287985",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "`\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-z]:\\\\(.+?\\\\)*$",
    "inputs": [
      {
        "prefix": [
          "A:\\"
        ],
        "suffix": "]",
        "pump": [
          "!\\\\\\"
        ]
      },
      {
        "prefix": [
          "a:\\"
        ],
        "suffix": "a",
        "pump": [
          "a\\a\\"
        ]
      },
      {
        "prefix": [
          "\\:\\:\\kb\\}\\@\\}\\@@\\:"
        ],
        "suffix": "\\:\\:\\\\\\:\\:\\\\:\\B0fm1z1kb1vv4\\4",
        "pump": [
          "\\:\\:\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<main(?:\\s+(?:class|id|style)=\"[^\"]*\"\\s*)*>)",
    "inputs": [
      {
        "prefix": [
          "<main"
        ],
        "suffix": "",
        "pump": [
          " class=\"\"\\x09\\x09class=\"\""
        ]
      },
      {
        "prefix": [
          "<main"
        ],
        "suffix": "l$",
        "pump": [
          "\tid=\"\"\t"
        ]
      },
      {
        "prefix": [
          "<mainsid=\"\""
        ],
        "suffix": "",
        "pump": [
          "ssid=\"\""
        ]
      },
      {
        "prefix": [
          "<main"
        ],
        "suffix": "",
        "pump": [
          " class=\"\"\\x09\\x09class=\"\""
        ]
      },
      {
        "prefix": [
          "<main"
        ],
        "suffix": "=\"\"<",
        "pump": [
          "\tid=\"\"\t"
        ]
      },
      {
        "prefix": [
          "<mainsid=\"\""
        ],
        "suffix": "",
        "pump": [
          "ssid=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^# yamllint disable-line( rule:\\S+)*\\s*$",
    "inputs": [
      {
        "prefix": [
          "# yamllint disable-line"
        ],
        "suffix": "n\t:",
        "pump": [
          " rule:a rule:a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":25:([A-Z0-9]{8}[\\d\\.]+)*",
    "inputs": [
      {
        "prefix": [
          ":25:"
        ],
        "suffix": "5AA00AAA",
        "pump": [
          "00000000.00000000."
        ]
      },
      {
        "prefix": [
          ":25:"
        ],
        "suffix": "5AAAAA0AA00A",
        "pump": [
          "00000000.00000000."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*?)(\\[.*\\])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z0-9_:][-a-zA-Z0-9_:.]*)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\"\\\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "0='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "=\\a\"\\a>",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "0='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "F=\"F"
        ],
        "suffix": "\\\\\n\\z:\\\\\\\\\n\\z:\\\\:|\\?s|)[.A[A0(*]B(\\\\:|\\?s|)[.A\r\t\t\n\n\n\b\t\b\t\r|\\?s|)[.A\r\t\t\n\n\n\b\t\b\t\r\b\n\n\n\n\t\n\n",
        "pump": [
          "\\\\\n\\z:\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]\\a][",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\\\\\\4118414135154640|\\\\\\41184141",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "job_class: (\\w+:{0,2})+",
    "inputs": [
      {
        "prefix": [
          "job_class: a"
        ],
        "suffix": "j ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "job_class: ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "job_class: a"
        ],
        "suffix": "obj$job",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "job_class: ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "job_class: a"
        ],
        "suffix": "j ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "job_class: www"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "!\\[((?:[^\\]]|\\\\\\]|\\\\\\[)*?)\\]\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]",
    "inputs": [
      {
        "prefix": [
          "!["
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "!\\a]a",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "!["
        ],
        "suffix": "]!\\a]![!",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "![\\[![\\[\\]!![\\![\\[\\]BhgL4VIJiHvTdhK![\\[![\\![\\[\\\\[!\\"
        ],
        "suffix": "[\\[!\\[\\[[\\[!\\[\\[\\]",
        "pump": [
          "[\\[!\\[\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<sources dir\\=\\\"\\.\\/\\.\\.\\/\\\"\\>((.|\\r\\n|\\r|\\n)*?)\\<\\/sources",
    "inputs": [
      {
        "prefix": [
          "<sources dir=\"./../\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "<sources dir=\"./../\">"
        ],
        "suffix": "=\"./",
        "pump": [
          "\r\n"
        ]
      },
      {
        "prefix": [
          "<sources dir=\"./../\">\r\n \r\n\r\n.\r\n "
        ],
        "suffix": "\r\n\r\n\r\n\r\n\r\n\r\n\r\r\n\r\n\".>=\"./../\">> d\".ources",
        "pump": [
          "\r\n\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "<sources dir=\"./../\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "<sources dir=\"./../\">"
        ],
        "suffix": "i</source",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[\\[((?:.|\\n)+?)\\]\\]",
    "inputs": [
      {
        "prefix": [
          "[[!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "[",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "[[\\"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[["
        ],
        "suffix": "][a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Domain Nameservers:\\n((.+\\n)+)\\s+\\n",
    "inputs": [
      {
        "prefix": [
          "Domain Nameservers:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain Nameservers:\n"
        ],
        "suffix": "s",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Domain Nameservers:\\x0aD\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain Nameservers:\n"
        ],
        "suffix": "me\n\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*echo\\s+((?:[^;]+|\"[^\"\\\\]*\"|'[^'\\\\]*'|\\/\\*.*?\\*\\/)+);*\\s*$",
    "inputs": [
      {
        "prefix": [
          "echo 0"
        ],
        "suffix": "';\\",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "echo\ta"
        ],
        "suffix": "h\\/;a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "e"
        ],
        "suffix": "cho cho p\r*Ca\n(jMEv#U@;B",
        "pump": [
          "cho "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "http[s]?://t.co/(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+",
    "inputs": [
      {
        "prefix": [
          "https://taco/"
        ],
        "suffix": "\u0000",
        "pump": [
          "aA"
        ]
      },
      {
        "prefix": [
          "https://taco/"
        ],
        "suffix": "\u0000co/",
        "pump": [
          "aA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<![ \\r\\n\\t]*(--([^\\-]|[\\r\\n]|-[^\\-])*--[ \\r\\n\\t]*)\\>",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "----a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "\n\n\r\t\n\t\n\n\r\t\n\t\n\n\r \n\n \n \t \t \r\t",
        "pump": [
          "\n\n\r\t\n\t"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "--\t-",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<<!--<"
        ],
        "suffix": "\n\n\r\n\n\n\r\n\r\r\r\n\b\b\r\t\n\n\t\r",
        "pump": [
          "\n\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\?=.-]*)*\\/?$",
    "inputs": [
      {
        "prefix": [
          "https://a.a."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.aa"
        ],
        "suffix": ".:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "h.pth.ptthtt.d.hhtth\t",
        "pump": [
          "h.pt"
        ]
      },
      {
        "prefix": [
          "https://a.."
        ],
        "suffix": "\\x00",
        "pump": [
          "0"
        ]
      },
      {
        "prefix": [
          "a.a"
        ],
        "suffix": "tp0.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..pt..ptthhttps?rG ;",
        "pump": [
          "..pt"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\.*\\/+)+",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": ".",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "///"
        ],
        "suffix": "\u0000",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s+|#.*|\\(\\?#[^)]*\\))*(?:[?*+]|{\\d+(?:,\\d*)?})",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\\t*debug\\((.*\\n)*?.*\\);\\n",
    "inputs": [
      {
        "prefix": [
          "debug("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "debug("
        ],
        "suffix": "u",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "debug("
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "debug("
        ],
        "suffix": "e",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var iteratesOwnLast;|.+?iteratesOwnLast *=.+",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "a**/\nvar iterat",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a \\x00iteratesOwnLast=\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "a**/\nvar ite",
        "pump": [
          "a**a*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\?\\s+)+",
    "inputs": [
      {
        "prefix": [
          "\\\t"
        ],
        "suffix": "\\\\",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\\\t"
        ],
        "suffix": "\\",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\*(\\\\.|.)*?\\n",
    "inputs": [
      {
        "prefix": [
          "*"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "*."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "*\\\\\\*\\*\\\\\\*\\\\**\\\\*\\*\\\\\\\\.\\*\\\\*",
        "pump": [
          "*\\\\\\*\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\n|\\r)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": ":$",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": ":$",
        "pump": [
          "a\\aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( |  )+$",
    "inputs": [
      {
        "prefix": [
          " "
        ],
        "suffix": "\\x00",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "                      (",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "\\x00",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          "   "
        ],
        "suffix": "\u0000",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "                 ^",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\\\\"|.)*?\"|'(?:\\\\'|.)*?'|[^ ]+",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": " ",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\ ",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<filter>(.|\\n)*<\\/filter>",
    "inputs": [
      {
        "prefix": [
          "<filter>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<filter>"
        ],
        "suffix": "er",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<filter>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<filter>"
        ],
        "suffix": "ilt",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((N|X)|(([A-G](b*|#*))((:(maj|min|dim|aug|1|5|sus2|sus4|maj6|min6|7|maj7|min7|dim7|hdim7|minmaj7|aug7|9|maj9|min9|11|maj11|min11|13|maj13|min13)(\\((\\*?((b*|#*)([1-9]|1[0-3]?))(,\\*?((b*|#*)([1-9]|1[0-3]?)))*)\\))?)|(:\\((\\*?((b*|#*)([1-9]|1[0-3]?))(,\\*?((b*|#*)([1-9]|1[0-3]?)))*)\\)))?((/((b*|#*)([1-9]|1[0-3]?)))?)?))$",
    "inputs": [
      {
        "prefix": [
          "Ab:maj(2"
        ],
        "suffix": "",
        "pump": [
          ",1"
        ]
      },
      {
        "prefix": [
          "A:(*1,"
        ],
        "suffix": "A:di",
        "pump": [
          "1,,"
        ]
      },
      {
        "prefix": [
          "E:("
        ],
        "suffix": "1,1,1,1,1,1,1,1",
        "pump": [
          "1,1,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "vivaldi\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "vivaldi/0._0"
        ],
        "suffix": "i/0",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vivaldi/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "vivaldi/0._0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vivaldi/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\s\\n]*<align><\\/align>[\\s\\n]*){2,}",
    "inputs": [
      {
        "prefix": [
          "<align></align>"
        ],
        "suffix": "</a",
        "pump": [
          "\t<align></align>\t"
        ]
      },
      {
        "prefix": [
          "<align></align>"
        ],
        "suffix": "</al",
        "pump": [
          "\t<align></align>\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t<align></align>\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "BgdTabOra\\\">(\\d+\\/\\d+\\/\\d+)<\\/TD>(.|\\n)+?Bleu11\\\">(.*?)<\\/span>(.|\\n)+?BgdTabOra\" align=\"right\">(.*?)<\\/TD>",
    "inputs": [
      {
        "prefix": [
          "BgdTabOra\">0/0/0</TD>!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "BgdTabOra\">0/0/0</TD>"
        ],
        "suffix": "e",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "BgdTabOra\">0/0/0</TD>C"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "BgdTabOra\">0/0/0</TD>"
        ],
        "suffix": "10<",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\r\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "\r\t",
        "pump": [
          "\t\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r",
        "pump": [
          "\t\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^PhaseScriptExecution\\s((\\\\\\ |\\S)*)\\s",
    "inputs": [
      {
        "prefix": [
          "PhaseScriptExecution\t"
        ],
        "suffix": "c",
        "pump": [
          "\\ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(.|\\n)*-->\\n",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "<\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:<D:href(?:\\s+[^>]*)?>\\s*[^\\s<]+\\s*</D:href>\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "<D:href\\x09\\x09>\\x00</D:href>"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "D:",
        "pump": [
          "<D:href\t\t>a</D:href>"
        ]
      },
      {
        "prefix": [
          "<D:hrefss"
        ],
        "suffix": "",
        "pump": [
          "s>\u0000</D:href><D:hrefss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\.)+(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\s*\\/\\/.*\\n)*)\\s*([A-z0-9.]+):\\s*'(.*)',?\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a:\n",
        "pump": [
          "\t//\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$a",
        "pump": [
          "\t//\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\\\|\\\\\\$|\\\\\\[|\\\\\\]|\\\\\\)|[^\\|\\(\\)\\$\\{\\}]{1})*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "|a",
        "pump": [
          "\\[\\["
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\|\\$\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([+-]?[0-9]+[,\\.]?)+",
    "inputs": [
      {
        "prefix": [
          "+0"
        ],
        "suffix": ",++",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "+0"
        ],
        "suffix": "+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "-+BEGIN CERTIFICATE-+\\n(?:[^-]*\\n)+-+END CERTIFICATE-+\\n",
    "inputs": [
      {
        "prefix": [
          "-BEGIN CERTIFICATE-\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN CERTIFICATE-\n"
        ],
        "suffix": " C",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "-BEGIN CERTIFICATE-\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "-BEGIN CERTIFICATE-\n"
        ],
        "suffix": "-B",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "-BEGIN CERTIFICATE-\n\nB\n\n\n\r"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\r\r\b\b\n\n\b\r\b\r\r\r\b\b\t\n\n\b\b",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([^./?#@:]+\\.)*[^./?#@:]+)+(:[0-9]+)?(/[^/?#@:]+)*$",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "#",
        "pump": [
          "!0.!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0a.:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "0\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Y04QY04Qy\n*=lex\n\r+:",
        "pump": [
          "Y04Q"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/?[^/]+)+",
    "inputs": [
      {
        "prefix": [
          "/a"
        ],
        "suffix": "//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "/",
        "pump": [
          "0\u0000"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "a/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "/",
        "pump": [
          "0\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[ \\t]*[\\n\\r]+[ \\t]*)+",
    "inputs": [
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "\na",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\?php\\s*eval\\((.+\\()*base64_decode\\(.+\\)\\).+\\s*?>",
    "inputs": [
      {
        "prefix": [
          "<?phpeval("
        ],
        "suffix": "",
        "pump": [
          "c((("
        ]
      },
      {
        "prefix": [
          "<?phpeval("
        ],
        "suffix": "p\te",
        "pump": [
          "a(a("
        ]
      },
      {
        "prefix": [
          "<?phpeva"
        ],
        "suffix": "l(((p(l(((p(b((?p(ba(((p(base64_decode(())(<\\?php\\s*eval\\",
        "pump": [
          "l(((p("
        ]
      },
      {
        "prefix": [
          "<?phpeval("
        ],
        "suffix": "",
        "pump": [
          "c((("
        ]
      },
      {
        "prefix": [
          "<?phpeval("
        ],
        "suffix": "ecode",
        "pump": [
          "a(a("
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\.(startProcessInstanceByMessageAndProcessDefinitionId)(\\()([a-z0-9_.]+)(,.?)*(\\n?)([a-z0-9_.()])*(,?)([a-z0-9_.()])*\\)",
    "inputs": [
      {
        "prefix": [
          ".startProcessInstanceByMessageAndProcessDefinitionId(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByMessageAndProcessDefinitionId(a"
        ],
        "suffix": "B",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceByMessageAndProcessDefinitionId.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByMessageAndProcessDefinitionId(."
        ],
        "suffix": "",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          ".startProcessInstanceByMessageAndProcessDefinitionId(a"
        ],
        "suffix": "nId(",
        "pump": [
          ",,"
        ]
      },
      {
        "prefix": [
          "\u0000startProcessInstanceByMessageAndProcessDefinitionId.,"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          ",,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\d|[^\\w,.'-])+ )",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " $",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u0000d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " $a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u0000d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:MSG\\s+([^\\s]+)\\s+([^\\s]+)\\s+(([^\\s]+)[^\\S\\r\\n]+)?(\\d+)\\s*\\r\\n([^\\\\r\\\\n]*?)\\r\\n)+?)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "MS\r",
        "pump": [
          "MSG\ta\ta\t0\r\n\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t0\t\nM\\MSG\t0\t0",
        "pump": [
          "MSG\ta\ta\t0\r\n\r\nMSG\r\nMSG\ta\ta\t0\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z][a-zA-|Z_$\\.0-9\\[\\]]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\u0000",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "=(\\{(?:\\{[^}]*\\}|[^}])+\\})",
    "inputs": [
      {
        "prefix": [
          "={"
        ],
        "suffix": "}}{",
        "pump": [
          "{}{{}"
        ]
      },
      {
        "prefix": [
          "={"
        ],
        "suffix": "=",
        "pump": [
          "{}{{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test2Module(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "mpo",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "imports: [Testorts: [TTestort [Te\tTsst\\tpttt\\e|"
        ],
        "suffix": "o   2e) o   2e) \rT\\M\\ \\ s* ots]is\t",
        "pump": [
          "o   2e) "
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "]imports: [T"
        ],
        "suffix": "\t\t\t \t\t\t \n\t\t\n  \n\t\t\n\t\t\r",
        "pump": [
          "\t\t\t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^ :]+)*(.+)*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "*]6D*]6DL&! gN:,\re",
        "pump": [
          "*]6D"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*?)(?:\\s+\\S+\\=\\S+\\s*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\ta==a"
        ]
      },
      {
        "prefix": [
          "sS=S"
        ],
        "suffix": "\u0000",
        "pump": [
          "ssS=S"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\ta==a"
        ]
      },
      {
        "prefix": [
          "sS=S"
        ],
        "suffix": "\u0000",
        "pump": [
          "ssS=S"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *var shadowed[\\s\\S]+?;\\n",
    "inputs": [
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": "*/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\x0a /**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "\n /**"
        ],
        "suffix": " /*/;\n var s",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          " \n /"
        ],
        "suffix": "******************\\*>^$&\\[.,>:>\\=_=/!=~$].&`(,:$^-****\\*>^$&\\)./+?(|_=[.,>",
        "pump": [
          "****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[\\d+-=\\/\\* ]+(?:\\s?,\\s?[\\d+-=\\/\\* ]+)){4,}",
    "inputs": [
      {
        "prefix": [
          " \t,\t  \t,\t  \t,\t "
        ],
        "suffix": " ,\t",
        "pump": [
          " , "
        ]
      },
      {
        "prefix": [
          " ,  ,  ,  ,  /"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          " \t,\t  \t,\t  \t,\t "
        ],
        "suffix": " \t ,, \t",
        "pump": [
          " , "
        ]
      },
      {
        "prefix": [
          " ,  , /"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " \t\t",
        "pump": [
          " , "
        ]
      },
      {
        "prefix": [
          " ,  d"
        ],
        "suffix": "",
        "pump": [
          "/d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\]]+)(?:\\[(.+)\\])+$",
    "inputs": [
      {
        "prefix": [
          "^[^]"
        ],
        "suffix": "^",
        "pump": [
          "[^][]]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "[][",
        "pump": [
          "[a][a]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<meta http-equiv=\"content-type\"([^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<meta http-equiv=\"content-type\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta http-equiv=\"content-type\""
        ],
        "suffix": "htt",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "B<meta http-equiv=\"content-t"
        ],
        "suffix": "ype\"ype\",MekxXOK\n~'\tr\"",
        "pump": [
          "ype\""
        ]
      },
      {
        "prefix": [
          "<meta http-equiv=\"content-type\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta http-equiv=\"content-type\""
        ],
        "suffix": "c><meta http",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<meta http-equiv=\"content-t"
        ],
        "suffix": "ype\"ype\"<meta http-equ",
        "pump": [
          "ype\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\\\.|[^\\\\*]+)*)\\*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "]!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\**a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "*",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ne\n-ne\n-+Wbvw[O%5B",
        "pump": [
          "ne\n-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\\\?[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)+|self|static|parent)::([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]+)?\\*$",
    "inputs": [
      {
        "prefix": [
          "t"
        ],
        "suffix": "",
        "pump": [
          "_A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "i",
        "pump": [
          "\\aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pareparenenpastati",
        "pump": [
          "pare"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([ \\t]*)-#\\s*bower:*(\\S*))(\\n|\\r|.)*?(-#\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "-#bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "-#bower"
        ],
        "suffix": " ",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "-#bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "-#bower"
        ],
        "suffix": "endbo",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w|[_\\-:.^@'])+$",
    "inputs": [
      {
        "prefix": [
          "^"
        ],
        "suffix": "!",
        "pump": [
          "_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^|\\\\]+|\\\\.)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\||",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\||",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "translate\\(-*\\d+([.]\\d+)*(,*\\s*-*\\d+([.]\\d+)*)*",
    "inputs": [
      {
        "prefix": [
          "translate(00"
        ],
        "suffix": "e(0-0.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "translate(00"
        ],
        "suffix": "at",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9]+\\.[A-Za-z0-9]+)(\\.([.A-Za-z0-9-]+))*(:[2],([PRSTDF]*))*(.*)",
    "inputs": [
      {
        "prefix": [
          "0.a"
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          "0\u00000\u0000--"
        ],
        "suffix": "",
        "pump": [
          "0--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```(\\w*\\n*)((.|\\n)*?)```",
    "inputs": [
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`a`",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "$",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\n\\t.*)*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\t\n\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+)\\s*:\\s*(\\n\\s+)*\\w",
    "inputs": [
      {
        "prefix": [
          "!:"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0b\\x0a\\x0b"
        ]
      },
      {
        "prefix": [
          "a:"
        ],
        "suffix": "\n:",
        "pump": [
          "\n\t\n\t"
        ]
      },
      {
        "prefix": [
          "HM:\n\r"
        ],
        "suffix": " \n \n\n\n \n \n\n\n\t\n\n\r\n \n\r\n\n \n\n\n\t\t",
        "pump": [
          " \n \n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[a-zA-Z$_0-9]|\\\\\\.)+(?:(?:(?:[a-zA-Z$_0-9]|\\\\\\.)+)|(?:\\[[0-9]+\\]))*",
    "inputs": [
      {
        "prefix": [
          "aa"
        ],
        "suffix": "0[.",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.|\\n)*?\\n(b|\\n)",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          "c\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          "c\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\nb\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^\\s]+(?:\\s*,\\s*[^\\s]+)*)\\s+in\\s+(.+)$",
    "inputs": [
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          " ,\\x00,-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t,a,\t",
        "pump": [
          "\t,a,\t,a"
        ]
      },
      {
        "prefix": [
          "\u0000,\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "in,in"
        ],
        "suffix": ",i,in,n,,i,in,n,i,in,i,in,n,i,in",
        "pump": [
          ",i,in,n,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$\\{(([A-Za-z_\\-]+\\.?)+)\\}",
    "inputs": [
      {
        "prefix": [
          "${-"
        ],
        "suffix": "",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "A-ZaA-Za-z-Z_A-Za-",
        "pump": [
          "A-Za"
        ]
      },
      {
        "prefix": [
          "${-"
        ],
        "suffix": "",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "${a"
        ],
        "suffix": "a${",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "${"
        ],
        "suffix": "A-ZaA-Za-z-A-Za-z_",
        "pump": [
          "A-Za"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "/a*'a\\*\"*",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\\\\b\\]\\\\\\\b\\]\\\\?[\\.\\*\\/\\\\\\**\\*\\/",
        "pump": [
          "\\\\\\\b\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "/a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\\'\\\\*\\/\\\\'\\\\*\\/4\\\\*\\/4b2lbP\\'\\\\*\\/4b2lbP",
        "pump": [
          "\\\\'\\\\*\\/"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\\"[^\"]+\\\"\\s*:\\s*[^,]+,?)+$",
    "inputs": [
      {
        "prefix": [
          "\"#\":!"
        ],
        "suffix": ",#",
        "pump": [
          "\"-\":\\x09#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",a\"\"",
        "pump": [
          "\t\"a\":\ta"
        ]
      },
      {
        "prefix": [
          "\"#\" :\""
        ],
        "suffix": ",#",
        "pump": [
          "\"-\":\\x09#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\t\"\"",
        "pump": [
          "\t\"a\":a\"\t\":\":a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "^\" ^\":^\" ^\":\t\r \n\t\n\r  \r\t\r\n\r\t\r\n \n\"^^\": \"^^\" \t\r \n\t\n\r  \r\t\r\n\r\t\r\n \n\r ,?",
        "pump": [
          "^\" ^\":"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+",
    "inputs": [
      {
        "prefix": [
          "a@aa"
        ],
        "suffix": "@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0@---"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-"
        ]
      },
      {
        "prefix": [
          "a@aa"
        ],
        "suffix": "a$a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0@---_"
        ],
        "suffix": "\u0000",
        "pump": [
          "0_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script type=\"text\\/javascript\">((.|\\s)*?)<\\/script>",
    "inputs": [
      {
        "prefix": [
          "<script type=\"text/javascript\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script type=\"text/javascript\">"
        ],
        "suffix": "c",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script type=\"text/javascript\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<script type=\"text/javascript\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script type=\"text/javascript\">"
        ],
        "suffix": "t<scri",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script type=\"text/javascript\">s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]",
    "inputs": [
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]\\a]a",
        "pump": [
          "a\\["
        ]
      },
      {
        "prefix": [
          "[[[[[:"
        ],
        "suffix": "\\[.\\[a\\[\\[\\[.\\[a\\[\\[\\[EBJPYCQJHYFGGZWsXHUb9aHZWsXH4-pA!-w`UBfORSjew9FDZHQ23[\r",
        "pump": [
          "\\[.\\[a\\[\\["
        ]
      },
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "]\\a",
        "pump": [
          "a\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " ( (?:\\\\.|[^\\[]*)* ) \\[ (\\d+ | [a-zA-Z]\\w* ) \\] }",
    "inputs": [
      {
        "prefix": [
          "  "
        ],
        "suffix": "",
        "pump": [
          "]"
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": "]",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "  tm  tm_x(w8.\tU)67",
        "pump": [
          "  tm"
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": "",
        "pump": [
          "]"
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": "  [ 0 ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "  {=  {=c2p!5\"]H%|.",
        "pump": [
          "  {="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^http[s]?://(.*?\\.)*?[a-z0-9\\-]{2,4}",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "https",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "http:/"
        ],
        "suffix": "/../http:././../http:./.t\\tp:/./^h//:/.*?\\tp://.*/http://./^h.t\\tp./^h//.*?\\/.",
        "pump": [
          "/../http:./."
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "ps:.",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^https?:\\/\\/(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "!",
        "pump": [
          "/A?A"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "ht:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://"
        ],
        "suffix": "th-_th-_9-0Z-Az///.",
        "pump": [
          "th-_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:'(?:''|[^'\\n])*'|#[&$%]?[a-f\\d]+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "'#a$'\u0000",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[([^\\]]+)\\]((?:(?:[^:\\[]+:)?\\d+x\\d+(?:\\([^)]+\\))?)+)",
    "inputs": [
      {
        "prefix": [
          "[a]"
        ],
        "suffix": "]0",
        "pump": [
          "a:0x00x0"
        ]
      },
      {
        "prefix": [
          "[a]"
        ],
        "suffix": ")0a[",
        "pump": [
          "a:0x00x0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Title:\\s+((.*)\\n(\\s+(.*)\\n)*)",
    "inputs": [
      {
        "prefix": [
          "Title:\t\n"
        ],
        "suffix": "e:",
        "pump": [
          "\t\n\t\n"
        ]
      },
      {
        "prefix": [
          "Title:\t\n"
        ],
        "suffix": "e:\t",
        "pump": [
          "\t\n\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(''|.)*?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "''"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?",
    "inputs": [
      {
        "prefix": [
          "|\n|-|\n"
        ],
        "suffix": "-",
        "pump": [
          "||\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*log_format\\s+(\\S+)+\\s+(.+)\\s*$",
    "inputs": [
      {
        "prefix": [
          "log_format !"
        ],
        "suffix": "",
        "pump": [
          "!\\x00"
        ]
      },
      {
        "prefix": [
          "log_format\ta"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "log_formatsSS"
        ],
        "suffix": "",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "log_format\t\t"
        ],
        "suffix": "fkyjfkyjjuurjgvfjh",
        "pump": [
          "fkyj"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(\\r\\n|\\n|\\r)+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+)+$",
    "inputs": [
      {
        "prefix": [
          "a.-"
        ],
        "suffix": "!",
        "pump": [
          "a.--0.-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "a.aa"
        ]
      },
      {
        "prefix": [
          "-\u0000--\u0000A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0-\u0000A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-z.EfViBIaok-z.EfViBIaokcuNOhiBIaokcu0-9.a-zA-Z0-AqdozZbEfViBIaokcuNOhWpxsJKSdVUhPZAehjXcfiz.",
        "pump": [
          "-z.EfViBIaok"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*)*(\\s*return *).+?propertyIsEnumerable[\\s\\S]+?: *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "l",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          "//\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000"
        ]
      },
      {
        "prefix": [
          "p   "
        ],
        "suffix": " //p    // //p    //    \t\t \n\n \r\r \r \t \r\r \r \t \r \t\t\n \t\t\n\n\r  \n \r\n\n\n\n\n \n\n\t\r\t\r\t\t \n",
        "pump": [
          " //p    //"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "etu",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "// ///// //////\\?*msrEn]numemerab//ropertyIsEnumemerabl// //\\?*msrEn]E/\\s",
        "pump": [
          "// ///"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([_a-zA-Z]\\w*)*:([a-zA-Z]\\w*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "_::",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "wA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "seJAseJARww_RmScrD",
        "pump": [
          "seJA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*+\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**/*",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*/*\\/*\\/*\\/*\\*+::?=?>}:=;|?~\r\r\r\t"
        ],
        "suffix": "\r\r\n\n\r\r\n\n\n\r\r",
        "pump": [
          "\r\r\n\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/**",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*\n+\n\r\r*\n+\n\r\r \r\n\n \n\t\r\r \n\r",
        "pump": [
          "*\n+\n\r\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(.|\\n)+?>",
    "inputs": [
      {
        "prefix": [
          "<!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "<="
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+!)?((\\d+)(.\\d+)*(.\\d+)*)(.?[a|b|rc]\\d*)?(.post\\d*)?(.dev\\d*)?",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "0$",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "p",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "d\u0000dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "ddd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:[^\";]+|\\\"(?:\\\\.|.)*?\\\")+?)\\s*;",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "8&%58&%5=1}6T@^R",
        "pump": [
          "8&%5"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"."
        ],
        "suffix": "",
        "pump": [
          "\"\"."
        ]
      },
      {
        "prefix": [
          ";"
        ],
        "suffix": "4Xm]4Xm]A\n] c\rZH",
        "pump": [
          "4Xm]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\.[\\w\\d-_.~\\+]+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          ".+.-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "..~.~...~.~.wfnatil.wfnatileymwlcpswhleymwlcpsxfqenzrjxskotpf.wfnatileymw0..natilkotpfm~.wfnatileymw0..natiley[",
        "pump": [
          "..~.~."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          ".+.-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          ".a.a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "...................?",
        "pump": [
          "...."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "namespace :radiant do\\n  namespace :extensions do\\n    namespace :sample do\\n((\\n|\\s*.*\\n)*)    end\\n  end\\nend",
    "inputs": [
      {
        "prefix": [
          "namespace :radiant do\\x0a  namespace :extensions do\\x0a    namespace :sample do\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "namespace :radiant do\n  namespace :extensions do\n    namespace :sample do\n"
        ],
        "suffix": "ext",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "namespace :radiant do\\x0a  namespace :extensions do\\x0a    namespace :sample do\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "namespace :radiant do\n  namespace :extensions do\n    namespace :sample do\n"
        ],
        "suffix": "t",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Object\\.assign\\(\\s*((THREE.)?(\\w+)\\.prototype[,]*\\s*){2,}",
    "inputs": [
      {
        "prefix": [
          "Object.assign(a.prototype"
        ],
        "suffix": "H",
        "pump": [
          "THREEaa.prototypeTHREEaa.prototype"
        ]
      },
      {
        "prefix": [
          "Object.assign(a.prototype"
        ],
        "suffix": "(",
        "pump": [
          "THREEaa.prototypeTHREEaa.prototype"
        ]
      },
      {
        "prefix": [
          "Object.assign("
        ],
        "suffix": "Ob",
        "pump": [
          "THREEaa.prototypeTHREEaa.prototype"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{\\{\\--((.|\\s)*?)--\\}\\}",
    "inputs": [
      {
        "prefix": [
          "{{--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "{{--"
        ],
        "suffix": "}a",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "{{---{{-- \r \t\n\t\n \r"
        ],
        "suffix": " \t\t\t \t\t\t\n \r\n\r",
        "pump": [
          " \t\t\t"
        ]
      },
      {
        "prefix": [
          "{{--"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "{{--"
        ],
        "suffix": "-",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "{{--"
        ],
        "suffix": "\t \t\t\t \t\t\t\r\t\t\t   \n\n\n\r",
        "pump": [
          "\t \t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[^\\\\\\[\\]\\(\\)\\|^\\{\\}]|\\\\[^cxu0-9]|\\\\[0-9]{1,3}|\\\\c[A-Z]|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "c\\u",
        "pump": [
          "a\\00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "c\\xa",
        "pump": [
          "a\\00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Stack trace:(.|\\n)*?\\n\\n",
    "inputs": [
      {
        "prefix": [
          "Stack trace:\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a"
        ]
      },
      {
        "prefix": [
          "Stack trace:"
        ],
        "suffix": " t",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "Stack trace:\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a"
        ]
      },
      {
        "prefix": [
          "Stack trace:"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n +\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/)?\\n *try *{(?:\\s*\\/\\/.*)*\\n *var noNodeClass[\\s\\S]+?catch[^}]+}\\n",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^([一二两三四五六七八九零〇]+[十百千万亿兆]*)+$",
    "inputs": [
      {
        "prefix": [
          "\\xff"
        ],
        "suffix": "!",
        "pump": [
          "\\xff\\xff"
        ]
      },
      {
        "prefix": [
          "〇"
        ],
        "suffix": "#",
        "pump": [
          "〇〇"
        ]
      },
      {
        "prefix": [
          "ããå«"
        ],
        "suffix": "\u0000",
        "pump": [
          "äºå«"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "一二两三一二两三四五一二两三四五六两三Z",
        "pump": [
          "一二两三"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/\\*(.|\\s)*?\\*\\/)|(\\/\\/.*)",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*/\t\n\t\t\b\t\t\r"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\b\n\n\t\b\n\r\b\b\r\b\r\r",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "////*/*^"
        ],
        "suffix": "\\ ( (\\.\\\\s\\\\// \\\\ \\ ( (\\.\\\\s\\\\// \\\\ * (0e577XCIDSJYLSNC\\ (\\. (\\.\\\\s\\\\// \\\\ * (",
        "pump": [
          "\\ ( (\\.\\\\s\\\\// \\\\ "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "First commit(\\s|.)*Some previous changelog.",
    "inputs": [
      {
        "prefix": [
          "First commit"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "First commit"
        ],
        "suffix": "elog",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "First commits"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "First commit"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "First commit"
        ],
        "suffix": "st",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "First commit\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:(?:%.*)|(?:\\/\\*(?:\\n|\\r|.)*?\\*\\/)|(?:\\s+))\\s*",
    "inputs": [
      {
        "prefix": [
          " /*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:\\\\\"|.)*?\"$",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "]",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\\\"\\\"\\\"\\\"\\\"\\\"\"\\\"\\\"|\\\"F\\\"F\\\"D^?Ea|DA\"\\\"\\\"\\\"\"\"\"\"\t",
        "pump": [
          "\"\\\"\\\"\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "e=\"=e"
        ],
        "suffix": "=\\:\\e=e\\:::\\=\\:\\e=e\\:::\\e=>;~;<~=}=?@=<;::~;\\==e=\\:::\\e=e\\:::\\knLwTBENYNuaUMaen",
        "pump": [
          "=\\:\\e=e\\:::\\"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "=\\\"a'\\a>\\a\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "-='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s+|#.*)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "#s"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "#ss"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s+(\\d+)\\s+basis functions,*\\s+(\\d+)\\s+primitive gaussians,*\\s*(\\d+)*\\s*(cartesian basis functions)*\\s*",
    "inputs": [
      {
        "prefix": [
          "\t0\tbasis functions\t0\tprimitive gaussians0"
        ],
        "suffix": "n",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "sdsbasis functionssdsprimitive gaussiansdd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " String +'((?:\\\\.|[^'])*)\\'",
    "inputs": [
      {
        "prefix": [
          " String '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " String '"
        ],
        "suffix": "tr'n",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          " String '."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          " String '"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          " String '"
        ],
        "suffix": "tr ' St",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          " String '\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "\\\\ Str String '\\Y^EO]M\\ String "
        ],
        "suffix": "S\\\\ \\\\ St\\S\\\\ \\\\ St\\OE\\\\ ^Y\\|=~>{}{@}{>}=@>\\ St",
        "pump": [
          "S\\\\ \\\\ St\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[(?:.*? )*?([^ ]*?)\\]",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "] a",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "][",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "][["
        ],
        "suffix": "           X9=bjI7:QnBmojme   X9=bj",
        "pump": [
          "    "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([A-Z]\\w+\\s*)+):\\n\\n",
    "inputs": [
      {
        "prefix": [
          "A0"
        ],
        "suffix": "",
        "pump": [
          "A0A0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "AaAa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "UKPEOHUKPEOHTZSAINPPHNLQDG",
        "pump": [
          "UKPEOH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
    "inputs": [
      {
        "prefix": [
          "^.^@[250.250.250.2500:]"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "2a\"@[26.26.26.",
        "pump": [
          "a\\a"
        ]
      },
      {
        "prefix": [
          "^\"^\"@a-.^@a.a!\\x0e^\"@[250.250.250.2500:\\x7f"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "\"\"@[000.000.000.a:"
        ],
        "suffix": "-",
        "pump": [
          "a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\|(\\([^)]*\\)|{[^}]*})*(\\\\\\||.)+\\|",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\\\.|[^\"])*\"|\\S+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a\"\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "29\"1126141563994\\1126141"
        ],
        "suffix": "56\\1\\\\.\\56\\1\\\\.\\\\.||3414159463348571429107744\\+\\15639\\\\.74\b>?;<?{@=@@~;:\b\b6392",
        "pump": [
          "56\\1\\\\.\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\t|\\s)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[Unity\\](.*\\n)+title=Unity\\nsize=12345\\nurl=http:\\/\\/example.com",
    "inputs": [
      {
        "prefix": [
          "[Unity]\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "[Unity]"
        ],
        "suffix": "//",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "[Unity]\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "[Unity]"
        ],
        "suffix": "/ex",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<form (?:\"[^\"]*\"|'[^']*'|[^'\"<>]*)*>)(.*?)<\\/form>",
    "inputs": [
      {
        "prefix": [
          "<form "
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<form "
        ],
        "suffix": "or</\"<a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<form ''"
        ],
        "suffix": "",
        "pump": [
          "\"\"''"
        ]
      },
      {
        "prefix": [
          "<f"
        ],
        "suffix": "orm orm 7y=@f0gh@]n[`4",
        "pump": [
          "orm "
        ]
      },
      {
        "prefix": [
          "<form "
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<form "
        ],
        "suffix": "m>a'<for",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<form ''"
        ],
        "suffix": "",
        "pump": [
          "\"\"''"
        ]
      },
      {
        "prefix": [
          "<f"
        ],
        "suffix": "orm orm 6-FW\\cpt%1_kf",
        "pump": [
          "orm "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,2}([ ]?-[ ]?){3,}[ \\t]*$",
    "inputs": [
      {
        "prefix": [
          "   -  --"
        ],
        "suffix": "\\x00",
        "pump": [
          "- -"
        ]
      },
      {
        "prefix": [
          " -  - "
        ],
        "suffix": "-\t-",
        "pump": [
          " - -"
        ]
      },
      {
        "prefix": [
          "----"
        ],
        "suffix": "\u0000",
        "pump": [
          " -"
        ]
      },
      {
        "prefix": [
          " --"
        ],
        "suffix": "- -- - -- - -- - -- --------- - - -- --- -----9",
        "pump": [
          "- -- - -- "
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "\\x00",
        "pump": [
          "- -"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-\t-",
        "pump": [
          " - -"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\u0000",
        "pump": [
          " -"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z]*[0-9]+[a-zA-Z]*)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "000"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a$",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00A"
        ],
        "suffix": "\u0000",
        "pump": [
          "a0A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^http:\\/\\/(www\\.youtube|youtube)\\.com\\/watch\\?v=[^&]*(&.*){0,}$",
    "inputs": [
      {
        "prefix": [
          "http://youtube.com/watch?v="
        ],
        "suffix": "a",
        "pump": [
          "&&"
        ]
      },
      {
        "prefix": [
          "http://youtube.com/watch?v="
        ],
        "suffix": "a",
        "pump": [
          "&&"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/(\\\\\\\\|\\\\/|[^\\n/])*/",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\/"
        ]
      },
      {
        "prefix": [
          "/\\\\PMWVL"
        ],
        "suffix": "\\\\\\\\mim\\\\\\\\\\\\\\mim\\\\\\7\\\\cB2{)|;@[\b\\\\\\\\~=[*|(*;||\\Bc*******32'RMx\\\\\\",
        "pump": [
          "\\\\\\\\mim\\\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "\\/"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\SMLOd29OxdOLMS2YNarl2A\\\\\\\\qfqrcjbtzh",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<S>[Ss]na<\\/S> <E[^>]*>(?:<N[^>]*pl=\"y\" [^>]+ h=\"y\"[^>]*>[^<]+<\\/N>|<B><Z>(?:<N[^>]*pl=\"y\" [^>]+ h=\"y\"[^>]*>)+<\\/Z>[^<]+<\\/B>)<\\/E>)",
    "inputs": [
      {
        "prefix": [
          "<S>sna</S> <E><B><Z><Npl=\"y\" p h=\"y\">"
        ],
        "suffix": "",
        "pump": [
          "<Npl=\"y\" pl=\"y\" h=\"y\"pl=\"y\" h=\"y\"pl=\"y\" p h=\"y\">"
        ]
      },
      {
        "prefix": [
          "<S>Sna</S> <E><B><Z>"
        ],
        "suffix": "S> <E><Npl=\"y\" p",
        "pump": [
          "<Npl=\"y\" pl=\"y\" a h=\"y\">"
        ]
      },
      {
        "prefix": [
          "<S>Sna</S> <E><B><Z><Npl=\"y\" \u0000 h=\"y\"><N"
        ],
        "suffix": "",
        "pump": [
          "pl=\"y\" pl=\"y\" \u0000 h=\"y\"><N"
        ]
      },
      {
        "prefix": [
          "<S>sna</S> <E<S><B><Z><Npl=\"y\" p h=\"y\">"
        ],
        "suffix": "",
        "pump": [
          "<Npl=\"y\" pl=\"y\" h=\"y\"pl=\"y\" h=\"y\"pl=\"y\" p h=\"y\">"
        ]
      },
      {
        "prefix": [
          "<S>Sna</S> <E><B><Z>"
        ],
        "suffix": "S> <E<><Npl=\"y\" pl h",
        "pump": [
          "<Npl=\"y\" pl=\"y\" a h=\"y\">"
        ]
      },
      {
        "prefix": [
          "<S>Sna</S> <E><B><Z><Npl=\"y\" \u0000 h=\"y\"><N"
        ],
        "suffix": "",
        "pump": [
          "pl=\"y\" pl=\"y\" \u0000 h=\"y\"><N"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([-a-zA-Z:0-9_.]+|{[^{}]*}|!\\[CDATA\\[[\\s\\S]*?\\]\\])(\\s+[-a-zA-Z:0-9_.]+\\s*=\\s*('[^']*'|\"[^\"]*\"|{.*?}))*\\s*(\\/?)\\s*>",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^:]+|:[^:])*)::(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "jzaSjzaS+IYyB$^bT#",
        "pump": [
          "jzaS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:[^']*?#[^']*?)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'#'#",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "'#"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "3'"
        ],
        "suffix": "#sY(BN0+#sY(BN0+0GW.\r`#\\^G&xrQ[\\[F\rXIia\rnQ@{v+EtW.\rc f?:^^5p_6%E\"K\"u\nL5dFSyy6i)lj$E<",
        "pump": [
          "#sY(BN0+"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'#",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          "'#\u0000"
        ],
        "suffix": "",
        "pump": [
          "#\u0000"
        ]
      },
      {
        "prefix": [
          "c'"
        ],
        "suffix": "U#WJ>_XbU#WJ>_Xb]Pq\tv!R=c/,\bOIu\tV\".ncI\"An0F\nLr\tE}%(8!&q&\n#\tr(^@bvIrew!PP7MULX&Y\t}h4U%;Kc>6",
        "pump": [
          "U#WJ>_Xb"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([a-z]*[A-Z]*[0-9]*(_|-)*)*/*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\$\\w+(\\{.*?\\})*\\s*=.*",
    "inputs": [
      {
        "prefix": [
          "$0"
        ],
        "suffix": "",
        "pump": [
          "{}{}"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "a",
        "pump": [
          "{}{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\/\\/.*\\r?\\n)*['\"]use strict['\"];?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "s",
        "pump": [
          "//\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "//\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "us",
        "pump": [
          "//\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\x00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "]]]]]",
        "pump": [
          "\\xaaa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\x00"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "x",
        "pump": [
          "\\xaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(?:[^\\n\\f\\r'\\\\]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\S\\s])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0c"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'\n",
        "pump": [
          "\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\*]*#[^\\*]*)+\\*?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a**",
        "pump": [
          "a#"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a*a",
        "pump": [
          "a#"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\w+\\.?\\w+)+)\\s*:\\s*(\\w+)",
    "inputs": [
      {
        "prefix": [
          "a0"
        ],
        "suffix": "",
        "pump": [
          "A00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\t.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "wwww"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "IMCFIMCFr02rmVAD_",
        "pump": [
          "IMCF"
        ]
      },
      {
        "prefix": [
          "a0"
        ],
        "suffix": "",
        "pump": [
          "A00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Dsd6Dsd6vQUgjt7nI",
        "pump": [
          "Dsd6"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'([^']*(&[ ]*[\\n\\r]+)?)*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "&\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\n&",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ",26),26)\n}T\rm\rau\"",
        "pump": [
          ",26)"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "&\\x0a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\n&'a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "?'"
        ],
        "suffix": "CsPTCsPTw\b7\trd(xl",
        "pump": [
          "CsPT"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([A-Z]?[A-Z]?[C,Z]?[0-9]{3}[>\\-]\\s?\\n?)+)([0-9]{6})-$",
    "inputs": [
      {
        "prefix": [
          "ZZZ000-"
        ],
        "suffix": "",
        "pump": [
          "C000-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-CC",
        "pump": [
          "A000-A000-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "K279>K279>\rH279>H279>K279>K279>K279>\rH279>H279>K279>279>272>K279>\rH279>K279>272>K279>\r279>\rH279>",
        "pump": [
          "K279>K279>\rH279>H279>K279>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?:\\/\\/(([\\w.-]+)+(:\\d+)?(\\/([\\w/_.]*(\\?\\S+)?)?)?))",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps:\t",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[^)\\\\]+|\\\\.)*)\\)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\a)a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "V\n BV\n B&z/C~0WH'(",
        "pump": [
          "V\n B"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(-arch \\S+(?: -arch \\S+)*)",
    "inputs": [
      {
        "prefix": [
          "-arch a"
        ],
        "suffix": "\t",
        "pump": [
          " -arch a -arch a"
        ]
      },
      {
        "prefix": [
          "-arch a"
        ],
        "suffix": "c\t-ar",
        "pump": [
          " -arch a -arch a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:'[^']*'|[^\\|])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "|'|",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "|",
        "pump": [
          "''\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "|",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "\u0000''"
        ],
        "suffix": "|",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-zA-Z0-9-\\p{L}]{1,63}\\.)?(xn--)?[a-zA-Z0-9\\p{L}]+(-[a-zA-Z0-9\\p{L}]+)*\\.)+[a-zA-Z\\p{L}]{2,63}$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "xn--aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "pump": [
          "a.a.xn--a.a."
        ]
      },
      {
        "prefix": [
          "0\u0000-------------}"
        ],
        "suffix": "",
        "pump": [
          "A00\u0000-------------}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "--.xn--",
        "pump": [
          "a.a.xn--a.a."
        ]
      },
      {
        "prefix": [
          "0\u000000"
        ],
        "suffix": "",
        "pump": [
          "p0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\?((.|\\s)*?)\\?>",
    "inputs": [
      {
        "prefix": [
          "<?"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<?"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<?"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<?"
        ],
        "suffix": "\t<?",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "\\<?|\\paiyhwqaqwrighujlgkftjUS\b75"
        ],
        "suffix": "\t\t\r\t\n\t\t\t\r\t\n\t\n\t\n\t\t\b\r\t\b\b\t\t\t\r\t",
        "pump": [
          "\t\t\r\t\n\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "{(([^}]|\\r\\n?|\\n)*)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "return\\s*\\(?'((?:\\\\'|[^']+)+)'\\)?",
    "inputs": [
      {
        "prefix": [
          "return(']"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return('a"
        ],
        "suffix": ")\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return'"
        ],
        "suffix": "returetur[;@|&;);&",
        "pump": [
          "retu"
        ]
      },
      {
        "prefix": [
          "return('s"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return('a"
        ],
        "suffix": "urr",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return'"
        ],
        "suffix": "\\XYC\\XYCMJUJWBOAUE",
        "pump": [
          "\\XYC"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*(?:\\'(?:\\\\\\'|.)*?\\'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+[;\\s]*",
    "inputs": [
      {
        "prefix": [
          "*a:"
        ],
        "suffix": "a\t}",
        "pump": [
          "''''"
        ]
      },
      {
        "prefix": [
          "*a:"
        ],
        "suffix": "a0*[;\\*",
        "pump": [
          "''''"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[+\\-]?(\\d+([.,]\\d+)?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "+0"
        ],
        "suffix": "++",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0609060907498679486+0",
        "pump": [
          "0609"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "height=\"([^\"]+)*\"",
    "inputs": [
      {
        "prefix": [
          "height=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "height=\"a"
        ],
        "suffix": "i",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "height=\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "height=\""
        ],
        "suffix": "$[te$[te3l)WTa?@<a",
        "pump": [
          "$[te"
        ]
      },
      {
        "prefix": [
          "height=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "height=\"a"
        ],
        "suffix": "h",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "height=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "height=\""
        ],
        "suffix": "\r\nY*\r\nY*PdxTQZ1l/U",
        "pump": [
          "\r\nY*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\/\\/.*\\n)* *[\"'] *(?:<% *)?if *\\(hasEnumPrototype *(?:&&|\\))[\\s\\S]+?<% *} *(?:%>|[\"']).+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " //\n \"if(hasEnumPr",
        "pump": [
          " //\n//\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " //\n \"if(hasEnumPro",
        "pump": [
          " //\n//\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(\\\\\\\\|\\\\\"|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:from ccxt\\.async_support\\.[^\\.]+ import [^\\s]+\\s+\\# noqa\\: F401[\\r]?[\\n])+[\\r]?[\\n]exchanges",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "fr",
        "pump": [
          "from ccxt.async_support.a import import a\t# noqa: F401\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mp.\t# noqa: F401\r\n\r\nex",
        "pump": [
          "from ccxt.async_support.a import import a\t# noqa: F401\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(@(-?)[a-zA-Z\\-]*(keyframes)*\\s[a-zA-Z\\-]*(\\s*,?\\s*)){2,}",
    "inputs": [
      {
        "prefix": [
          "@-\t,"
        ],
        "suffix": "@akeyfram",
        "pump": [
          "@-\t"
        ]
      },
      {
        "prefix": [
          "@s@s@-"
        ],
        "suffix": "",
        "pump": [
          "keyframess@-"
        ]
      },
      {
        "prefix": [
          "@-\t,"
        ],
        "suffix": "e@a@akeyframe",
        "pump": [
          "@-\t"
        ]
      },
      {
        "prefix": [
          "@s@s@ss"
        ],
        "suffix": "\u0000",
        "pump": [
          "s@ss"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e@ake",
        "pump": [
          "@-\t"
        ]
      },
      {
        "prefix": [
          "@s@s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s@s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*)?ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;(?:(\\s*)(ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;)?)*",
    "inputs": [
      {
        "prefix": [
          "ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;"
        ],
        "suffix": "\tAS",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;"
        ],
        "suffix": "CAT",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\nLast Modified.*)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\nLast Modif",
        "pump": [
          "\nLast Modified\nLast Modified"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\nLast Mod",
        "pump": [
          "\nLast Modified\nLast Modified"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<h(.*?)>((.|\\n|\\r\\n)*?)<\\/h1>",
    "inputs": [
      {
        "prefix": [
          "<h>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<h>"
        ],
        "suffix": "h",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<h>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<h>"
        ],
        "suffix": "1</",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(a|b|ab)*bc",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "ab"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "cb",
        "pump": [
          "aab"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "aba"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "ab"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "cb",
        "pump": [
          "aab"
        ]
      },
      {
        "prefix": [
          "ab"
        ],
        "suffix": "",
        "pump": [
          "abab"
        ]
      },
      {
        "prefix": [
          "abbabbbbabbb"
        ],
        "suffix": "bababababababababbabbbbbab",
        "pump": [
          "babababa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(```\\s*(?:js|javascript)\\n)?(.*)(\\/\\*\\*\\*\\*\\*\\*\\/ \\(function\\(modules\\) \\{ \\/\\/ webpackBootstrap\\n(?:.|\\n)*?\\n\\/\\*\\*\\*\\*\\*\\*\\/ \\}\\)\\n\\/\\**\\/\\n)",
    "inputs": [
      {
        "prefix": [
          "```\\x00/******/ (function(modules) { // webpackBootstrap\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/******/ (function(modules) { // webpackBootstrap\n"
        ],
        "suffix": "ts",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "``` \\x00/******/ (function(modules) { // webpackBootstrap\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/******/ (function(modules) { // webpackBootstrap\n"
        ],
        "suffix": "str",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+)*:(\\d+)*:*(\\d+)*[:,]*(\\d+)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": ",0:",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ":dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "E"
        ],
        "suffix": "64936493040331557",
        "pump": [
          "6493"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ":d"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "33503350994869392",
        "pump": [
          "3350"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\S+\\.)+\\S+$",
    "inputs": [
      {
        "prefix": [
          "!."
        ],
        "suffix": "\\x09",
        "pump": [
          "/..."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "S\u0000SS"
        ],
        "suffix": "",
        "pump": [
          "SSS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z]+[a-z]*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "TPISTPISEJOHRWMKMQU-",
        "pump": [
          "TPIS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*\\[[^\\]]+\\]\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "[^]"
        ],
        "suffix": "\\x00",
        "pump": [
          "[^]\\x09[!]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "]a",
        "pump": [
          "\t[a]\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(use \\w+\\:\\:\\w+.+?\\;[\\r\\n][\\r\\n.]*){3,}",
    "inputs": [
      {
        "prefix": [
          "use a::aa;\nuse a::aa;\n"
        ],
        "suffix": "e",
        "pump": [
          "use a::aaa;\n"
        ]
      },
      {
        "prefix": [
          "use a::aa;\nuse a::aa;\n"
        ],
        "suffix": "e",
        "pump": [
          "use a::aaa;\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ".us",
        "pump": [
          "use a::aaa;\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "GlobalSection\\(SolutionConfigurationPlatforms\\) = preSolution((?:.|\\n)*?)EndGlobalSection",
    "inputs": [
      {
        "prefix": [
          "GlobalSection(SolutionConfigurationPlatforms) = preSolution"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "GlobalSection(SolutionConfigurationPlatforms) = preSolution"
        ],
        "suffix": "ndGlobalSe",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "GlobalSection(SolutionConfigurationPlatforms) = preSolution"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "GlobalSection(SolutionConfigurationPlatforms) = preSolution"
        ],
        "suffix": "ndG",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^#\\n]|#[^{\\n]|(\\\\\\\\)*\\\\#\\{)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#a#{",
        "pump": [
          "a\\\\\\#{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#a\n",
        "pump": [
          "a\\\\\\#{"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+",
    "inputs": [
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\d+)\\.(\\d+)\\.(\\d+)(([\\.-][0-9A-Za-z-]+)*)$",
    "inputs": [
      {
        "prefix": [
          "0.0.0"
        ],
        "suffix": "!",
        "pump": [
          "----"
        ]
      },
      {
        "prefix": [
          "0.0.0"
        ],
        "suffix": "a..",
        "pump": [
          "-a-a"
        ]
      },
      {
        "prefix": [
          "d\u0000d\u0000d--A"
        ],
        "suffix": "\u0000",
        "pump": [
          "--A"
        ]
      },
      {
        "prefix": [
          "0.0.0."
        ],
        "suffix": "0-0---0-0---z--0-0-0.0.0.0-0.0.0.0-0.0.0.0.0.30.0-9A-Za.",
        "pump": [
          "0-0---"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\S+)\\s*=\\s*((\\S|\\S+\\s+\\S+)+)\\s*$",
    "inputs": [
      {
        "prefix": [
          "\\x00=>"
        ],
        "suffix": "!\\x09\\x00!\\x09\\x00\\x09\\x00",
        "pump": [
          "==\\x09>"
        ]
      },
      {
        "prefix": [
          "a="
        ],
        "suffix": "\ta\ta\ta",
        "pump": [
          "aaa\ta"
        ]
      },
      {
        "prefix": [
          "S=SSsSS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SSsSS"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "rC=> 1rC=> 1Mw[h-a=Sqoz|kF|blz\t`OjjJ \tr\n\nR",
        "pump": [
          "rC=> 1"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "href=\"xmpp:\\s?(\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+)\\s?\"",
    "inputs": [
      {
        "prefix": [
          "href=\"xmpp:0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:\ta-a"
        ],
        "suffix": "h",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:w@w\u0000ww\u0000ww"
        ],
        "suffix": "",
        "pump": [
          "wwww\u0000ww"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:5_@"
        ],
        "suffix": "FbVBFbVBFEXONFXY",
        "pump": [
          "FbVB"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:i"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:\ta-a"
        ],
        "suffix": "ra\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:w@www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:"
        ],
        "suffix": "hWdhhWdhwfWMshjAKu",
        "pump": [
          "hWdh"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:\ta-a"
        ],
        "suffix": "e@aa",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:w@www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "href=\"xmpp:"
        ],
        "suffix": "hCabhCabMXsajDLEeT",
        "pump": [
          "hCab"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[\\w\\d-]+\\.?)+@(?:(?:[\\w\\d]\\-?)+\\.)+\\w{2,4}$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-a.a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--d"
        ],
        "suffix": "",
        "pump": [
          "wd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "IotxIotxD2QZTudGyA",
        "pump": [
          "Iotx"
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "--d"
        ],
        "suffix": "",
        "pump": [
          "wd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "JNNlJNNluSGNluuSVY",
        "pump": [
          "JNNl"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(Ежедневно|(?:(?:Пн|Вт|Ср|Чт|Пт|Сб|В[сc])[, -]*)+)[ сc:]+(\\d\\d?[:.]\\d\\d)[- до]+(\\d\\d[.:]\\d\\d)",
    "inputs": [
      {
        "prefix": [
          "\\xff\\xffc"
        ],
        "suffix": "",
        "pump": [
          "\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff"
        ]
      },
      {
        "prefix": [
          "Пн "
        ],
        "suffix": "-",
        "pump": [
          " "
        ]
      },
      {
        "prefix": [
          "\\xff\\xffc"
        ],
        "suffix": "",
        "pump": [
          "\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<documentRecord\\s(xmlns=[^\\s]+)*\\sid\\s*=\\s*\\\"([^\\\"]*?)\\\">",
    "inputs": [
      {
        "prefix": [
          "<documentRecord\\x09"
        ],
        "suffix": "",
        "pump": [
          "xmlns=\\x00xmlns=y"
        ]
      },
      {
        "prefix": [
          "<documentRecord\t"
        ],
        "suffix": "\t",
        "pump": [
          "xmlns=axmlns=a"
        ]
      },
      {
        "prefix": [
          "<documentRecord\\x09"
        ],
        "suffix": "",
        "pump": [
          "xmlns=\\x00xmlns=y"
        ]
      },
      {
        "prefix": [
          "<documentRecord\t"
        ],
        "suffix": "=x",
        "pump": [
          "xmlns=axmlns=a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "color\\((?:[^()]+|\\([^)]+\\))+\\)",
    "inputs": [
      {
        "prefix": [
          "color(!"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "color(a"
        ],
        "suffix": ")a(a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "color\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "color("
        ],
        "suffix": "R\t<\"R\t<\"_ n8\n\tB@!(I",
        "pump": [
          "R\t<\""
        ]
      },
      {
        "prefix": [
          "color(d"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "color(a"
        ],
        "suffix": ")co",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "color\u0000\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "(color(?:([x)"
        ],
        "suffix": "v2HLv2HLpm$jMZXFY",
        "pump": [
          "v2HL"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\w+(?:=(?:(?:\\w|[0-9_-])+|\"[^\"]*\")?)?)",
    "inputs": [
      {
        "prefix": [
          "a="
        ],
        "suffix": "=\"a\"\"",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "a="
        ],
        "suffix": "=\"$\"$",
        "pump": [
          "a_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "blazer\ta"
        ],
        "suffix": "b\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "blazer.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      },
      {
        "prefix": [
          "blazer\ta"
        ],
        "suffix": "m$mljblaze",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "blazerw"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@(\\\\[\\\\@]|[^@])*@[egimosx]*",
    "inputs": [
      {
        "prefix": [
          "@"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "@a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\%,-?$\rI\\\\\"}g\\\\\r\b\r\n\b\n\n618\\h;!5\r^S4ytttgBGyJxLc($u\\\\}g\rI\\\\\"}g\\\\\r\b\r\\\\%,-?$mT<Z\rII\rga#,yTuzQFd",
        "pump": [
          "\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "@"
        ],
        "suffix": "@a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "@]mJTuZa\\a\\\\\\PlGV]\\\\ \r\r \r\r \r\r\r\n\t \t\r\t\n\r\t\nE5f8794]mJTu\\\\]mJTuZa\\\\B7AE5a\\\\FCc26B6fa"
        ],
        "suffix": "\\\\0\\\\a\\\\a\\\\\\0\\\\a\\\\a\\\\\\Q\\PlG\\",
        "pump": [
          "\\\\0\\\\a\\\\a\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'((\\\\.|[^'])*)'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$\\$((.|\\n)*?)\\$\\$",
    "inputs": [
      {
        "prefix": [
          "$$"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "$$"
        ],
        "suffix": "$\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "$$"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "$$"
        ],
        "suffix": "$\n$",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\?(.+?)=([^&]*)(?:\\&(.+?)=([^&]*))*",
    "inputs": [
      {
        "prefix": [
          "?a="
        ],
        "suffix": "a&",
        "pump": [
          "&a=="
        ]
      },
      {
        "prefix": [
          "?\u0000=&\u0000"
        ],
        "suffix": "",
        "pump": [
          "==&\u0000"
        ]
      },
      {
        "prefix": [
          "?a="
        ],
        "suffix": "a&",
        "pump": [
          "&a=="
        ]
      },
      {
        "prefix": [
          "\u0000=&\u0000"
        ],
        "suffix": "",
        "pump": [
          "==&\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<textarea[^>]*>)(.|\\n)*(<\\/textarea>)",
    "inputs": [
      {
        "prefix": [
          "<textarea>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<textarea>"
        ],
        "suffix": "<text",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<textarea>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<textarea>"
        ],
        "suffix": "ar></textare",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Indicate we're returning a single value on the stack. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "e'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " Ind Indicate we'r",
        "pump": [
          " Ind"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Physical density: ([^\\r?\\n]+)*",
    "inputs": [
      {
        "prefix": [
          "Physical density: a"
        ],
        "suffix": "\n",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Physical density: a"
        ],
        "suffix": "cal\nPhysical de",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\/?form(.|\\s)*?>",
    "inputs": [
      {
        "prefix": [
          "</form"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "</form"
        ],
        "suffix": "<",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<form\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "-</for"
        ],
        "suffix": "m\t\t\t\n\tm\t\t\t\n\t\t\n\t\t\b\t\t\t\r\r\n\t\r\b\n",
        "pump": [
          "m\t\t\t\n\t"
        ]
      },
      {
        "prefix": [
          "</form"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "</form"
        ],
        "suffix": "o",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<form\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<form/"
        ],
        "suffix": "  \t   \t   \t\r\t \n \r\r\t\n ",
        "pump": [
          "  \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<div class=\"mapping\"\\>(.|\\s)*\\<\\/div>",
    "inputs": [
      {
        "prefix": [
          "<div class=\"mapping\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<div class=\"mapping\">"
        ],
        "suffix": "</",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<div class=\"mapping\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<div class=\"mapping\">"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<div class=\"mapping\">"
        ],
        "suffix": "a",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<div class=\"mapping\">\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z]([a-z0-9]*[-_]?[a-z0-9]+)*@([a-z0-9]*[-_]?[a-z0-9]+)+[\\.][a-z]{2,3}([\\.][a-z]{2})?$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "a@a-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ucrcucrcr55rcrc",
        "pump": [
          "ucrc"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "a0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a0a"
        ],
        "suffix": "",
        "pump": [
          "00a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "z0z0z0z0z0z0z0z",
        "pump": [
          "z0z0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\t)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?",
    "inputs": [
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "a\t\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "w='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "\\w='\\("
        ],
        "suffix": ")\\w\\\\\\)\\w\\\\\\\\5rC@boSTXQ3e!Lq]|^d\\w=\"\"+G).(s?\\\\O(\\P:(TC@boSTXQ3e!Lq]K\r\"kf3:7ZBqtV8",
        "pump": [
          ")\\w\\\\\\"
        ]
      },
      {
        "prefix": [
          "a ='"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "\ta'\\a>\\a\t",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "w='."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^java\\.util\\..*Map.*(<.*>)*$",
    "inputs": [
      {
        "prefix": [
          "java.util.Map"
        ],
        "suffix": "a",
        "pump": [
          "<><>"
        ]
      },
      {
        "prefix": [
          "java\u0000util\u0000Map<\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:.|\\n)*?)<style>((?:.|\\n)*)<\\/style>((?:.|\\n)*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<style><styl",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a<",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(doi:\\s*|(?:https?://)?(?:dx\\.)?doi\\.org/)?(10\\.\\d+(.\\d+)*/.+)$",
    "inputs": [
      {
        "prefix": [
          "doi:10.0"
        ],
        "suffix": "",
        "pump": [
          "!000"
        ]
      },
      {
        "prefix": [
          "10.0"
        ],
        "suffix": "aa",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "ddoi:10."
        ],
        "suffix": "036309036309789908477410",
        "pump": [
          "036309"
        ]
      },
      {
        "prefix": [
          "doi:10.2"
        ],
        "suffix": "",
        "pump": [
          "!000"
        ]
      },
      {
        "prefix": [
          "10.0"
        ],
        "suffix": "aa",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "10."
        ],
        "suffix": "130013009922108863504052",
        "pump": [
          "1300"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```config\\s+((.|\\s)+?)\\s*```",
    "inputs": [
      {
        "prefix": [
          "```config !"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```config\t"
        ],
        "suffix": "a",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```configs\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "```config\n\t\r\t\n\r\r"
        ],
        "suffix": "\t\t\r\t\t\t\r\t\r\t\n\n\r\r\n$#)\n\n&(onf\n\t\r\t\n\n\r",
        "pump": [
          "\t\t\r\t"
        ]
      },
      {
        "prefix": [
          "```config a"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```config\t"
        ],
        "suffix": "`con``",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```configs\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((.*\\n)*)\\r?\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "defaults\\s*\\=\\s*(\\{(?:.|\\s)+?\\}\\;)",
    "inputs": [
      {
        "prefix": [
          "defaults={!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "defaults={"
        ],
        "suffix": "d",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "defaults={d"
        ],
        "suffix": "\t\t \t\t\t \t \t\rault\t\t \t \t\r",
        "pump": [
          "\t\t \t"
        ]
      },
      {
        "prefix": [
          "defaults={e"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "defaults={"
        ],
        "suffix": "=",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "ddefaults={"
        ],
        "suffix": "d\t\t \r\td\t\t \r\t\n\t\t\r s={}faude\t\t \r\t\n\t",
        "pump": [
          "d\t\t \r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([0-9]+)(.[0-9]+)*\\\\s*(B|b|K|k|M|m|G|g|T|t|P|p|KB|kb|KiB|MB|mb|MiB|Mi|GB|gb|GiB|Gi|TB|tb|TiB|Ti|PB|pb|PiB|Pi|)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "0\\Ki",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "007408966996691603",
        "pump": [
          "0074"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "p0",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "006401789739174989",
        "pump": [
          "0064"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$",
    "inputs": [
      {
        "prefix": [
          "   -  --"
        ],
        "suffix": "\\x00",
        "pump": [
          "- -"
        ]
      },
      {
        "prefix": [
          " -  - "
        ],
        "suffix": "-\t-",
        "pump": [
          " - -"
        ]
      },
      {
        "prefix": [
          "----"
        ],
        "suffix": "\u0000",
        "pump": [
          " -"
        ]
      },
      {
        "prefix": [
          " --"
        ],
        "suffix": "- ----- - - - ----- - - ------ ---- - -- --- - -\t-",
        "pump": [
          "- ----- - - "
        ]
      },
      {
        "prefix": [
          "-"
        ],
        "suffix": "\\x00",
        "pump": [
          "- -"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-\t-",
        "pump": [
          " - -"
        ]
      },
      {
        "prefix": [
          "--"
        ],
        "suffix": "\u0000",
        "pump": [
          " -"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n\\[\\[(?:Image|File)(?:.*?)(\\|.*?)*\\|(.*?)\\]\\]",
    "inputs": [
      {
        "prefix": [
          "[[File"
        ],
        "suffix": "I",
        "pump": [
          "||"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-zA-Z0-9]*:[a-zA-Z0-9]*)(,|[a-zA-Z0-9]*:[a-zA-Z0-9]*)*",
    "inputs": [
      {
        "prefix": [
          ":"
        ],
        "suffix": ",a,",
        "pump": [
          ",:a:"
        ]
      },
      {
        "prefix": [
          "::a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0:a"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": ",a",
        "pump": [
          ",:a:"
        ]
      },
      {
        "prefix": [
          "::A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0:A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z](-?[a-z0-9]+)*(__[a-z0-9](-?[a-z0-9]+)*)?((_[a-z0-9](-?[a-z0-9]+)*){0,2})?$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "a0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "-a_a-a_a-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a_0_0a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "te61te61a1aaby1aab_",
        "pump": [
          "te61"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "!",
        "pump": [
          "_aa0"
        ]
      },
      {
        "prefix": [
          "a-a"
        ],
        "suffix": "_-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a__00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "tt8stt8sccegibstgvi-",
        "pump": [
          "tt8s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^@@INIT(.|\\n)+@@reduxReactRouter\\/routerDidChange(.|\\n)+@@reduxReactRouter\\/initRoutes(.|\\n)+$",
    "inputs": [
      {
        "prefix": [
          "@@INIT!"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "@@INIT"
        ],
        "suffix": "a@@reduxReactRouter/routerDidChange@@reduxReactRouter",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\s']+|'[^']*')+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "'\t'\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "(\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a'\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "(\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:.*\\n)*(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(?:(?:\\\\.|[^\\/\\r\\n])+?)\\/",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a\\/\n",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "/OBE.%>)!]:\\OBE.%>)!]:@\\-{~+"
        ],
        "suffix": "_\\\\8t760cc@\\:\\_\\\\8t760cc@\\:\\([d[7>)!]:@{~\\-{~\\\\8t760cc@5x8z\\:\\([d[",
        "pump": [
          "_\\\\8t760cc@\\:\\"
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a\\///",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "/\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\d+\\).*\\n\\s+(?:\\e\\[\\d*m)?Failure.*(\\n(?:(?:\\e\\[\\d*m)|(?:\\s))+#\\s(.*)?:\\d+(?::.*)?(?:\\e\\[\\d*m)?)+$",
    "inputs": [
      {
        "prefix": [
          "0)\\x0a\\x0a\\x09\\x1b[mFailure\\x0a\\x0a\\x09\\x1b[m\\x0a\\x1b[m#\\x0a\\x0a\\x09\\x00:0"
        ],
        "suffix": ";",
        "pump": [
          "\\x0a\\x1b[m#\\x0b:0\\x0a\\x1b[m#\\x0a:0"
        ]
      },
      {
        "prefix": [
          "0)\n\tFailure\n\t#\t"
        ],
        "suffix": ":0\u001b",
        "pump": [
          ":0\n\t#\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[[^\\]]*\\]\\(\\s*)((([^\\s\\(\\)]|\\(\\S*?\\))+))\\s*(\".*?\")?\\)",
    "inputs": [
      {
        "prefix": [
          "[](!"
        ],
        "suffix": "",
        "pump": [
          "()\"()"
        ]
      },
      {
        "prefix": [
          "[]("
        ],
        "suffix": ")]",
        "pump": [
          "a()()"
        ]
      },
      {
        "prefix": [
          "*]S"
        ],
        "suffix": "(",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "[](\\"
        ],
        "suffix": "",
        "pump": [
          "()\"()"
        ]
      },
      {
        "prefix": [
          "[]("
        ],
        "suffix": "(\t])a",
        "pump": [
          "a()()"
        ]
      },
      {
        "prefix": [
          "*]\u0000"
        ],
        "suffix": "(",
        "pump": [
          "S\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\#.*?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "#\n#\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\w!#$%&'*+/=?^_{}\\\\|~-]+([\\w!#$%&'*+/=?^_{}\\\\|~\\.-]+)*@([\\w][\\w-]*\\.)+[\\w][\\w-]*$",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "A."
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "a@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "^\\w!^\\w!#$%&'*+/=?",
        "pump": [
          "^\\w!"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\w+(_+)*\\w*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          "a_"
        ],
        "suffix": "#",
        "pump": [
          "__"
        ]
      },
      {
        "prefix": [
          "w_"
        ],
        "suffix": "\u0000",
        "pump": [
          "__"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^E(?:\\\\'|.)*?'$",
    "inputs": [
      {
        "prefix": [
          "E"
        ],
        "suffix": "]",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "E"
        ],
        "suffix": "a",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "E\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      },
      {
        "prefix": [
          "EEE^EEEE^E\\'E\\'E\\'V:'KEE0fd440FeddEAD^\\'EE\\'EEE^\\'^EE0fPk8d(f=$A$ORFLOJ^'ZBI\\'EEE^"
        ],
        "suffix": "\\'\\'^\\'E\\'\\'\\'^\\'E\\'5",
        "pump": [
          "\\'\\'^\\'E\\'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\?|\\*|\\{((?:\\{[^/]+?\\}|[^/{}]|\\\\[{}])+?)\\}",
    "inputs": [
      {
        "prefix": [
          "{|"
        ],
        "suffix": "",
        "pump": [
          "\\{{}{}"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "*a{",
        "pump": [
          "{a}\\{\\}"
        ]
      },
      {
        "prefix": [
          "{|"
        ],
        "suffix": "",
        "pump": [
          "\\{{}{}"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "*a\\/",
        "pump": [
          "{a}\\{\\}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+\\.*)+",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0a",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\{)((\\[)(\\d+)..(\\d+)(\\])[,]?){1,}(\\})?",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "{[0",
        "pump": [
          "[00a00]"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "0{{",
        "pump": [
          "[00a00]"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "],[0",
        "pump": [
          "[00a00]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\.|[^\\.])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "..",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\..",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(<a .+?a>|[^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)?')",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "<a <a aa>"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "'\\",
        "pump": [
          "<a \\a>"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "<a <a aa>"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\<",
        "pump": [
          "<a \\a>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([\\w:-]+)((?:\\s*[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          "A-"
        ]
      },
      {
        "prefix": [
          "<aa"
        ],
        "suffix": "<$\t'\ta/\"\ta\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<--"
        ],
        "suffix": "",
        "pump": [
          ":-"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "abZZabZZGCLFBVMOOX",
        "pump": [
          "abZZ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*>.*(?:\\n[ \\t]*\\S.*)*",
    "inputs": [
      {
        "prefix": [
          ">"
        ],
        "suffix": "a",
        "pump": [
          "\n a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`{3,}(\\w+)?((?:\\n|.)+?)`{3,}",
    "inputs": [
      {
        "prefix": [
          "```{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "```{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "```"
        ],
        "suffix": "`a",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "`{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "\n",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "steal\\.(production|production\\.[a-zA-Z0-9\\-\\.\\_]*)*js",
    "inputs": [
      {
        "prefix": [
          "steal."
        ],
        "suffix": "",
        "pump": [
          "productionproduction.production"
        ]
      },
      {
        "prefix": [
          "steal."
        ],
        "suffix": "uct",
        "pump": [
          "production.productionproduction"
        ]
      },
      {
        "prefix": [
          "steal\u0000production\u0000"
        ],
        "suffix": "",
        "pump": [
          "productionproduction\u0000"
        ]
      },
      {
        "prefix": [
          "steal."
        ],
        "suffix": "",
        "pump": [
          "productionproduction.production"
        ]
      },
      {
        "prefix": [
          "steal."
        ],
        "suffix": "up",
        "pump": [
          "production.productionproduction"
        ]
      },
      {
        "prefix": [
          "steal\u0000production\u0000."
        ],
        "suffix": "",
        "pump": [
          "productionproduction\u0000."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([\\[\\|]?[A-Z]+\\|?)+\\]",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "A|A"
        ]
      },
      {
        "prefix": [
          "[A"
        ],
        "suffix": "A|[|",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "]"
        ],
        "suffix": "OGYVOGYVGOGYVGYNN",
        "pump": [
          "OGYV"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "",
        "pump": [
          "A|A"
        ]
      },
      {
        "prefix": [
          "[A"
        ],
        "suffix": "]A|",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "VEPKVEPKATEPPKATE",
        "pump": [
          "VEPK"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\\\.|\"\"|[^\"])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\a\"\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "."
        ],
        "suffix": "\u0000",
        "pump": [
          "\"\"."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\u0000",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<ol( start=\\\"\\d+\\\")?\\s*>\\s*((<li>\\s*.*?\\s*</li>\\s*)*)</ol>",
    "inputs": [
      {
        "prefix": [
          "<ol>"
        ],
        "suffix": "",
        "pump": [
          "<li></li><li></li></li>"
        ]
      },
      {
        "prefix": [
          "<ol>"
        ],
        "suffix": "t",
        "pump": [
          "<li>\t</li>"
        ]
      },
      {
        "prefix": [
          "<ol><li>s"
        ],
        "suffix": "",
        "pump": [
          "s</li><li>s"
        ]
      },
      {
        "prefix": [
          "<ol>"
        ],
        "suffix": "",
        "pump": [
          "<li></li><li></li></li>"
        ]
      },
      {
        "prefix": [
          "<ol>"
        ],
        "suffix": "\t",
        "pump": [
          "<li>\t</li>"
        ]
      },
      {
        "prefix": [
          "<ol><li>"
        ],
        "suffix": "",
        "pump": [
          "s</li><li>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+?)=(\\S+::\\S+(?::\\s*,\\s*\\S+::\\S+)*)?$",
    "inputs": [
      {
        "prefix": [
          "!==::>"
        ],
        "suffix": "\\x09",
        "pump": [
          ":,;::::,::::;"
        ]
      },
      {
        "prefix": [
          "a=a::a"
        ],
        "suffix": ",\t",
        "pump": [
          ":,a::a:,a::a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z_](?:[\\._-]?[a-z0-9_])*(?:\\/[a-z_](?:[\\._-]?[a-z0-9_])*)+\\.d\\.ts$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "-a",
        "pump": [
          "_a"
        ]
      },
      {
        "prefix": [
          "_/_a"
        ],
        "suffix": "",
        "pump": [
          "_a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9]))?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "0\\00\\0\\{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\$$",
        "pump": [
          "a\\aa\\aa\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a9\\a9\\90\\-0Z\\9a9\\a9\\90\\-0Z\\9a\\96652045114625979698\\a94\\520451\\90\\-0Z-A\\9a\\",
        "pump": [
          "a9\\a9\\90\\-0Z\\9"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))",
    "inputs": [
      {
        "prefix": [
          "wwwa_:/0"
        ],
        "suffix": "",
        "pump": [
          "}}"
        ]
      },
      {
        "prefix": [
          "aa:aa"
        ],
        "suffix": "-(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "he:www"
        ],
        "suffix": ";:'\";:'\".,;:'\".",
        "pump": [
          ";:'\""
        ]
      },
      {
        "prefix": [
          "wwwa_:/0"
        ],
        "suffix": "",
        "pump": [
          "}}"
        ]
      },
      {
        "prefix": [
          "aa:aa"
        ],
        "suffix": "-$(",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www:gww"
        ],
        "suffix": ":::':::'\".,;:'\".",
        "pump": [
          ":::'"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.+\\/)*(.*)(\\.[^.]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/a.",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "//e/AG/^//e/AG/^/././.+///a.+\\/cebdfe./.",
        "pump": [
          "//e/AG/^"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/Encoding \\d+ array\\n(0 1 .*for\\n)?((dup \\d+\\s*/\\S+ put(.*)\\n)+)",
    "inputs": [
      {
        "prefix": [
          "/Encoding 0 array\n"
        ],
        "suffix": "up\t",
        "pump": [
          "dup 0/a put put\n"
        ]
      },
      {
        "prefix": [
          "/Encoding 0 array\n"
        ],
        "suffix": "y\nd/Enco",
        "pump": [
          "dup 0/a put put\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\d+\\.\\d+\\.\\d+)(\\-[^\\+]+)*(\\+.+)*",
    "inputs": [
      {
        "prefix": [
          "0.0.0"
        ],
        "suffix": "a",
        "pump": [
          "-a-a"
        ]
      },
      {
        "prefix": [
          "0.0.0"
        ],
        "suffix": "a",
        "pump": [
          "-a-a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~/|/)?(?:\\w+:\\w+@)?(?:(?:[-\\w]+\\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum|travel|[a-z]{2}))(?::[\\d]{1,5})?(?:(?:(?:/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|/)+|\\?|#)?(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?:#(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)?",
    "inputs": [
      {
        "prefix": [
          "a.aa/a"
        ],
        "suffix": "e@a.t",
        "pump": [
          "/aa"
        ]
      },
      {
        "prefix": [
          "a.aa/a"
        ],
        "suffix": "=-ht~a?a-h$f.museu",
        "pump": [
          "/aa"
        ]
      },
      {
        "prefix": [
          "a.aa/a"
        ],
        "suffix": "//%a",
        "pump": [
          "/aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "s%(\\\\\\\\|\\\\%|[^%])*%(\\\\\\\\|\\\\%|[^%])*%[msixpodualngc]*",
    "inputs": [
      {
        "prefix": [
          "s%"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s%"
        ],
        "suffix": "s$%%$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s%%\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      },
      {
        "prefix": [
          "s%\\\\\\\\%"
        ],
        "suffix": "\\\\\\\\c\\\\t\\\\\\\b\t\n\t\t\b\b\b\r\b\rcgdZgnPPauAOiXhW\\\\\b\t\n\t\t\b\b\b\r\b\r\t",
        "pump": [
          "\\\\\\\\c\\"
        ]
      },
      {
        "prefix": [
          "s%"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s%"
        ],
        "suffix": "%s$",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "s%\u0000"
        ],
        "suffix": "",
        "pump": [
          "\\\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(!--|[a-z]+(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^ >]+)?)*\\s*>)",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          " a=\\x09\\x0e"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t>>",
        "pump": [
          "\ta=\ta"
        ]
      },
      {
        "prefix": [
          "as-_"
        ],
        "suffix": "",
        "pump": [
          "s=\u0000s-_"
        ]
      },
      {
        "prefix": [
          "z .z=!"
        ],
        "suffix": "\t\r\rj=\r\t\r\rj=\r\r\t\t\t\t\nqjfovppcpbdkiumsqoayv\t\nqjfovppcpbdkiumsqoayvqigpwbknutmupjyzshcennps\n",
        "pump": [
          "\t\r\rj=\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "require\\(['\"](..?\\/)+(utils|core|constants)['\"]\\)",
    "inputs": [
      {
        "prefix": [
          "require('!/"
        ],
        "suffix": "",
        "pump": [
          "v////"
        ]
      },
      {
        "prefix": [
          "require(\""
        ],
        "suffix": "c",
        "pump": [
          "a//a/"
        ]
      },
      {
        "prefix": [
          "require\"\u0000/\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          "require('\"///\"/\"//\"/r//\"/r"
        ],
        "suffix": "//\"/r//\"/o//\"/////\"/r//\"/o//\"///\"/\"//\"/r//\"/\"//\"/r//\"/o/",
        "pump": [
          "//\"/r//\"/o//\"///"
        ]
      },
      {
        "prefix": [
          "require('r/"
        ],
        "suffix": "",
        "pump": [
          "v////"
        ]
      },
      {
        "prefix": [
          "require(\""
        ],
        "suffix": "an",
        "pump": [
          "a//a/"
        ]
      },
      {
        "prefix": [
          "require\"\u0000/\u0000"
        ],
        "suffix": "",
        "pump": [
          "//\u0000/\u0000"
        ]
      },
      {
        "prefix": [
          "require('\""
        ],
        "suffix": "/////////////////s//////s/\"//\"/\"////",
        "pump": [
          "////////"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^no[_-](\\w+(?:[-_]\\w+)*)$",
    "inputs": [
      {
        "prefix": [
          "no_0"
        ],
        "suffix": "!",
        "pump": [
          "_0_0"
        ]
      },
      {
        "prefix": [
          "no-a"
        ],
        "suffix": "--",
        "pump": [
          "-a_a"
        ]
      },
      {
        "prefix": [
          "no-a_gOon___3VzhGys"
        ],
        "suffix": "_C_no_o__C_no_o_L9CO09CWaL9CO099CWaB__L9CO09CWaBjPhulPc-",
        "pump": [
          "_C_no_o_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s+((?:(?:CROSS|INNER|OUTER|LEFT|RIGHT)?\\s+)*?JOIN)\\s+",
    "inputs": [
      {
        "prefix": [
          "\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "\t\t"
        ],
        "suffix": "O",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "sss"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "J"
        ],
        "suffix": "\r\r\t\t\r\r\t\t\r\n\r\n\n\t\t\t",
        "pump": [
          "\r\r\t\t"
        ]
      },
      {
        "prefix": [
          "\\x09"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "\t\t"
        ],
        "suffix": "\tJ\t\tIN",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "ss"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t  \r\t  \r \t    \t\r",
        "pump": [
          "\t  \r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\r\\n)?\\s)*((?:[^:]+)|(?:\\[[^\\]]+\\]))(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ":",
        "pump": [
          "\\x0d\\x0a\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0\t:",
        "pump": [
          "\r\n\t\r\n\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n \r\n\n \r\n\r\n \r\r\r\t\r\t \t\n\t \n\t\n\t\r  \r\n\r\n\n \r\n\t\t\r \t\r\r\r\n:",
        "pump": [
          "\n \r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([^\\s\\/<>]+)((?:\\s+[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*|\\/)>))",
    "inputs": [
      {
        "prefix": [
          "<@"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "DO?\"-]'-]?\"-]/--",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\"?lGx;\nWmRML\bMu35\tT7\t6d7oZ\rR$^m:T^zu`Kb\":<}\r%_+\b_uijs=!PIO\r$*@$VF"
        ],
        "suffix": "\no\bk{\n\no\bk{\nwP",
        "pump": [
          "\no\bk{\n"
        ]
      },
      {
        "prefix": [
          "<@"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09!"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "C>a]-<]-a\"\t]]']-/\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "G<"
        ],
        "suffix": "n.\t\nn.\t\n4`8w%0g?kH])]# VM]\r\n:\"\n?c",
        "pump": [
          "n.\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[^\\s]+(?:\\s*,\\s*[^\\s]+)*[^\\s]+\\s+from\\s+.+",
    "inputs": [
      {
        "prefix": [
          "\\x00"
        ],
        "suffix": "",
        "pump": [
          ",-,-"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t,aa,\tfro",
        "pump": [
          "\t,a,\t,a"
        ]
      },
      {
        "prefix": [
          "\u0000,\u0000"
        ],
        "suffix": "",
        "pump": [
          ",\u0000,\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+",
    "inputs": [
      {
        "prefix": [
          "vertex 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vertex\t+0"
        ],
        "suffix": "0.E",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vertexs00E00"
        ],
        "suffix": "",
        "pump": [
          "00E00"
        ]
      },
      {
        "prefix": [
          "vertex 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vertex\t+0"
        ],
        "suffix": "E0+.0E",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "vertexs00\u0000"
        ],
        "suffix": "",
        "pump": [
          "00\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s*script[^>]*>((.|\\s)*?)<\\\\?\\/\\s*script\\s*>",
    "inputs": [
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "<\\/s",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "x\n#N]g<\rf<\rscriptcriptfx\n#N]g<script>;"
        ],
        "suffix": "\t\n\t\r\t\t\t\n\t\r\t\t\b=;|>g<\rscript}<{?@\b>;|>>~;{<{~;{:?|\t\n\t\r\t\t\b=;|>\b>;|>>~;{<{",
        "pump": [
          "\t\n\t\r\t\t"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "ipt<\\/sc",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<script>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "><script><\t \tt \t\n"
        ],
        "suffix": "\t  \t\t  \t  \t\r",
        "pump": [
          "\t  \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([ \\t]*)\\/\\/-?\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/-?\\s*endbower)",
    "inputs": [
      {
        "prefix": [
          "//-bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//-bower"
        ],
        "suffix": " ",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "//-bower"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "//-bower"
        ],
        "suffix": "-\n",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z]+\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x00",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "A"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "AARAAARARBAARARBCYj",
        "pump": [
          "AARA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "mxios\t0._0"
        ],
        "suffix": "0._",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "mxios/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "mxios\t0._0"
        ],
        "suffix": "M",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "mxios/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "either\\s+(?:[A-Z0-9_]+\\s*,?\\s*(?:or)?\\s*)+",
    "inputs": [
      {
        "prefix": [
          "either\t0"
        ],
        "suffix": "\tr",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "eithers00A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          "either\t0"
        ],
        "suffix": "eit",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "eithers0A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(x+x+)+y",
    "inputs": [
      {
        "prefix": [
          "xx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "yx",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          "xxxxx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xxxxxxxxxxxxxxxxxxx",
        "pump": [
          "xxxx"
        ]
      },
      {
        "prefix": [
          "xx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "xx"
        ]
      },
      {
        "prefix": [
          "xxxx"
        ],
        "suffix": "",
        "pump": [
          "xxx"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xxxxxxxxxxxxxxxxxx",
        "pump": [
          "xxxx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^/*(\\w+)\\/(\\w+)\\?{0,1}(\\w*\\={1}(\\w|\\.)+\\&{0,1})*$",
    "inputs": [
      {
        "prefix": [
          "a/0"
        ],
        "suffix": "!",
        "pump": [
          "=.0=."
        ]
      },
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "a.&&",
        "pump": [
          "a=.a"
        ]
      },
      {
        "prefix": [
          "w/="
        ],
        "suffix": "",
        "pump": [
          "w="
        ]
      },
      {
        "prefix": [
          "r/W3638062343743851"
        ],
        "suffix": "56642247196=56642247196=7743036380623437438580923355156642247=",
        "pump": [
          "56642247196="
        ]
      },
      {
        "prefix": [
          "a/0"
        ],
        "suffix": "!",
        "pump": [
          "=.0=."
        ]
      },
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "a.&.",
        "pump": [
          "a=.a"
        ]
      },
      {
        "prefix": [
          "e/"
        ],
        "suffix": "16F2F2g2=.HIXCQOEF2g2=.HIXCQOESVUCLMIFFJQX/",
        "pump": [
          "16F2F2g2=."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[CDATA\\[((.|\\n|\\r)*)\\]\\]$",
    "inputs": [
      {
        "prefix": [
          "[CDATA["
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "[CDATA["
        ],
        "suffix": "ATA",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "imports: \\[(.|\\s)*Test3Module(.|\\s)*\\]",
    "inputs": [
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "mpo",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "imports: ["
        ],
        "suffix": "m",
        "pump": [
          "\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(\\d{4}-\\d{2}-\\d{2}.*\\n\\d{8}.*(?:\\n *\\[\\d+\\].*)+)",
    "inputs": [
      {
        "prefix": [
          "\n0000-00-00\n00000000"
        ],
        "suffix": "a",
        "pump": [
          "\n[0]\n[0]"
        ]
      },
      {
        "prefix": [
          "\n0000-00-00\n00000000"
        ],
        "suffix": "a",
        "pump": [
          "\n[0]\n[0]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n +at .+)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n at a\n at a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\n at a\n at a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\d+[\\ ]+(\\w+)+(\\s+)$",
    "inputs": [
      {
        "prefix": [
          "0 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0 a"
        ],
        "suffix": " a\ta",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "[7 "
        ],
        "suffix": "QXBXQXBX8H2i6fZjkV",
        "pump": [
          "QXBX"
        ]
      },
      {
        "prefix": [
          "0 0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0 a"
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "d www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "5 "
        ],
        "suffix": "TZ82TZ829922633966",
        "pump": [
          "TZ82"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*this\\.\\$\\w+\\s*=(.|\\s)*?;",
    "inputs": [
      {
        "prefix": [
          "this.$a="
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "this.$a="
        ],
        "suffix": "\tthis",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "this.$w=@this.$w=this.$w=@this.$w=@ \t\n\t\t\n \n"
        ],
        "suffix": " \t \t \t \t\n\r\r\n",
        "pump": [
          " \t \t"
        ]
      },
      {
        "prefix": [
          "this.$t="
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "this.$a="
        ],
        "suffix": "is.th",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          ";this.$b=this.$b=\n\t\r"
        ],
        "suffix": " \r \r \t \r \r \t\t\n\t\t\n\t\r\t\t\n",
        "pump": [
          " \r \r \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\n|\\r)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\[\\s*'((?:\\\\'|.)*?)'\\s*\\]",
    "inputs": [
      {
        "prefix": [
          "['"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "['"
        ],
        "suffix": "[",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "'\\'\\'\\'\\'\\'\\\\'\\'\\'\\'*\\'\\'\\1746C00ef978f8F0C61eD1fA78febcc87ec0294F2DEF75eDf216A009A4EEAA18447C4",
        "pump": [
          "'\\'\\'\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[^\\r\\n]*(?:\\r|\\n|\\r\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a\na",
        "pump": [
          "\r\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\r\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^{}]+\\s*\\{[^{}]*\\}\\s*)+$",
    "inputs": [
      {
        "prefix": [
          "~{}"
        ],
        "suffix": "{",
        "pump": [
          "!\\x09{}"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a\t{}"
        ]
      },
      {
        "prefix": [
          "TpX\t  \n\r\t \r\n\n\r\n\t\n  \r\r\n\t  \n\r\n\t\n\t  \n\r\t \r\n\n\r\n\t\n  \r\r\n\t "
        ],
        "suffix": "    \n\t{}    \n\t{}\t \r\n\n\r\n\t\n  \r\ri",
        "pump": [
          "    \n\t{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "({(description|image|title):image[1-5](\\|\\|(.+))*})",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "[^\\x00-\\xff](((.*)*)*x)",
    "inputs": [
      {
        "prefix": [
          "\\x7f"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "Ā"
        ],
        "suffix": "Ā",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\\x7f"
        ],
        "suffix": "",
        "pump": [
          "y"
        ]
      },
      {
        "prefix": [
          "Ā"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*[^\\[]\\S+\\s*(\\S+=\\S+\\s*)*$",
    "inputs": [
      {
        "prefix": [
          " ["
        ],
        "suffix": "=\\x09!",
        "pump": [
          "\\x00====>"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "[\ta\t",
        "pump": [
          "a=a"
        ]
      },
      {
        "prefix": [
          "nqbJp_/jzT9=%YJ)9eQP'"
        ],
        "suffix": "k=TjB\\|=k=TjB\\|=T){E9&\t{",
        "pump": [
          "k=TjB\\|="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$(?:\\\\[\\\\\\$]|[^\\$])*\\$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "$$a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "a",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\{\b{}\b~}>}=@<;~?}<:=>\b>=\b=<@|>",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*\\/\\/.*)*\\s*return isBindFast[^:]+:\\s*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "nd\t/",
        "pump": [
          "\t//\t"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "\n\t\n\n\n\r\n"
        ],
        "suffix": "////\t\n//////\t\n////)\t\t\t\t\n\n \n\r\t\t\r\r\r \t\t\n\t\n\r\r\r\t\r\r\r\t\t \n\t\t\t  \n\r\n\n",
        "pump": [
          "////\t\n//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x09//"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "sB:a/r",
        "pump": [
          "\t/////"
        ]
      },
      {
        "prefix": [
          "//"
        ],
        "suffix": "",
        "pump": [
          "////"
        ]
      },
      {
        "prefix": [
          "////r//r"
        ],
        "suffix": "//// ///// ///return isBdFisBi|:<;=$]]{_// aFdn.",
        "pump": [
          "//// /"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s+|#.*)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "#s"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "dolfin\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "dolfin/0._0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dolfin/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "dolfin/0._0"
        ],
        "suffix": "id",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dolfin/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(.|\\r|\\n)*?\\r?\\n\\r?\\n",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra\n",
        "pump": [
          "a\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "$"
        ]
      },
      {
        "prefix": [
          "-0.0"
        ],
        "suffix": "0..",
        "pump": [
          "a.00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((\\r\\n)+(\\s)?)+",
    "inputs": [
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "\t\t",
        "pump": [
          "\r\n\n"
        ]
      },
      {
        "prefix": [
          "\r\n"
        ],
        "suffix": "\ta\r",
        "pump": [
          "\r\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^  Front Left: (Playback |Capture )?(\\d+)(\\s+|\\[[^\\]]+\\])*( Capture (\\d+))?",
    "inputs": [
      {
        "prefix": [
          "  Front Left: 0\t"
        ],
        "suffix": "p",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "  Front Left: dss"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "width=\"([^\"]+)*\"",
    "inputs": [
      {
        "prefix": [
          "width=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "width=\"a"
        ],
        "suffix": "=\"\"\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "width=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "width=\""
        ],
        "suffix": "`3P}`3P}Z\rcg]CK=?2",
        "pump": [
          "`3P}"
        ]
      },
      {
        "prefix": [
          "width=\""
        ],
        "suffix": "",
        "pump": [
          "#!"
        ]
      },
      {
        "prefix": [
          "width=\"a"
        ],
        "suffix": "i",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "width=\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "width=\""
        ],
        "suffix": "~{?k~{?k<.xJsX=4+S",
        "pump": [
          "~{?k"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "class FooView extends Backbone.View(.|\\n)*app\\/scripts\\/templates\\/foo.ejs",
    "inputs": [
      {
        "prefix": [
          "class FooView extends Backbone!View"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "class FooView extends BackboneaView"
        ],
        "suffix": "eVie",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "class FooView extends BackbonecView"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "class FooView extends BackboneaView"
        ],
        "suffix": "nec",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "`(?:\\\\`|\\\\?[^`])*`",
    "inputs": [
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "``a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "`"
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "`\\\\\\\\A86baD66dFAea0ceDFc\\\\A86baD66d"
        ],
        "suffix": "\\\\A86bE\\\\\\\\\\A86bE\\\\\\A86baD66dFAea0c86baD66dF",
        "pump": [
          "\\\\A86bE\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^!:\\s]+)*\\s*:\\s*(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";\\x00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          ";\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "%34H%34Hx.ED;zbD1-^\r)",
        "pump": [
          "%34H"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([A-Z][a-z]*)(\\d+-?\\d*)?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "A00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-A0a",
        "pump": [
          "A00"
        ]
      },
      {
        "prefix": [
          "AAdd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dAdd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "A5899E3622A5899E36222S6222SJBiyEdfwTFWgkaYdMED68CEdLTSSYFOSHSMNCWROOOAMCFVEIVUCZCXKRXC9 ",
        "pump": [
          "A5899E3622"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\<span class=\\\"w2ui\\-marker\\\"\\>((.|\\n|\\r)*)\\<\\/span\\>",
    "inputs": [
      {
        "prefix": [
          "<span class=\"w2ui-marker\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<span class=\"w2ui-marker\">"
        ],
        "suffix": "-m\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<span class=\"w2ui-marker\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<span class=\"w2ui-marker\">"
        ],
        "suffix": "e\n",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Registrar:\\n((.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Registrar:\\x0a!\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Registrar:\n"
        ],
        "suffix": "a",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "Registrar:\\x0aR\\x0a"
        ],
        "suffix": "",
        "pump": [
          "!\\x0a!\\x0a"
        ]
      },
      {
        "prefix": [
          "Registrar:\n"
        ],
        "suffix": "ar\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([ ]{0,3}(\\S.*?|)\\n)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          " a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " ",
        "pump": [
          " a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:global\\s+)?)((?:\\w+\\.?)+)(?:\\s+as\\s+(\\w+))?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "as\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "lob\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ww"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9\\.\\s\\-\\_\\/\\\\\\,\\=]+)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a-zAa-zA-Z0-9\\.\\s\\$",
        "pump": [
          "a-zA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "w0sbrowser/0._0"
        ],
        "suffix": "00.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "w0sbrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "w0sbrowser/0._0"
        ],
        "suffix": "e",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "w0sbrowser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-z]([a-z0-9-]?[a-z0-9]+))*):ppn:(\\d+\\d*[Xx]?)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "a00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "pp:ppn:",
        "pump": [
          "aaa"
        ]
      },
      {
        "prefix": [
          "a0a"
        ],
        "suffix": "",
        "pump": [
          "a0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ivkpivkpayjzmdzdfdcy",
        "pump": [
          "ivkp"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<([^>]|\\n)*>",
    "inputs": [
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n>>",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<<<<<<<<<<<"
        ],
        "suffix": "<\n\r\n\n\n<\n\r\n\n\n\r\n\r\n\n \t\n<",
        "pump": [
          "<\n\r\n\n\n"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "\n>a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<<\t\n "
        ],
        "suffix": "\n\t\n \n\n\n\t\n \n\n  \r\n\r\r\n\r\n  \r\n\r\r\n\n",
        "pump": [
          "\n\t\n \n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\S+)\\s+(\\S+\\s*)+",
    "inputs": [
      {
        "prefix": [
          "a\ta"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "SsSS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*Uptime \\d+s?\\s*\\n\\n(Process\\s+[^\\s]+\\s+.*\\n)+",
    "inputs": [
      {
        "prefix": [
          "Uptime 0s\n\n"
        ],
        "suffix": "i",
        "pump": [
          "Process\ta\t\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*\\[([\\w_-]+)\\s*=\\s*(\"([^\\\\\"]*(\\\\.)*)*\"|'([^\\\\']*(\\\\.)*)*'|[^\\[\\]]*)\\]",
    "inputs": [
      {
        "prefix": [
          "[a ='"
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "[a=\""
        ],
        "suffix": "\\\"'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "[a ='"
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "[a=\""
        ],
        "suffix": "\\\t'",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0[l='"
        ],
        "suffix": "QM{[QM{[ll=QM{QM{]",
        "pump": [
          "QM{["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$(([a-z0-9]{2,})(?:[._][a-z0-9]+|\\[\\s*['\"](?:[^\\/]*?)['\"]\\s*\\])*)",
    "inputs": [
      {
        "prefix": [
          "$aa"
        ],
        "suffix": "$a",
        "pump": [
          ".a[\"\"][\"\"]"
        ]
      },
      {
        "prefix": [
          "$aa"
        ],
        "suffix": "a/$aa[",
        "pump": [
          ".a[\"\"][\"\"]"
        ]
      },
      {
        "prefix": [
          "$a"
        ],
        "suffix": "$",
        "pump": [
          ".a[\"\"][\"\"]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(snmp-server host \\S+( vrf \\S+)?( version (1|2c|3))?)\\s+\\S+((\\s+\\S*)*)\\s*",
    "inputs": [
      {
        "prefix": [
          "snmp-server host a\ta\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "snmp-server host SsSs"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<meta name=\"description\"([^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<meta name=\"description\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"description\""
        ],
        "suffix": "p",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<meta name=\"descript"
        ],
        "suffix": "ion\"ion\"Jl(a!\rN<^\\\t.Bm",
        "pump": [
          "ion\""
        ]
      },
      {
        "prefix": [
          "<meta name=\"description\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"description\""
        ],
        "suffix": " nam",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "`<meta name=\"descript"
        ],
        "suffix": "ion\"ion\"bzV&`{x%Rmn52/",
        "pump": [
          "ion\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^.*<test(suite|case).* name=\\\"([^\\\"]+)\\\"(.* classname=\\\"([^\\\"]+)\\\")*.* time=\\\"([0-9.]+)\\\"",
    "inputs": [
      {
        "prefix": [
          "<testsuite< name=\"<\""
        ],
        "suffix": "",
        "pump": [
          " classname=\" \" name=\" classname=\" classname=\"<\""
        ]
      },
      {
        "prefix": [
          "<testcase name=\"a\""
        ],
        "suffix": "u name=\" <testcas",
        "pump": [
          " classname=\"a\" classname=\"a\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((\\s*)(@charset)\\s+([^;]+;\\s*))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "s;@charset",
        "pump": [
          "\t@charset\t\ta;"
        ]
      },
      {
        "prefix": [
          "@charsets\u0000;@charsets\u0000;s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s@charsets\u0000;s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(unix)\\s?([\\w\\.]+)*",
    "inputs": [
      {
        "prefix": [
          "unix\ta"
        ],
        "suffix": "un\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "unix.w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "unix\ta"
        ],
        "suffix": "iun$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "unix.."
        ],
        "suffix": "\u0000",
        "pump": [
          "w."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"((?:\\\\[\\x00-\\x7f]|[^\\x00-\\x08\\x0a-\\x1f\\x7f\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\u0000",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "\"\\4\\819d8E461\\\\168220189\\04136"
        ],
        "suffix": "8\\\\\\\\\\8\\\\\\\\\\035028412038004672980490930554612",
        "pump": [
          "8\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\7\\<\\x]\\\\7\\<\\x]\\*[\\x?\\)*\\xx:1x~{?|{x|!]}x[+:0;\\?&#)x[`*<~<@~?|=;[\\@<_-;:",
        "pump": [
          "\\7\\<\\x]\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\{((.|\\n)*)\\}\\s*$",
    "inputs": [
      {
        "prefix": [
          "{"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "{"
        ],
        "suffix": "}a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(.*) (.*) (.*) (.*):(.*):(.*)\\.(.*) (.*)\\] \\[(.*):(.*)\\] \\[pid (.*)\\] .*\\[client (.*):(.*)\\] (.*)(, referer: (.*))*$",
    "inputs": [
      {
        "prefix": [
          "[   ::. ] [:] [pid ] [client :] "
        ],
        "suffix": ", refere",
        "pump": [
          ", referer: , referer: "
        ]
      },
      {
        "prefix": [
          "  (     , referer: "
        ],
        "suffix": "",
        "pump": [
          ", referer: , referer: "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:\\\\?[\\s\\S])*?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ":\\\\?I\\?\\:\\\\?I\\?\\?]):s\\S(\t\\*a\\?IBayWpp\r\r\n\r\n\n\t\r\n\n\t\n\\\\?S\\\t\n\r\b\t\r\r\b:\\\\?I",
        "pump": [
          ":\\\\?I\\?\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\\\.|[^\"])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\"\"",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\\a\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*([> ])\\s*)|(#|\\.)?((?:\\\\.|[\\w-])+)|\\[\\s*([\\w-]+)\\s*(.?=)?\\s*(\"(?:\\\\.|[^\"])+\"|'(?:\\\\.|[^'])+'|(?:\\\\.|[^\\]])*)\\s*\\]",
    "inputs": [
      {
        "prefix": [
          "[-"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "[a\""
        ],
        "suffix": "\t]a\"]a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "[X\"Y[8n![@\\(\""
        ],
        "suffix": "\\+\\?[\\7\\\\+\\?[\\7\\>?[|\\\\)(+B))()\\*.F(>**[s\"\\\\|()s)3)'",
        "pump": [
          "\\+\\?[\\7\\"
        ]
      },
      {
        "prefix": [
          "[A"
        ],
        "suffix": "",
        "pump": [
          "\\^"
        ]
      },
      {
        "prefix": [
          "[a\""
        ],
        "suffix": " a a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "[yyG"
        ],
        "suffix": "7\\7[\\7\\G7\\7\\7[\\7\\G7\\7[\\7\\}%!P!Pqu{<NRF~$LO;%I.{<yyG7\\7",
        "pump": [
          "7\\7[\\7\\G7\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\",
        "pump": [
          ".a['']['']"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a[",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ">Occupation(\\\\(s\\\\)|s)<?((.|\\n)*?)</tr>",
    "inputs": [
      {
        "prefix": [
          ">Occupations"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">Occupations<"
        ],
        "suffix": "io",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ">Occupations"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          ">Occupations<"
        ],
        "suffix": "tr",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\s,](?:\"(?:\\\\.|[^\"])+\"|'(?:\\\\.|[^'])+'|[^,])*)",
    "inputs": [
      {
        "prefix": [
          "-\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ",\",',",
        "pump": [
          "\"a\""
        ]
      },
      {
        "prefix": [
          "\u0000'."
        ],
        "suffix": "",
        "pump": [
          ".''."
        ]
      },
      {
        "prefix": [
          "-\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\\,\",',",
        "pump": [
          "\"a\""
        ]
      },
      {
        "prefix": [
          "\u0000'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".''\u0000"
        ]
      },
      {
        "prefix": [
          ".'\""
        ],
        "suffix": "\\\\:?\\^\\.\\\\:?\\^\\.\\@G>)\\s,\\\\.\\@G>:\\sf4f4E3",
        "pump": [
          "\\\\:?\\^\\."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^trusty-|-extension(-[\\d\\.a-z]+|-[a-z\\d]+)*$",
    "inputs": [
      {
        "prefix": [
          "-extension"
        ],
        "suffix": "!",
        "pump": [
          "-0"
        ]
      },
      {
        "prefix": [
          "-extension"
        ],
        "suffix": "-e-",
        "pump": [
          "-a-a"
        ]
      },
      {
        "prefix": [
          "-extension-.."
        ],
        "suffix": "\u0000",
        "pump": [
          "d."
        ]
      },
      {
        "prefix": [
          "--extensio"
        ],
        "suffix": "n-e-v-x-n-e-v-x-b-on-ex-b-u747376829690967320825065362511728088-",
        "pump": [
          "n-e-v-x-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "CDN\\(((\\([^)]+\\)|[^)])+)\\)",
    "inputs": [
      {
        "prefix": [
          "CDN("
        ],
        "suffix": "D",
        "pump": [
          "(a)((a)"
        ]
      },
      {
        "prefix": [
          "CDN\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "CDN("
        ],
        "suffix": "DN",
        "pump": [
          "(a)((a)"
        ]
      },
      {
        "prefix": [
          "CDN\u0000\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([0-9a-zA-Z-]+\\.{0,1})*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "\u0000\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0-9a0-9a-z-9a0A-Z-\t",
        "pump": [
          "0-9a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "8zP08zP0-9a-zA-Z-Db'",
        "pump": [
          "8zP0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "document\\.write\\('((\\\\.|[^\\'])*)'\\)",
    "inputs": [
      {
        "prefix": [
          "document.write('"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "document.write('"
        ],
        "suffix": "d\\'",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "document\u0000write'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          "document.write('"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "document.write('"
        ],
        "suffix": "e(",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "document\u0000write'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*@charset [^;]+;\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "h",
        "pump": [
          "\t@charset a;\t"
        ]
      },
      {
        "prefix": [
          "@charset \u0000;@charset \u0000;s"
        ],
        "suffix": "\u0000",
        "pump": [
          "s@charset \u0000;s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)",
    "inputs": [
      {
        "prefix": [
          "(*"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "a(a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "]%Q%]%Q%C_Lbv}(m^06_$MMah,)Hm=Cj{",
        "pump": [
          "]%Q%"
        ]
      },
      {
        "prefix": [
          "(~"
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": "a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "Z_pVZ_pVqu4\bW\b~3\bW",
        "pump": [
          "Z_pV"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s|\\t)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s|\\t)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\(*\"((.|\\\\|\\\")*?)\" *",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\",
        "pump": [
          "\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "too many redirects(\\n|.)*\\/a\\?b=x(\\n|.)*\\/b\\?b=x",
    "inputs": [
      {
        "prefix": [
          "too many redirects"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "too many redirects"
        ],
        "suffix": "r",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "too many redirects"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "too many redirects"
        ],
        "suffix": "ed/a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\[]*)(\\[(\\d+)+\\])?",
    "inputs": [
      {
        "prefix": [
          "[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "0[[",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "902390237500130156",
        "pump": [
          "9023"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "[0"
        ],
        "suffix": "a",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "000000000000000000",
        "pump": [
          "0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "lg[e;\\s\\/-]+(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "lg\ta"
        ],
        "suffix": "lga\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lg-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "lg\ta"
        ],
        "suffix": "e$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "lg-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\r",
        "pump": [
          "\r\n|a||"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "",
        "pump": [
          "\u0000\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na",
        "pump": [
          "\r\n|a|\r\n|a|"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\/\\/][\\/\\*]\\s*TODO:\\s*(?:\\(([^:]*)\\))*\\s*:?\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "/*TODO:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "/*TODO:"
        ],
        "suffix": "a",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(",
    "inputs": [
      {
        "prefix": [
          ".-"
        ],
        "suffix": "",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "a\t",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "1\\e1\\eaF\\e1\\e1\\eaF\\e1\\eaFustRgIX\\eapPGDIvCdjIEsRG\\e1\\eaFustRgIXpvCmiSH",
        "pump": [
          "1\\e1\\eaF\\e"
        ]
      },
      {
        "prefix": [
          ".-"
        ],
        "suffix": "",
        "pump": [
          "\\00"
        ]
      },
      {
        "prefix": [
          "#"
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "#\\"
        ],
        "suffix": "99\\99999\\999\\99999\\99A\\AA9AA9999\\9999A\\A",
        "pump": [
          "99\\99999\\9"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\r\\n)?\\s)*([^:]+)(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ":",
        "pump": [
          "\\x0d\\x0a\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0::",
        "pump": [
          "\r\n\t\r\n\t"
        ]
      },
      {
        "prefix": [
          "\r\r\n\r\r\r\r\r\r\r\r\r"
        ],
        "suffix": "\r\r\r\r\n\r\r\n\r\n\r\r\r\r\r:",
        "pump": [
          "\r\r\r\r\n\r\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s{2,}|\\t)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "\tsss"
        ],
        "suffix": "\u0000",
        "pump": [
          "sss"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\na\n",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "\tsss"
        ],
        "suffix": "\u0000",
        "pump": [
          "sss"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\ts"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z]+)+\\s+(\\d+\\.+\\d+.\\d.+\\d)+\\s+([a-zA-z]+)+\\s+(\\d+)+\\s+(\\d+)+\\s+([a-zA-Z]+\\d+)$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "asd\u0000d\u0000d\u0000dsAAa"
        ],
        "suffix": "",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "g\r1.01.0.0\tg\r"
        ],
        "suffix": "174417444736571740",
        "pump": [
          "1744"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([=-]*)([^:=]+:[^\\(\\s]+)(\\(([^\\)]+)\\))?\\s*(?:(\\((<.+>)\\))*)\\s*$",
    "inputs": [
      {
        "prefix": [
          "-!:\\x00"
        ],
        "suffix": "?",
        "pump": [
          "(<)>)(<>>)"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "=-)(=",
        "pump": [
          "(<a>)(<a>)"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000<\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "-!:>"
        ],
        "suffix": "?",
        "pump": [
          "(<)>)(<>>)"
        ]
      },
      {
        "prefix": [
          "a:a"
        ],
        "suffix": "<:):(=",
        "pump": [
          "(<a>)(<a>)"
        ]
      },
      {
        "prefix": [
          "\u0000:\u0000<\u0000"
        ],
        "suffix": "",
        "pump": [
          "><\u0000><\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "QStringList(?:[^\\w]+(?:.*?))+?$",
    "inputs": [
      {
        "prefix": [
          "QStringList$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      },
      {
        "prefix": [
          "QStringList$"
        ],
        "suffix": "a",
        "pump": [
          "$$"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})",
    "inputs": [
      {
        "prefix": [
          "={{{"
        ],
        "suffix": "",
        "pump": [
          "{}{"
        ]
      },
      {
        "prefix": [
          "={"
        ],
        "suffix": "}}a}{",
        "pump": [
          "{}{{}"
        ]
      },
      {
        "prefix": [
          "={{{"
        ],
        "suffix": "",
        "pump": [
          "{}{"
        ]
      },
      {
        "prefix": [
          "={"
        ],
        "suffix": "=",
        "pump": [
          "{}{{}"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s?(\\S+\\=\\S+;)*\\s(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!==;===;"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\t",
        "pump": [
          "a=a;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!==;===;"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\t",
        "pump": [
          "a=a;"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(<<<([-\\d]+ [^ ]+ (.+)?;)+>>>)+$",
    "inputs": [
      {
        "prefix": [
          "<<<0 ! ;"
        ],
        "suffix": "",
        "pump": [
          "0 ; ;- ; ;"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "<-;",
        "pump": [
          "<<<- a ;- a ;>>>"
        ]
      },
      {
        "prefix": [
          "<<<- \u0000 ;- \u0000 "
        ],
        "suffix": "",
        "pump": [
          ";- \u0000 ;- \u0000 "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)",
    "inputs": [
      {
        "prefix": [
          "function"
        ],
        "suffix": "",
        "pump": [
          "\\x09/*!*/"
        ]
      },
      {
        "prefix": [
          "function"
        ],
        "suffix": "n/*",
        "pump": [
          "\t/*a*/\t"
        ]
      },
      {
        "prefix": [
          "function"
        ],
        "suffix": "/*s*/\t \r/*s*/\t \r\r\r\n\n\r \n\t\t \r\r\r\n\t\r  \n \t\t\n  \r\r\n\t\t\r\t\t\t\n\n\t \n\t \t\r\n\n\t\n\n\n\r\t",
        "pump": [
          "/*s*/\t \r"
        ]
      },
      {
        "prefix": [
          "function"
        ],
        "suffix": "",
        "pump": [
          "\\x09/*!*/"
        ]
      },
      {
        "prefix": [
          "function"
        ],
        "suffix": "*a\tf",
        "pump": [
          "\t/*a*/\t"
        ]
      },
      {
        "prefix": [
          "ufunction"
        ],
        "suffix": "/*^*/ \n /*^*/ \n \r\t \n\n\n\r\r\n \t\r\t\n \r\t\t   \t \n\n\r\r\n  \r \n \t\t\t\r   \r \t\t \n\r\t\r\r",
        "pump": [
          "/*^*/ \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " (?:<%.*?%>|[^>])* ",
    "inputs": [
      {
        "prefix": [
          " "
        ],
        "suffix": "",
        "pump": [
          "<%<%%>"
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": ">% <>",
        "pump": [
          "<%<%%>"
        ]
      },
      {
        "prefix": [
          " <%%>"
        ],
        "suffix": "",
        "pump": [
          "<%<%%>"
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "",
        "pump": [
          "<%<%%>"
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": ">%< >",
        "pump": [
          "<%<%%>"
        ]
      },
      {
        "prefix": [
          " <%%>"
        ],
        "suffix": "",
        "pump": [
          "<%<%%>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<[a-zA-Z\\/](.|\\n)*?>",
    "inputs": [
      {
        "prefix": [
          "</"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "</"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^.*<head(\\s[^>]*)*>",
    "inputs": [
      {
        "prefix": [
          "<head"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<head"
        ],
        "suffix": "ea\t<h><h",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<heads"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "><head\n\b"
        ],
        "suffix": "\r\b\t\r\r\b\t\r\r\r\b\t\n\r\r\r\b\t\b\n\t",
        "pump": [
          "\r\b\t\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "task migrate: :environment do\\n((\\n|\\s*.*\\n)*)\\s+end",
    "inputs": [
      {
        "prefix": [
          "task migrate: :environment do\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "task migrate: :environment do\n"
        ],
        "suffix": "t",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "task migrate: :environment do"
        ],
        "suffix": "\n\n\n\t\n\n\n\t\n\t\n\n\ntask migrate: t d\n\t\n\n",
        "pump": [
          "\n\n\n\t"
        ]
      },
      {
        "prefix": [
          "task migrate: :environment do\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "task migrate: :environment do\n"
        ],
        "suffix": " d",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "etask migrate: :environment do"
        ],
        "suffix": "\n\n\n\n\n\n\n\n\t\t\t\n\n\t\n\n\n",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "if-[^=\\s>/]*(=[\"'{}][^\"']*[\"'{}])*",
    "inputs": [
      {
        "prefix": [
          "if-"
        ],
        "suffix": "i{\t{\"\t",
        "pump": [
          "=\"{={\""
        ]
      },
      {
        "prefix": [
          "if-=\""
        ],
        "suffix": "",
        "pump": [
          "\"\"=\""
        ]
      },
      {
        "prefix": [
          "if-"
        ],
        "suffix": "i{\ti",
        "pump": [
          "=\"{={\""
        ]
      },
      {
        "prefix": [
          "if-=\""
        ],
        "suffix": "",
        "pump": [
          "\"=\"\"=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(pgp_sym_(encrypt|decrypt))\\(((.|\\n)*?)\\)",
    "inputs": [
      {
        "prefix": [
          "pgp_sym_encrypt("
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "pgp_sym_decrypt("
        ],
        "suffix": "ec",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "pgp_sym_encrypt("
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "pgp_sym_decrypt("
        ],
        "suffix": "_",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "on((([A-Z]*[a-z]*)*?)[A-Z]+[a-z]+)=\"#([^ \"':]+)\"",
    "inputs": [
      {
        "prefix": [
          "on"
        ],
        "suffix": "",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "on"
        ],
        "suffix": "o",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "onAa=\"#\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          "oonAOkbI"
        ],
        "suffix": "ncfzncfzuHUUf",
        "pump": [
          "ncfz"
        ]
      },
      {
        "prefix": [
          "on"
        ],
        "suffix": "",
        "pump": [
          "a"
        ]
      },
      {
        "prefix": [
          "on"
        ],
        "suffix": "=\"o",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "onAa=\"#\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "onAaonAaZmqpxbklttoe",
        "pump": [
          "onAa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "%{((.*?:)*?.*?)}",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Za-z]+,?\\s?)+$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x00",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": ",\t\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "Aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ABAmABAmomlmuesrjd{",
        "pump": [
          "ABAm"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((?:Domain:.+\\n)(?:.+:.+\\n)+)\\n",
    "inputs": [
      {
        "prefix": [
          "Domain:!\\x0a\\x0a\\x00:\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          ";::\\x0a:::\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain:a\n"
        ],
        "suffix": "in\n",
        "pump": [
          "a:a\n"
        ]
      },
      {
        "prefix": [
          "Domain:D\\x0a\\x0a\\x00:\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          ";::\\x0a:::\\x0a"
        ]
      },
      {
        "prefix": [
          "Domain:a\n"
        ],
        "suffix": "i",
        "pump": [
          "a:a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<w:body>)((.|\\n)*?)(<w:sectPr)",
    "inputs": [
      {
        "prefix": [
          "<w:body>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<w:body>"
        ],
        "suffix": "ec",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<w:body>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<w:body>"
        ],
        "suffix": "d<w",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s+|[,:{}\\[\\]]|\"(\\\\[\"\\\\\\/bfnrtu]|[^\\x00-\\x1f\"\\\\]+)*\"|-?\\d+(\\.\\d*)?([eE][+-]?\\d+)?|true|false|null)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "0.,tr\"-0\"",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "truetrue?|true|fal",
        "pump": [
          "true"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script(.*?)>(.*?[\\r\\n])*?(.*?)(.*?[\\r\\n])*?<\\/script>",
    "inputs": [
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "</s",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "i>",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z][a-zA-Z0-9_]+)\\@((?:[a-zA-Z][a-zA-Z0-9\\-]*\\.)*[a-zA-Z][a-zA-Z0-9\\-]*)\\:((?:[A-Za-z0-9_\\-\\.]+\\/?)*)$",
    "inputs": [
      {
        "prefix": [
          "aa@a:"
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "aa@a:a"
        ],
        "suffix": "0.:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "rC@CW:"
        ],
        "suffix": ".zgB.zgBY3JSR9T0ib8\\",
        "pump": [
          ".zgB"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\n\\r|\\r\\n|\\r|\\n)[\\t\\s]*(?:\\n\\r|\\r\\n|\\r|\\n)+",
    "inputs": [
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\r\t",
        "pump": [
          "\n\r\n\r"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\r\ta",
        "pump": [
          "\n\r\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(:?#\\d+\\W+)(:?0x(?:(?:\\d|[abcdefABCDEF]){0,2})+)(:? +in +)(:?.+?)(:? .+)$",
    "inputs": [
      {
        "prefix": [
          ":#0!0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":#0$:0x"
        ],
        "suffix": "0 ",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "#dW0xAA"
        ],
        "suffix": "",
        "pump": [
          "dA"
        ]
      },
      {
        "prefix": [
          "#0?:0x"
        ],
        "suffix": "abcdabcdefABdefABCD",
        "pump": [
          "abcd"
        ]
      },
      {
        "prefix": [
          ":#0!0x"
        ],
        "suffix": "",
        "pump": [
          "A"
        ]
      },
      {
        "prefix": [
          ":#0$:0x"
        ],
        "suffix": "0 in ",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "#dW0xe"
        ],
        "suffix": "",
        "pump": [
          "de"
        ]
      },
      {
        "prefix": [
          ":#7:?0x"
        ],
        "suffix": "abcdabcdefABCDEF",
        "pump": [
          "abcd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((set +\\w+ +\\d+) +p(o(l(y(g(o(n)?)?)?)?)?)? +from +-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?\\,-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?( +to +-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?\\,-?\\d+(\\.\\d+)?([eE]?\\-?\\d+)?)+ +)",
    "inputs": [
      {
        "prefix": [
          "set a 0 p from -0,-0"
        ],
        "suffix": "m -0-",
        "pump": [
          " to 00,0"
        ]
      },
      {
        "prefix": [
          "set w d p from d,d to d,d to d"
        ],
        "suffix": "",
        "pump": [
          "Ed,d to d"
        ]
      },
      {
        "prefix": [
          "set a 0 p from -0,-0"
        ],
        "suffix": "m -0,-00.00",
        "pump": [
          " to 00,0"
        ]
      },
      {
        "prefix": [
          "set w d p from d,d to d,d to d,dd"
        ],
        "suffix": "",
        "pump": [
          "ed to d,dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\<|\\[|\\{)((?:\\w+|\\:|\\||\\.\\.\\.| (?:[0-9]+))+)(?:\\>|\\]|\\})",
    "inputs": [
      {
        "prefix": [
          "<|"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": "{",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "DPeiDPeiSShz5XoOcJ",
        "pump": [
          "DPei"
        ]
      },
      {
        "prefix": [
          "<|"
        ],
        "suffix": "",
        "pump": [
          "_0"
        ]
      },
      {
        "prefix": [
          "[a"
        ],
        "suffix": ".:a..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "&<"
        ],
        "suffix": "dNP2dNP2zv2uCJhv9",
        "pump": [
          "dNP2"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:'(\\\\\\\\|\\\\'|[^'])*')",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\'''",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "''"
        ],
        "suffix": "",
        "pump": [
          "\\'"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\\\\\\\\\\\\\\\\\\\\\\\\\\n\t\r\n\t\n\n\\\\\\\\.cg\b^\\\\71642895$O#t:m%pVs?@@><>@@aagrpxdj895$O#t:m%pV+",
        "pump": [
          "\\\\\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$",
    "inputs": [
      {
        "prefix": [
          "$"
        ],
        "suffix": "\\",
        "pump": [
          ".a['']['']"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0",
        "pump": [
          ".a['']['']"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "@param\\s+(&|[.]{3})?\\s*((?:\\\\?[^\\s\\[\\]\\|]+(?:\\[\\])*\\|?)+)\\s*(&|[.]{3})?(?:\\s*\\$([^\\s]+))?",
    "inputs": [
      {
        "prefix": [
          "@param\t\\a"
        ],
        "suffix": "ar\t.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "@param\t\\a"
        ],
        "suffix": "ar.\t$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(\\d+):)?(?:(\\d+)+:)?(\\d+(?:\\.\\d+)?)$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0854085459403699486",
        "pump": [
          "0854"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "352935297934099543",
        "pump": [
          "3529"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\u001b\\[.*?m)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "mƻ",
        "pump": [
          "ƻ[mƻ[m"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "mƻa",
        "pump": [
          "ƻ[mƻ[m"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(uniform|varying|in|out)[ \\t\\n\\r]+(float|int|bool|vec2|vec3|vec4|struct)([ \\t\\n\\r]+[^\\;]+[ \\t\\n\\r]*\\,*)+\\;",
    "inputs": [
      {
        "prefix": [
          "uniform float !"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09-"
        ]
      },
      {
        "prefix": [
          "in\tvec3"
        ],
        "suffix": "g\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "varying vec4"
        ],
        "suffix": " v   v  \n\n\t \r\n  \r",
        "pump": [
          " v  "
        ]
      },
      {
        "prefix": [
          "uniform float w"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09-"
        ]
      },
      {
        "prefix": [
          "in\tvec3"
        ],
        "suffix": "c;unif",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "bin\nboo"
        ],
        "suffix": "l \n l \n \r\t\r\r\r\t\r\n\n",
        "pump": [
          "l \n "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "```package\\s+((.|\\s)+?)\\s*```",
    "inputs": [
      {
        "prefix": [
          "```package !"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```package\t"
        ],
        "suffix": "k",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```packages\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "```packag"
        ],
        "suffix": "e\t\te\t\te\t\te\t\tg\t\tg\t\tgacka\tka\tgegak\t",
        "pump": [
          "e\t\te\t\t"
        ]
      },
      {
        "prefix": [
          "```package a"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "```package\t"
        ],
        "suffix": "ack",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "```packages\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "````package JCWNIAAEJPHNQ"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\n\t\b\n\b\nZPDIGYXKOWka JCWNIAAEJPHNQYKRETVDN\n\n\b\n\b\t\n\t\b\n\b\nZ",
        "pump": [
          "\t\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z_][a-z0-9_]*(?:\\[(?:\\d*|[a-z0-9_]+)\\])*$",
    "inputs": [
      {
        "prefix": [
          "_"
        ],
        "suffix": "!",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "0[[",
        "pump": [
          "[0]"
        ]
      },
      {
        "prefix": [
          "__"
        ],
        "suffix": "\u0000",
        "pump": [
          "d_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^==\\s*NAME\\s*==\\n(?:[\\w:]+)(?: - (.*))*",
    "inputs": [
      {
        "prefix": [
          "==NAME==\na"
        ],
        "suffix": "a",
        "pump": [
          " -  - "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((([a-z0-9][a-z0-9\\-]*[a-z0-9])|[a-z0-9]+)\\.)*([a-z]+|xn\\-\\-[a-z0-9]+)\\.?$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "xn."
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "xn-",
        "pump": [
          "aa.aa."
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "00\u00000"
        ]
      },
      {
        "prefix": [
          "hxx.dxn.axx.xxx.d"
        ],
        "suffix": "xn.axx.xxx.xx.xn.axx.xxx.xx.dxn.axx.x-",
        "pump": [
          "xn.axx.xxx.xx."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\w+)=(\\S+|\"(?:[^\\\\\"]+|\\\\\"|\\\\)*\")",
    "inputs": [
      {
        "prefix": [
          "a=\"a"
        ],
        "suffix": "\ta",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Z][a-zA-Z\\d$]+)+$",
    "inputs": [
      {
        "prefix": [
          "A$"
        ],
        "suffix": "!",
        "pump": [
          "A$A$"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "AaAa"
        ]
      },
      {
        "prefix": [
          "BcC6bA4"
        ],
        "suffix": "B9FfEDB9FfEDEFC47E5dEbFDBcf=",
        "pump": [
          "B9FfED"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?|ftp):\\/\\/(-\\.)?([^\\s\\/?\\.#-]+\\.?)+(\\/[^\\s]*)?[^\\s\\.,]$",
    "inputs": [
      {
        "prefix": [
          "https://0"
        ],
        "suffix": "",
        "pump": [
          "0,"
        ]
      },
      {
        "prefix": [
          "ftp://a"
        ],
        "suffix": "-.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ftp://\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "0\u0000"
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "sNg>sNg>GMTWkd5zd?8",
        "pump": [
          "sNg>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(https?|ftp):\\/\\/(-\\.)?([^\\s\\/?\\.#]+\\.?)+(\\/[^\\s]*)?[^\\s\\.,]$",
    "inputs": [
      {
        "prefix": [
          "https://0"
        ],
        "suffix": "",
        "pump": [
          "0,"
        ]
      },
      {
        "prefix": [
          "ftp://a"
        ],
        "suffix": "tps..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "ftp://\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "0\u0000"
        ]
      },
      {
        "prefix": [
          "ftp://"
        ],
        "suffix": "YAiVYAiViwjSJzEllW.",
        "pump": [
          "YAiV"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "%\\{((@)?\\w+(.\\w+)*)\\}",
    "inputs": [
      {
        "prefix": [
          "%{A"
        ],
        "suffix": "",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "%{@a"
        ],
        "suffix": "${",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "%{@"
        ],
        "suffix": "6d189b6d189b25b6DB16Aa593",
        "pump": [
          "6d189b"
        ]
      },
      {
        "prefix": [
          "%{A"
        ],
        "suffix": "",
        "pump": [
          "a000"
        ]
      },
      {
        "prefix": [
          "%{@a"
        ],
        "suffix": "$%{@a",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "}%{@"
        ],
        "suffix": "Ad6bfAAd6bfA2d6bfA2eb8Fe9",
        "pump": [
          "Ad6bfA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "slimerjs\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "slimerjs/0._0"
        ],
        "suffix": "imerjs",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "slimerjs/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "slimerjs/0._0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "slimerjs/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(/\\*(.|[\\r\\n])*?\\*/)|(--(.*|[\\r\\n]))|(//(.*|[\\r\\n]))",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "ATTENDEE(:|;)(.*?\\r?\\n)(\\s.*?\\r?\\n)*",
    "inputs": [
      {
        "prefix": [
          "ATTENDEE;\r\n"
        ],
        "suffix": "AT",
        "pump": [
          "\t\n\r\n"
        ]
      },
      {
        "prefix": [
          "ATTENDEE;\r\n"
        ],
        "suffix": "E:",
        "pump": [
          "\t\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([\\w\\-\\.\\*\\%\\!]+)=\\s*\\\"((\\\\.|[^\\\"])*)\\\"\\s*,?",
    "inputs": [
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "\ta\"a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "nh=\"\\O*cM-mzJJso"
        ],
        "suffix": "\\N\\J)L\\,]\\\\N\\J)L\\,]\\T*e[\\402\\\\5thnn\\K?C!kL-[M23sttU\\6(sQ",
        "pump": [
          "\\N\\J)L\\,]\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(\\r\\n|\\r|\\n)+\\s*\\+\\+)",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\n+\t",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\r\n\r\r\n\r\n\r\r\n\r\n\r\r\n\r\n\r\r\n\r\n\r\n\r\r\n\n\r\n\r\r\n\r\r\r\n",
        "pump": [
          "\r\n\r\r\n\r\n\r\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(aa|aabaac|ba|b|c)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "acab",
        "pump": [
          "aabaac"
        ]
      },
      {
        "prefix": [
          "c"
        ],
        "suffix": "\u0000",
        "pump": [
          "aabaacc"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aaaabaac"
        ]
      },
      {
        "prefix": [
          "c"
        ],
        "suffix": "\u0000",
        "pump": [
          "aabaacc"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<li([^>]*)>((.|\\n)*?)<\\/li>",
    "inputs": [
      {
        "prefix": [
          "<li>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<li>"
        ],
        "suffix": "</<></li",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<li>"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<li>"
        ],
        "suffix": "l<",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\/\\/.*\\n)* *' *(?:<% *)?if *\\(!hasDontEnumBug *(?:&&|\\))[\\s\\S]+?<% *} *(?:%>|').+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " //\n 'if(!hasDontEnumBug)a\n<%}%",
        "pump": [
          " //\n//\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          " //\\x0a//\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " //\n 'if(!hasDontEnumBug)a\n '",
        "pump": [
          " //\n//\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(([^\\/\\s]*)(\\/)?([^\\/\\(\\)\\s]*)?)(\\s\\((([^\\)]*)*)\\))?",
    "inputs": [
      {
        "prefix": [
          "\\x09("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "/\t("
        ],
        "suffix": "(/a)/",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(\n(o(\n(or1}M-hm|?pC#",
        "pump": [
          "(\n(o"
        ]
      },
      {
        "prefix": [
          "\\x09("
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "/\t("
        ],
        "suffix": ")",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/\r(X/\r(X|}x2s5~1x2s5",
        "pump": [
          "/\r(X"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(?:\\.|(\\\\\\')|[^\\''])*'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ".\\''.",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ".\\",
        "pump": [
          "."
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          "'\u0000"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "...\\\\jnql....\\\\jnql.nql.aql.a8D.aqloa.a8D900925798aFFbbljsgzpcmlXiFyISa",
        "pump": [
          "...\\\\jnql."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Linux ((\\d+|\\.)+)",
    "inputs": [
      {
        "prefix": [
          "Linux 0"
        ],
        "suffix": "u",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "Linux 0"
        ],
        "suffix": "i",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:X(['](\\\\.|[^']|\\\\')*?['])+)",
    "inputs": [
      {
        "prefix": [
          "X'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "X"
        ],
        "suffix": "X\\'a'\\",
        "pump": [
          "'\\a'"
        ]
      },
      {
        "prefix": [
          "X'''\u0000"
        ],
        "suffix": "",
        "pump": [
          "''\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^;]+|;;)+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "a;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": ";",
        "pump": [
          "<\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a;",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": ";",
        "pump": [
          "<\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^typedef struct( \\S+)?\\s*\\{\\n(([^}\\n].*)?\\n)*\\}\\s*XSizeHints;\\n",
    "inputs": [
      {
        "prefix": [
          "typedef struct {\\x0a"
        ],
        "suffix": "",
        "pump": [
          "~\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "typedef struct{\n"
        ],
        "suffix": "\n\nX",
        "pump": [
          "a\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:([a-z])|([A-Z])|([0-9])|(.)){6,}|(.)+$",
    "inputs": [
      {
        "prefix": [
          "00000"
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "chromium\t0._0"
        ],
        "suffix": "mium",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "chromium/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "chromium\t0._0"
        ],
        "suffix": "m",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "chromium/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Prepare stack to receive return values. *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "epare ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " Pre Prepare stack",
        "pump": [
          " Pre"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^=begin(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?=end",
    "inputs": [
      {
        "prefix": [
          "=begin\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0d\\x0a"
        ]
      },
      {
        "prefix": [
          "=begin\r"
        ],
        "suffix": "ia",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?\\:\\/\\/|www\\.)([a-zA-Z0-9-]+(\\.[a-zA-Z0-9]+)+)(\\:[0-9]{2,4})?\\/?((\\.[:_0-9a-zA-Z-]+)|[:_0-9a-zA-Z-]*\\/?)*\\??[:_#@*&%0-9a-zA-Z-/=]*",
    "inputs": [
      {
        "prefix": [
          "www.a.a/"
        ],
        "suffix": "t.#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www.a.a/"
        ],
        "suffix": "/$hwww.h",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www.a.a/"
        ],
        "suffix": ".",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(\\\\.|[^\"])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\"(?:[^\"\\\\]*(?:\\\\.)?)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\!"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\tV:&\tV:&PEMK\b^qj\r",
        "pump": [
          "\tV:&"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\s\"]+|\"[^\"]*\")+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"\t\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#(\\S+)*",
    "inputs": [
      {
        "prefix": [
          "#a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#SS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      },
      {
        "prefix": [
          "#a"
        ],
        "suffix": "#\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "#SS"
        ],
        "suffix": "\u0000",
        "pump": [
          "SS"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\xCF*[0-9]{2}\\xCF*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "Ï0Ï",
        "pump": [
          "Ï00Ï"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((https?://)?([-\\w]+\\.[-\\w\\.]+)+\\w(:\\d+)?(/([-\\w/_\\.]*(\\?\\S+)?)?)*)",
    "inputs": [
      {
        "prefix": [
          "https://a.-"
        ],
        "suffix": "",
        "pump": [
          "-..-.."
        ]
      },
      {
        "prefix": [
          "a.aa/"
        ],
        "suffix": "\t",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "https://https_.i"
        ],
        "suffix": "",
        "pump": [
          "-..-.."
        ]
      },
      {
        "prefix": [
          "a.aa/"
        ],
        "suffix": "ps.\tahttps:/",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{([A-Za-z0-9-_]+)(\\s*:\\s*([^{}][^{}]*))*\\}",
    "inputs": [
      {
        "prefix": [
          "{-"
        ],
        "suffix": "",
        "pump": [
          ":\\x09;"
        ]
      },
      {
        "prefix": [
          "{a"
        ],
        "suffix": "a:{",
        "pump": [
          "\t:\ta"
        ]
      },
      {
        "prefix": [
          "{-"
        ],
        "suffix": "",
        "pump": [
          ":\\x09;"
        ]
      },
      {
        "prefix": [
          "{a"
        ],
        "suffix": "a{a:",
        "pump": [
          "\t:\ta"
        ]
      },
      {
        "prefix": [
          "}{q3:\t\tr"
        ],
        "suffix": ":\t \r:\t \r\r \r\n\r \t \r\n\r\n\r \t  \n\n\t\n \r\t\n\t\r\n\n\r\r\n\r ",
        "pump": [
          ":\t \r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "\"\"'\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "'\u0000",
        "pump": [
          ".\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?)://[a-z0-9-]+(.[a-z0-9-]+)+(/?)",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "ps/:",
        "pump": [
          "aaaa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps/$",
        "pump": [
          "aaaa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*(?:\\\\\"([^\\\\\"]*)\\\\\"|([^,]+))\\s*,?)+?",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\",\\\t\\,,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": ",,",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t,\",,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000s"
        ],
        "suffix": "",
        "pump": [
          "\"\"s"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\n(?: {4}|\\t).*\\S.*\\n((?: {4}|\\t).*\\n)*",
    "inputs": [
      {
        "prefix": [
          "\n\ta\n"
        ],
        "suffix": " \n   ",
        "pump": [
          "\t\n\t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^```js((.*\\n)*?)```",
    "inputs": [
      {
        "prefix": [
          "```js"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "```js"
        ],
        "suffix": "`\n",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--(?:(?:.|\\r|\\n)*?)-->",
    "inputs": [
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "!--",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--"
        ],
        "suffix": "-",
        "pump": [
          "\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^((?:\\w+|\\:\\:)+)=(\\w+)",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "=:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "www"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "ffBaffBa18196329406",
        "pump": [
          "ffBa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\\\(_form|_query|_request|globals|session)({(\".+?\"|\\d+|\\$[\\w_]+)})+(\\[\\[\\d+\\]\\])*",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "(?:W/)?\"((?:\\\\.|[^\"])*)\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "/\"\"/",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(?:[0-9]{1,3}\\.){1,3}[0-9]{1,3},? ?)+|",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ", 0",
        "pump": [
          "0.00.0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0000",
        "pump": [
          "0.000.0"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0..",
        "pump": [
          "0.0"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(https?://)?(\\w*[.]\\w+)+([/?=&]+\\w+)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "tps..",
        "pump": [
          "a.aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "tps:.",
        "pump": [
          "a.aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\*??) = ((\\[\\] .*)+)",
    "inputs": [
      {
        "prefix": [
          "* = "
        ],
        "suffix": "a",
        "pump": [
          "[] [] "
        ]
      },
      {
        "prefix": [
          "* = "
        ],
        "suffix": "a",
        "pump": [
          "[] [] "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "define\\(((?:.|\\n|\\r)+)\\)",
    "inputs": [
      {
        "prefix": [
          "define(!"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "define("
        ],
        "suffix": "ef",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "define(e"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "define("
        ],
        "suffix": "e\n",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script(\\s[^>]+)*>(.*?)</script>",
    "inputs": [
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          " !\\x09!"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "scr<></scr",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "<scripts\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000s\u0000"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "\n\r\n   \r\n  \n\n\n\t\r\n\t\r\n\t\n",
        "pump": [
          "\n\r\n "
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "",
        "pump": [
          " !\\x09!"
        ]
      },
      {
        "prefix": [
          "<script"
        ],
        "suffix": "cr\t",
        "pump": [
          "\ta\ta"
        ]
      },
      {
        "prefix": [
          "<scripts\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000s\u0000"
        ]
      },
      {
        "prefix": [
          "<<script"
        ],
        "suffix": "\t \t\n\r\n \r\n\r\n\r\t\n\t\t\n \n\n\n",
        "pump": [
          "\t \t\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(0|[1-9]\\d*)+(.\\d\\d?)?$",
    "inputs": [
      {
        "prefix": [
          "1"
        ],
        "suffix": ":",
        "pump": [
          "11"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "1a",
        "pump": [
          "010"
        ]
      },
      {
        "prefix": [
          "10000"
        ],
        "suffix": "60060001600600|",
        "pump": [
          "6006"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "https?:\\/\\/([-\\w\\.]+)+(:\\d+)?(\\/([^\\s]*(\\?\\S+)?)?)?",
    "inputs": [
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "https://a"
        ],
        "suffix": "tps\thtt",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Draw an ellipse tilted toward the mouse. Thanks to\n\t\t\t * http:",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": " a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " Dra Draw an ellip",
        "pump": [
          " Dra"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([\\w\\:\\-]+)((?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\t",
        "pump": [
          "\ta=\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- version -->(.|\\n)*<!-- versionstop -->",
    "inputs": [
      {
        "prefix": [
          "<!-- version -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- version -->"
        ],
        "suffix": "sto",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<!-- version -->"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<!-- version -->"
        ],
        "suffix": "!-",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!--.*\\n(.*\\n)+?.*-->",
    "inputs": [
      {
        "prefix": [
          "<!--\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--\n"
        ],
        "suffix": "--",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          "<!--\\x0a\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "<!--\n"
        ],
        "suffix": "!",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^A-Za-z_]|\\n)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "A",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "$\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*CREATE\\s+(?:UNIQUE\\s+)?INDEX\\s+(?:['\"`\\[]?\\w+['\"`\\]]?\\.)?['\"`\\[]?\\w+['\"`\\]]?\\s+(ON\\s+['\"`\\[]?\\w+['\"`\\]]?)\\s*(\\((\\s*(?:\\s*['\"`\\[]?\\w+['\"`\\]]?\\s*,\\s*)*['\"`\\[]?\\w+['\"`\\]]?\\s*)\\))\\s*$",
    "inputs": [
      {
        "prefix": [
          "CREATE UNIQUE INDEX `a'.`a' ON `a("
        ],
        "suffix": "",
        "pump": [
          "`a,\\x09a,"
        ]
      },
      {
        "prefix": [
          "CREATE\tINDEX\t\"a\"\tON\t\"a\"("
        ],
        "suffix": "IQ,\"a",
        "pump": [
          "\ta,\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\s*\\/\\/.*\\s*|\\s*\\/\\*[^*]*\\*+(?:[^\\/][^*]*\\*+)*\\/\\s*)$",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "\\/"
        ],
        "suffix": "****************:\b/*Mx=~9R**\\****\\6+\\+**\\5|1\tJe7_Os`.**",
        "pump": [
          "******"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*/"
        ],
        "suffix": "*******************[\\\\*\\drs(j***[j",
        "pump": [
          "****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:[^\"]|\\\\\")*\"|'(?:[^'])|(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(\\/\\/.*)|[{};]",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*/a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "*/a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "blackberry0/0._0"
        ],
        "suffix": "r",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "blackberryd/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      },
      {
        "prefix": [
          "blackberry0/0._0"
        ],
        "suffix": "l",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "blackberryd/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(xn\\-\\-[\\p{L}\\d\\-]+)\\.(xn\\-\\-(?:[a-z\\d-]+\\.?1?)+)$",
    "inputs": [
      {
        "prefix": [
          "xn--a.xn--a"
        ],
        "suffix": "xA..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "xn---\u0000xn----\u0000"
        ],
        "suffix": "\u0000",
        "pump": [
          "d\u0000"
        ]
      },
      {
        "prefix": [
          "xn--xn."
        ],
        "suffix": "xn--xn---acozyvgrojapfD",
        "pump": [
          "xn--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<(([a-zA-Z])+((\\s+\\w+)=?(\"?\\w+\"?)?){0,})( (\\/)?)?\\s*>|<\\/([a-zA-Z])+\\s*>)",
    "inputs": [
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=\"a",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asww"
        ],
        "suffix": "",
        "pump": [
          "wsww"
        ]
      },
      {
        "prefix": [
          "<A"
        ],
        "suffix": "",
        "pump": [
          " 00"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "/",
        "pump": [
          "\taa"
        ]
      },
      {
        "prefix": [
          "<Asw"
        ],
        "suffix": "",
        "pump": [
          "wsw"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "N\rEWOWJ\rEWN\rEWOWJ\rEWOEWO1F09Fff36E98aDcb3BFC7dF46bF5eaE8DcDA18db",
        "pump": [
          "N\rEWOWJ\rEW"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\w-]+(?:\\.[^ \\*]*)*$",
    "inputs": [
      {
        "prefix": [
          "-"
        ],
        "suffix": " ",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": " ",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "aZnymWh.7..('/>/\\,=/"
        ],
        "suffix": "+.-h.7..+.-h.7..^($`('/>/\\,=/+.->$!Wh.7..^($`('/>/\\ ",
        "pump": [
          "+.-h.7.."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(\\/\\*((.|\\r?\\n)*?)\\*\\/)?\\s*",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^'(([^']*| \\\\')*)'$",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": " ",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "#|!R#|!Rp>IQ3 \bf@",
        "pump": [
          "#|!R"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\[((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]:\\s*(.+)$",
    "inputs": [
      {
        "prefix": [
          "[!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "a\\]",
        "pump": [
          "a\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<li[^>]*>(.+)</li\\s*>)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "</a",
        "pump": [
          "<li>a</li><li>a</li>"
        ]
      },
      {
        "prefix": [
          "<li>\u0000</li><li>\u0000"
        ],
        "suffix": "",
        "pump": [
          "</li><li>\u0000</li><li>\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "l",
        "pump": [
          "<li>a</li><li>a</li>"
        ]
      },
      {
        "prefix": [
          "<li>\u0000</li><li>\u0000"
        ],
        "suffix": "",
        "pump": [
          "</li><li>\u0000</li><li>\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*;?)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\x00",
        "pump": [
          ";"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t\r\r\t\t\r\r\t\t\n\r;\t\r\r\t\t\n$",
        "pump": [
          "\t\r\r\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\*|(\\d+[,-]?)*\\d+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0,,",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "273427347478292102\t",
        "pump": [
          "2734"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^/(([a-zA-Z0-9\\.\\-_]+)/?)*?$",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "!",
        "pump": [
          "--"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "//",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/.0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "a-zAa-zAa-zA-Z0-9-[",
        "pump": [
          "a-zA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\.?\\d+\\.\\d+(?:\\d+)*",
    "inputs": [
      {
        "prefix": [
          ".0.00"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d\u0000ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*(?:'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|[^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*)\\s*(?:,\\s*(?:'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|[^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*)\\s*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          ",\\x09"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ",\"'a",
        "pump": [
          ",\ta"
        ]
      },
      {
        "prefix": [
          "\r \r \t\n \r\t\n\r\r\n\t   \r\n   \r\n\t\ra2"
        ],
        "suffix": ", \r\n\t\r  \r\n\t\ra2DL,\t\r.\"",
        "pump": [
          ", \r\n\t\r  \r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*\\|(\\s*.+\\|)+\\s*$",
    "inputs": [
      {
        "prefix": [
          "| |"
        ],
        "suffix": "}",
        "pump": [
          "\\x09||"
        ]
      },
      {
        "prefix": [
          "|"
        ],
        "suffix": "a",
        "pump": [
          "\t\ta|"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\n(\\s*\\n*)+$",
    "inputs": [
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "#",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\r\r\r\n\r\r\r\r\t\n\r\t\n\n\t\n\b",
        "pump": [
          "\n\r\r\r"
        ]
      },
      {
        "prefix": [
          "\\x0a"
        ],
        "suffix": "\\x00",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "\n"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n>",
        "pump": [
          "\n\n\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\n      (?: \" (?: [^\\\\\"] | \\\\ (?:.|\\n)  )* \" ) |\n      (?: ' (?: [^\\\\'] | \\\\ (?:.|\\n)  )* ' )\n    ",
    "inputs": [
      {
        "prefix": [
          "       \" "
        ],
        "suffix": "        ",
        "pump": [
          " \\ \n  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+\\:.*\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a:\na:\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":a",
        "pump": [
          "a:\na:\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\\"]* )(\\\".*\\\"(?:, ?\\\".*\\\")*)([^\\\"]*)",
    "inputs": [
      {
        "prefix": [
          " \"\""
        ],
        "suffix": "\"",
        "pump": [
          ", \"\",\"\""
        ]
      },
      {
        "prefix": [
          " \"\",\""
        ],
        "suffix": "",
        "pump": [
          "\",\"\",\""
        ]
      },
      {
        "prefix": [
          " \"\""
        ],
        "suffix": "\"",
        "pump": [
          ", \"\",\"\""
        ]
      },
      {
        "prefix": [
          " \"\",\""
        ],
        "suffix": "",
        "pump": [
          "\",\"\",\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\n\\r|\\r\\n|[\\r\\n])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\n\r\n\r"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\ra",
        "pump": [
          "\n\r\n\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\w+)=\"((?:\\\\\"|.)*?)\"",
    "inputs": [
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "$",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "w=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "$",
        "pump": [
          "\\\""
        ]
      },
      {
        "prefix": [
          "w=\"\u0000"
        ],
        "suffix": "",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "UIStrings = (.|\\s)*?\\};\\n",
    "inputs": [
      {
        "prefix": [
          "UIStrings = "
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "UIStrings = "
        ],
        "suffix": "UI",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "UIStrings = \u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "UIString"
        ],
        "suffix": "s = ; = s = ; = ; = ;\\n.) n)\\n   S=SUs(\\4*In= Iis?r* n=n4",
        "pump": [
          "s = ; = "
        ]
      },
      {
        "prefix": [
          "UIStrings = "
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "UIStrings = "
        ],
        "suffix": "Str",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "UIStrings = \u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "}UIStrings = \t\t\r \n \n\t\n\n\t\t\r"
        ],
        "suffix": "\t  \t\t  \t\t\n",
        "pump": [
          "\t  \t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:[^\\s\"']+|\"[^\"]*\"|'[^']*')+",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "\"\t\"a\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\"\""
        ],
        "suffix": "'",
        "pump": [
          "\"\"\""
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a\"\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "\"\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\[.*\\]|\\{.*?\\}|\\S)+ ?",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "[\t",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<([-A-Za-z0-9_]+)((?:\\s+[a-zA-Z0-9_:][-a-zA-Z0-9_:.]*(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>",
    "inputs": [
      {
        "prefix": [
          "<-"
        ],
        "suffix": "",
        "pump": [
          " a=''"
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "\ta'",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<-s0="
        ],
        "suffix": "",
        "pump": [
          "\"\"s0="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:[0-9a-fA-F:]){1,4}(?:(?::(?:[0-9a-fA-F]){1,4}|:)){2,7})+$",
    "inputs": [
      {
        "prefix": [
          "aaaa::"
        ],
        "suffix": "!",
        "pump": [
          ":::0000::000:0000::000:0:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aaaaa:",
        "pump": [
          "a:a::"
        ]
      },
      {
        "prefix": [
          "0::0:::::::00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "A0:::::::00a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "::::::::::::::04859",
        "pump": [
          "::::"
        ]
      },
      {
        "prefix": [
          "a:"
        ],
        "suffix": "!",
        "pump": [
          "0:0:"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "a:a"
        ]
      },
      {
        "prefix": [
          "0:0::0a"
        ],
        "suffix": "\u0000",
        "pump": [
          "a::0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":::::::::::::::::O",
        "pump": [
          "::::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\"(\\\\\\\\|\\\\\"|[^\"])*\")",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\"",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "Service Information \"create\"\\n(?:.*\\n)*?URL:\\s+(.*)",
    "inputs": [
      {
        "prefix": [
          "Service Information \"create\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"create\"\n"
        ],
        "suffix": "UR",
        "pump": [
          "\n\n"
        ]
      },
      {
        "prefix": [
          "Service Information \"create\"\\x0a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          "Service Information \"create\"\n"
        ],
        "suffix": "Ua",
        "pump": [
          "\n\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(==.*?==|[^\\|])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "|",
        "pump": [
          "===="
        ]
      },
      {
        "prefix": [
          "===="
        ],
        "suffix": "|",
        "pump": [
          "====="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "!(\\\\[\\\\!]|[^!])*![egimosx]*",
    "inputs": [
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "!a\\",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "\\\\5\\\\\\\\\\\\\\5\\\\\\\\\\50fH00\\\\50f\b:<\b}~?~{=~~>\\\\\\\\\\50?~{=~~>|;Hf05\\\\\\\\\\5",
        "pump": [
          "\\\\5\\\\\\\\\\"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "!"
        ],
        "suffix": "!a",
        "pump": [
          "\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:\\\\?.)*?\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\\\\\\:a0ee8\\\\J8gkcb1DF?4Cb\\?::\\J8gkcb1\\?:\\?"
        ],
        "suffix": ":\\:\\a8\\\\:\\:\\a8\\\\?:",
        "pump": [
          ":\\:\\a8\\\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\?.^13^1j\\k\\zi:\\\\?.^13^1j\\k\\zi:\\(prfy)?anqzww?lg:xb(j\\k\\z\\(prfy)?anqz\\.?\\?.^13^1j\\k\\zi",
        "pump": [
          "\\?.^13^1j\\k\\zi:\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(sie)-(\\w+)*",
    "inputs": [
      {
        "prefix": [
          "sie-a"
        ],
        "suffix": "sa-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sie-w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "sie-a"
        ],
        "suffix": "iesa$si",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "sie-ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( {2,})+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "     "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " a",
        "pump": [
          "    "
        ]
      },
      {
        "prefix": [
          "     "
        ],
        "suffix": "\u0000",
        "pump": [
          "   "
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "#",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "  "
        ],
        "suffix": "\u0000",
        "pump": [
          "  "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/(\\\\.|\\\\\\n|.)*?/",
    "inputs": [
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "\\\\x0a"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "\n",
        "pump": [
          "\\\n"
        ]
      },
      {
        "prefix": [
          "\\/\\\\."
        ],
        "suffix": "|\\\\\\n\\|\\\\\\n\\{>vpxumcpakkeyncwvqyykhxkprlpl\\.|\\\\\\n\\{>~{\b}=?<@|~>|^",
        "pump": [
          "|\\\\\\n\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z0-9_:]*)\\s*(\\(([^\\)]+)*\\))*",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": ")\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(t\nn(t\nn#{ZAV\t]\t\r\rK",
        "pump": [
          "(t\nn"
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          "*!"
        ]
      },
      {
        "prefix": [
          "(a"
        ],
        "suffix": ")",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": ")",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "(\t$P(\t$P\t0e~rn6q>\t!",
        "pump": [
          "(\t$P"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "f\\s+(((-[\\d]{1,}\\/-[\\d]{1,}\\/-[\\d]{1,}[\\s]?){3,})+)",
    "inputs": [
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "\t\t-0/-0/-0-0/-0/-0-0/-0/-0-0/",
        "pump": [
          "-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0"
        ]
      },
      {
        "prefix": [
          "fs-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d"
        ],
        "suffix": "\u0000",
        "pump": [
          "-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d"
        ]
      },
      {
        "prefix": [
          "f\t"
        ],
        "suffix": "-",
        "pump": [
          "-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0-0/-0/-0"
        ]
      },
      {
        "prefix": [
          "fs-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-dd"
        ],
        "suffix": "\u0000",
        "pump": [
          "-d/-d/-d-d/-d/-d-d/-d/-d-d/-d/-dd"
        ]
      },
      {
        "prefix": [
          "f\t-0/-0/-0"
        ],
        "suffix": "\t-0",
        "pump": [
          "-0/-0/-00"
        ]
      },
      {
        "prefix": [
          "fs-d/-d/-d-d/-d/-d-d/-d/-d"
        ],
        "suffix": "\u0000",
        "pump": [
          "-d/-d/-d-d/-d/-d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":container\\(\\s*\"*((?:[^()]+?|\\([^()]*\\))+?)\"*\\s*\\)",
    "inputs": [
      {
        "prefix": [
          ":container(#"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          ":container(a"
        ],
        "suffix": "co",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\u0000\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          ":container("
        ],
        "suffix": ">1JJ>1JJWpm?m\\.C.",
        "pump": [
          ">1JJ"
        ]
      },
      {
        "prefix": [
          ":container(;"
        ],
        "suffix": "",
        "pump": [
          "##"
        ]
      },
      {
        "prefix": [
          ":container(a"
        ],
        "suffix": "(\t\":(:cont",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":container\u0000"
        ],
        "suffix": "(",
        "pump": [
          "*\u0000"
        ]
      },
      {
        "prefix": [
          "(:container("
        ],
        "suffix": ":cco:ccontcontain",
        "pump": [
          ":cco"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.*/)*(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "",
        "pump": [
          "//"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-z]+=[^,\\]]+,*)*$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "]",
        "pump": [
          "a=!a={"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$,$",
        "pump": [
          "a=aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aa=a=aa=aa=a=aa=aa=aaa=aa=*aa=aa=aa=aa=a,f",
        "pump": [
          "aa=a=aa="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[\\+\\-]*(\\d+(\\.\\d*)*|(\\d*\\.\\d+))+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "0.0"
        ]
      },
      {
        "prefix": [
          "0"
        ],
        "suffix": "0.+",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "d\u0000d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "727.727.72737.295D",
        "pump": [
          "727."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "「([^「」]*(?:「.+」)*[^「」]*)」[にはの](「.+」の)*(.+)",
    "inputs": [
      {
        "prefix": [
          "「"
        ],
        "suffix": "「a」」に",
        "pump": [
          "「a」「a」"
        ]
      },
      {
        "prefix": [
          "ãã\u0000"
        ],
        "suffix": "",
        "pump": [
          "ãã\u0000ãã\u0000"
        ]
      },
      {
        "prefix": [
          "「"
        ],
        "suffix": "「a」a",
        "pump": [
          "「a」「a」"
        ]
      },
      {
        "prefix": [
          "ãã\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "ãã\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\%(\\d+)*#",
    "inputs": [
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%0"
        ],
        "suffix": "%0##",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%d"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "%%"
        ],
        "suffix": "004100418133995346",
        "pump": [
          "0041"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%0"
        ],
        "suffix": "%",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%dd"
        ],
        "suffix": "",
        "pump": [
          "dd"
        ]
      },
      {
        "prefix": [
          "%%"
        ],
        "suffix": "433243324332432555",
        "pump": [
          "4332"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Za-z0-9_]+)+$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "00a"
        ],
        "suffix": "\u0000",
        "pump": [
          "0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "r77ar77aQmF3kJ20Jq[",
        "pump": [
          "r77a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*.*?\\*\\/|'(?:\\\\.|[^'])*'|\"(?:\\\\.|[^\"])*\"|url\\([^)]*\\)|(\\.(?:public\\/)?[\\w-]*\\/{1,2}[\\w-]+)",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "ur/'a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"JKp!V.j'?:p1?\\?[4:c\\?042w)"
        ],
        "suffix": "/\\c:{\\}l\\}}\\/\\c:{\\}l\\}}\\w():)|]?c):[^(:](1*?\\?\\nSwbyOrGaxAYMuART",
        "pump": [
          "/\\c:{\\}l\\}}\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": ".)\\a/*\"\\/a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'ubl/|?X.?UH*|\\pJ)o^l./U"
        ],
        "suffix": "\\u\\/\\[(\\\\u\\/\\[(\\Bwc^)Eu\\[mt1\\1p\\,k]+*?l?*i\\\\/\\]\\J",
        "pump": [
          "\\u\\/\\[(\\"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "ur/'a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "\"\\'\\u"
        ],
        "suffix": "\\\\u\\*\\\\\\u\\*\\u\\u|~\\uu.u/*urluu.u/*urluu.u\\u|~\\uu.",
        "pump": [
          "\\\\u\\*\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"([^\"\\\\]+|\\\\{2}|\\\\.)*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "r\""
        ],
        "suffix": "o1=vo1=v<w^H%1^1D]",
        "pump": [
          "o1=v"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "\\\\"
        ]
      },
      {
        "prefix": [
          "\"a"
        ],
        "suffix": "\\a\"\\\"",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "#\nqm#\nqm$~&T5a^%\r",
        "pump": [
          "#\nqm"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?::(\\S+) )?([A-Z0-9]+)((?: (?:[^:\\s][^\\s]*))*)(?: :(.*))?\\s*$",
    "inputs": [
      {
        "prefix": [
          "0"
        ],
        "suffix": "a",
        "pump": [
          " a a"
        ]
      },
      {
        "prefix": [
          "0 \u0000"
        ],
        "suffix": "s\u0000",
        "pump": [
          " \u0000 \u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([[:alpha:]]{1}(([[:alnum:]]|[-])*[[:alnum:]]{1})*){1}([.][[:alpha:]]{1}(([[:alnum:]]|[-])*[[:alnum:]]{1})*)*$",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "hh",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":n"
        ],
        "suffix": "",
        "pump": [
          "mn"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ":al::al:alnum::alp",
        "pump": [
          ":al:"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*!?\\s*(([0-9]+)(\\s*,\\s*)?)+",
    "inputs": [
      {
        "prefix": [
          "!0"
        ],
        "suffix": ",0!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "%\\x09%&"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "%\t",
        "pump": [
          "%\t%a"
        ]
      },
      {
        "prefix": [
          "\"%s%"
        ],
        "suffix": "",
        "pump": [
          "\"%s%"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "",
        "pump": [
          "%\\x09%&"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "%\t",
        "pump": [
          "%\t%a"
        ]
      },
      {
        "prefix": [
          "\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([A-Z]+[a-z]+\\w+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "Aaaa"
        ]
      },
      {
        "prefix": [
          "AawAa"
        ],
        "suffix": "",
        "pump": [
          "wwAa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "Aa_$A",
        "pump": [
          "Aaaa"
        ]
      },
      {
        "prefix": [
          "AawAa"
        ],
        "suffix": "",
        "pump": [
          "wwAa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "browser/0._0"
        ],
        "suffix": "en",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "browser/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "browser/0._0"
        ],
        "suffix": "o",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "browser/ddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "trident\\/(\\d+(\\.?_?\\d+)+)",
    "inputs": [
      {
        "prefix": [
          "trident/0._0"
        ],
        "suffix": "0..",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "trident/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      },
      {
        "prefix": [
          "trident/0._0"
        ],
        "suffix": "0.",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "trident/dddd"
        ],
        "suffix": "\u0000",
        "pump": [
          "_dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^<((?:[a-zA-Z])[\\w:-]*)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*(>?)",
    "inputs": [
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<a\t'\ta=",
        "pump": [
          "\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<As-="
        ],
        "suffix": "",
        "pump": [
          "\"\"s-="
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(=(?:[a-zA-Z_][\\w\\.]*)+)",
    "inputs": [
      {
        "prefix": [
          "="
        ],
        "suffix": "=a=",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "=A_"
        ],
        "suffix": "\u0000",
        "pump": [
          "w_"
        ]
      },
      {
        "prefix": [
          "="
        ],
        "suffix": "=$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "=Aa"
        ],
        "suffix": "\u0000",
        "pump": [
          "wa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\t]\\",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "[\n[[[[[J[[\n[[[\n"
        ],
        "suffix": "\t\t \t\t\t \t  \t\t ",
        "pump": [
          "\t\t \t"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "[\tk"
        ],
        "suffix": "\t \t \t \t  \n\t\r  \t\t\n\t",
        "pump": [
          "\t \t "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\.)+(.*\\.)+(.*)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a.",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[A-Z](?:_*[A-Z0-9]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "A0"
        ],
        "suffix": "0_",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "A0"
        ],
        "suffix": "\u0000",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "A442A44291269274875a",
        "pump": [
          "A442"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\(\\)\\[\\]\\*\\+\\?\\{\\}]|(\\\\[\\(\\)\\[\\]\\*\\+\\?\\{\\}]|[^\\s()])*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\\((",
        "pump": [
          "\\(\\*"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\(\t",
        "pump": [
          "\\(\\*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([a-zA-Z0-9_\\-\\+\\~\\^\\{\\}]+[\\.]?)+@{1}([a-zA-Z0-9_\\-\\+\\~\\^\\{\\}]+[\\.]?)+\\.[A-Za-z0-9]{2,}$",
    "inputs": [
      {
        "prefix": [
          "+"
        ],
        "suffix": "",
        "pump": [
          "A+"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "zHDkzHDkLyo6iAkf+q",
        "pump": [
          "zHDk"
        ]
      },
      {
        "prefix": [
          "+"
        ],
        "suffix": "",
        "pump": [
          "A+"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "@.",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "JwdxJwdxo6iAVr17jP",
        "pump": [
          "Jwdx"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*[\\W].*){5,}",
    "inputs": [
      {
        "prefix": [
          "$$$$"
        ],
        "suffix": "a",
        "pump": [
          "a$"
        ]
      },
      {
        "prefix": [
          "WWWWWW\u0000"
        ],
        "suffix": "",
        "pump": [
          "W\u0000"
        ]
      },
      {
        "prefix": [
          "$$$$"
        ],
        "suffix": "a",
        "pump": [
          "a$"
        ]
      },
      {
        "prefix": [
          "WWWWWW"
        ],
        "suffix": "",
        "pump": [
          "WW"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a$"
        ]
      },
      {
        "prefix": [
          "W\u0000"
        ],
        "suffix": "",
        "pump": [
          "W\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\w+[\\-']?\\w+\\s?)+$",
    "inputs": [
      {
        "prefix": [
          "a0"
        ],
        "suffix": "\\x00",
        "pump": [
          "000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "''",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "wwww"
        ],
        "suffix": "\u0000",
        "pump": [
          "www"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "zDIszDIstoX_PP3Cu12\\",
        "pump": [
          "zDIs"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?: *\\/\\/.*\\n)* *(?:else )?if *\\(freeExports\\) *{\\s*}(?:\\s*else *{([\\s\\S]+?) *})?\\n",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "^\\/\\*(.|\\s)*?\\*\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": ".   .   \t \t\t \r \n   \t",
        "pump": [
          ".   "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^ {0,3}\\|.+\\|[ \\t]*\\n {0,3}\\|[ \\t]*:?[ \\t]*(?:[-=]){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*\\n( {0,3}\\|.+\\|[ \\t]*\\n)*(?:\\n|¨0)",
    "inputs": [
      {
        "prefix": [
          "   |!|\\x0a|:==|\\x0a"
        ],
        "suffix": "",
        "pump": [
          "   |}|\\x0a|||\\x0a"
        ]
      },
      {
        "prefix": [
          "|a|\n|:--:|\n"
        ],
        "suffix": " :-",
        "pump": [
          "|a|\n|a|\n"
        ]
      },
      {
        "prefix": [
          "|!|\\x0a|:=|\\x0a"
        ],
        "suffix": "",
        "pump": [
          "|}|\\x0a|||\\x0a"
        ]
      },
      {
        "prefix": [
          "|a|\n|:-:|\n"
        ],
        "suffix": " -\t",
        "pump": [
          "|a|\n|a|\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(\\w+):(\\w+))+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "::",
        "pump": [
          "a:aa"
        ]
      },
      {
        "prefix": [
          "w:ww:w"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww:w"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$a",
        "pump": [
          "a:aa"
        ]
      },
      {
        "prefix": [
          "w:ww:ww"
        ],
        "suffix": "\u0000",
        "pump": [
          "ww:ww"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<\\s*br(\\s+.*?)*>",
    "inputs": [
      {
        "prefix": [
          "<br"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<br\t"
        ],
        "suffix": "<a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<brs\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<b"
        ],
        "suffix": "r\t\t\tr\t\t\t\t\t\n\r\n\r\n\t\b\t",
        "pump": [
          "r\t\t\t"
        ]
      },
      {
        "prefix": [
          "<br"
        ],
        "suffix": "",
        "pump": [
          "\\x09\\x09"
        ]
      },
      {
        "prefix": [
          "<br\t"
        ],
        "suffix": "<\tb",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "<brs"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "b<br"
        ],
        "suffix": "\n\t\r \n\t\r  \r  \n\n\t\r",
        "pump": [
          "\n\t\r "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "((https?://)(www\\.|[-\\w\\.]+[-\\w])+(:\\d+)?(/([\\w/_\\.#-]*(\\?\\S+)?[^\\.\\s])?)?)",
    "inputs": [
      {
        "prefix": [
          "https://"
        ],
        "suffix": "w/.",
        "pump": [
          "www.www.aa"
        ]
      },
      {
        "prefix": [
          "https://"
        ],
        "suffix": "ps\thttps://wahtw/h?h",
        "pump": [
          "www.www.aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:a*?|b*?)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)",
    "inputs": [
      {
        "prefix": [
          "a-"
        ],
        "suffix": "e-0.+",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "aedd"
        ],
        "suffix": "",
        "pump": [
          "-edd"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "\te-$",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "a,"
        ],
        "suffix": "",
        "pump": [
          "-,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([^:\\s]+)*\\s*:\\s*(.*)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ";\\x00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "|9Q)|9Q)zoM|~\"v{y\\",
        "pump": [
          "|9Q)"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\d|[^\\w.'-])+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "'",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "'",
        "pump": [
          "d\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "return\\s*\\(?\"((?:\\\\\"|[^\"]+)+)\"\\)?",
    "inputs": [
      {
        "prefix": [
          "return(\"]"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return(\"a"
        ],
        "suffix": ")\\",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "return\""
        ],
        "suffix": "ArcpArcp72pmJAfJ7l",
        "pump": [
          "Arcp"
        ]
      },
      {
        "prefix": [
          "return(\"s"
        ],
        "suffix": "",
        "pump": [
          "]]"
        ]
      },
      {
        "prefix": [
          "return(\"a"
        ],
        "suffix": "urar",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "(return\""
        ],
        "suffix": "\n\b\b\r\n\b\b\r\r\b\b\n\t\t\n\n\t\n",
        "pump": [
          "\n\b\b\r"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*p/**%"
        ],
        "suffix": "***************%:lz t2t[\rF**H[gII]`/**\n`X>][br.:/**%:l**",
        "pump": [
          "******"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*/"
        ],
        "suffix": "******e******NDlDvUvoUt\\~=(**lWJdUqD***zqWAybna5\\7*",
        "pump": [
          "****"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^([A-Za-z0-9_]+|\\s)+$",
    "inputs": [
      {
        "prefix": [
          "\\x09"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0_"
        ],
        "suffix": "\u0000",
        "pump": [
          "0_"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "D2dFD2dFCB1CEBda0c$",
        "pump": [
          "D2dF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\$foo(.|\\n)*\\$baz",
    "inputs": [
      {
        "prefix": [
          "$foo"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "$foo"
        ],
        "suffix": "a\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "$foo"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "$foo"
        ],
        "suffix": "o",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:(?:\\\\\\\\|\\\\\\]|[^\\]{])+)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a]",
        "pump": [
          "\\\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!-- BEGIN ([\\w\\-\\.ぁ-んァ-ヶ亜-熙]+?):loop -->(([\\n\\r\\t]|.)*?)<!-- END ([\\w\\-\\.ぁ-んァ-ヶ亜-熙]+?):loop -->",
    "inputs": [
      {
        "prefix": [
          "<!-- BEGIN \\xff:loop -->"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN a:loop -->"
        ],
        "suffix": "p ",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN a:loop -->\t\r\t\t \t\n\t\r\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t \r\t",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN \\xff:loop -->"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<!-- BEGIN a:loop -->"
        ],
        "suffix": "p",
        "pump": [
          "\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<(i|em)>([^<]*)+?<\\/(i|em)>",
    "inputs": [
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "ea",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "<"
        ],
        "suffix": "i>m*i>m*^e)qbcjlm|qt",
        "pump": [
          "i>m*"
        ]
      },
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<i>"
        ],
        "suffix": "e<em",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/<"
        ],
        "suffix": "i>iQi>iQ6K@6DaMg.O,W",
        "pump": [
          "i>iQ"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<script.*src=(s*?)*(.+).*?(s*?)></script>",
    "inputs": [
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "</sc",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "",
        "pump": [
          "s"
        ]
      },
      {
        "prefix": [
          "<scriptsrc="
        ],
        "suffix": "</",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "#include<(.+)>(\\((.*)\\))*(\\[(.*)\\])*",
    "inputs": [
      {
        "prefix": [
          "#include<a>"
        ],
        "suffix": "#i",
        "pump": [
          "()()"
        ]
      },
      {
        "prefix": [
          "#include<a>"
        ],
        "suffix": "u][#i",
        "pump": [
          "()()"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.*\\n)*(\\ *\\/\\*\\ *\\n)(\\ *\\*\\=\\ *require\\ +.*\\n)+(\\ *\\*\\/\\ *\\n)",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "r",
        "pump": [
          "a\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "\\x0a\\x0a"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "i",
        "pump": [
          "a\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/(?:(?:\\\\.)|(?:\\[(?:\\\\.|[^\\[\\]])+\\])|[^/\\\\])+/[a-z]*",
    "inputs": [
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[\\\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "/]/[",
        "pump": [
          "\\a[\\a]"
        ]
      },
      {
        "prefix": [
          "/["
        ],
        "suffix": "\\/][\\\\:?\\J\\/][\\\\:?\\JTX\\ZPUKUZGQA\\/\\?:\\ZPUKUZGQARQFPANURHIFNUFJM:\\:\\",
        "pump": [
          "\\/][\\\\:?\\J"
        ]
      },
      {
        "prefix": [
          "/]"
        ],
        "suffix": "",
        "pump": [
          "[\\\\]"
        ]
      },
      {
        "prefix": [
          "/"
        ],
        "suffix": "[",
        "pump": [
          "\\a[\\a]"
        ]
      },
      {
        "prefix": [
          "\\/\\/["
        ],
        "suffix": "\\?:\\\\\\\\?:\\\\\\/\\])t]][sY.IEm])t]][sY.IEG^](cZ2623719084831134599544239586093461132875885917777537593\\|iuq((",
        "pump": [
          "\\?:\\\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<select(\\r|\\t|\\n|.)*?<\\/select>",
    "inputs": [
      {
        "prefix": [
          "<select"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<select"
        ],
        "suffix": "<s",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<select\t\t\t\r\t\t\t\r\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t \t",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "<select"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<select"
        ],
        "suffix": "se",
        "pump": [
          "\r"
        ]
      },
      {
        "prefix": [
          "<select\\c^{\t\t\t\n  \n  \r\n\n\r"
        ],
        "suffix": " \t\n\r\n\t\t\t \t\n\r\n\t\t\t\n\r   \n\n\t \t\n\t\r\r \n\n ",
        "pump": [
          " \t\n\r\n\t\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<pre>(?:\\s|.)*?<\\/pre>)",
    "inputs": [
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "</p",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<pre>\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "\t\r\t\n\t\t\t\r\t\n\t\t\n\t\t\r\t\n\t\t\n\t\r\n\b\n\t\r\b",
        "pump": [
          "\t\r\t\n\t\t"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "<pre>"
        ],
        "suffix": "p</",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "<pre>s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*SOURCES\\s*=\\s*((?:.*(?:\\\\\\r?\\n))*.*)",
    "inputs": [
      {
        "prefix": [
          "SOURCES="
        ],
        "suffix": "a\\\r",
        "pump": [
          "a\\\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\S+)\\s*=\\s*[{\"(]((.|\\n)*)[}\")]$",
    "inputs": [
      {
        "prefix": [
          "!={"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "a=\""
        ],
        "suffix": "=a",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(.+=.+)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a=a"
        ]
      },
      {
        "prefix": [
          "\u0000=\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "=\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "a=a"
        ]
      },
      {
        "prefix": [
          "\u0000=\u0000\u0000=\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000=\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *([^ ]+) +\\'((:?\\\\.|[^\\'])*)\\' *",
    "inputs": [
      {
        "prefix": [
          "\\x00 '"
        ],
        "suffix": "",
        "pump": [
          ":\\]"
        ]
      },
      {
        "prefix": [
          "a '"
        ],
        "suffix": " \\''a",
        "pump": [
          ":\\a"
        ]
      },
      {
        "prefix": [
          "\u0000 '."
        ],
        "suffix": "",
        "pump": [
          ":."
        ]
      },
      {
        "prefix": [
          "\\x00 '"
        ],
        "suffix": "",
        "pump": [
          ":\\]"
        ]
      },
      {
        "prefix": [
          "a '"
        ],
        "suffix": " \\",
        "pump": [
          ":\\a"
        ]
      },
      {
        "prefix": [
          "\u0000 '."
        ],
        "suffix": "",
        "pump": [
          ":."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(\\s*(&nbsp;)*\\s*)+|(\\s*(&nbsp;)*\\s*)+$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "p;&nbb",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "s"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "a$",
        "pump": [
          "a\\aa"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "\\a$",
        "pump": [
          "a\\aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s+|\\d+\\.+\\s*)+",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "\t.",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "ss"
        ],
        "suffix": "\u0000",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "0a",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "sd"
        ],
        "suffix": "",
        "pump": [
          "d\u0000d"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\S+)((\\s*[<>=\\s]+)(\\S+))*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "<a\t",
        "pump": [
          "\t\t<a"
        ]
      },
      {
        "prefix": [
          "S<SS"
        ],
        "suffix": "\u0000",
        "pump": [
          "s<SS"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "<a\t",
        "pump": [
          "\t\t<a"
        ]
      },
      {
        "prefix": [
          "Ss"
        ],
        "suffix": "",
        "pump": [
          "s<Ss"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:HTTP\\/1.1 100 Continue.*?\\r\\n\\r\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "TP",
        "pump": [
          "HTTP/1a1 100 Continue\r\n\r\nHTTP/1a1 100 Continue\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s*([a-z0-9]+)\\s*=\\s*([a-z0-9]+(\\s*,\\s*[a-z0-9]+)*)+\\s*$",
    "inputs": [
      {
        "prefix": [
          "a =0"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "a=a"
        ],
        "suffix": ",,",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "0=0,00"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,00"
        ]
      },
      {
        "prefix": [
          "a="
        ],
        "suffix": "ainvainvtkqiafskim,",
        "pump": [
          "ainv"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\{@link\\s+((?:[^\\|]|\\s)+?)(?:\\|([^\\}]|\\s+?))?\\}",
    "inputs": [
      {
        "prefix": [
          "{@link !"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "{@link\t"
        ],
        "suffix": "@",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "{@link\t\n{@link"
        ],
        "suffix": "\t\t#\n\t\t#\nb{hnb\nb{hnb\t\ty`7Y\th~'G'G)YTJJCXLSNGUHY{",
        "pump": [
          "\t\t#\n"
        ]
      },
      {
        "prefix": [
          "{@link !"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "{@link\t"
        ],
        "suffix": "in|\ta{@l",
        "pump": [
          "a\t"
        ]
      },
      {
        "prefix": [
          "{@link\t\n{@li\nvwiorabgjsm"
        ],
        "suffix": "\n{@linink\t\n{@li\n\n{@linink\t\n{@li\nvwiorabgjsm\n{@link\nvwiorabgjsmpn",
        "pump": [
          "\n{@linink\t\n{@li\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>",
    "inputs": [
      {
        "prefix": [
          "<!DOCTYPE"
        ],
        "suffix": "",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "<!DOCTYPE"
        ],
        "suffix": "C",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "<!DOCTYPE"
        ],
        "suffix": "",
        "pump": [
          "[][]"
        ]
      },
      {
        "prefix": [
          "<!DOCTYPE"
        ],
        "suffix": "a",
        "pump": [
          "[][]"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ":([^:]+)+:(.+)$",
    "inputs": [
      {
        "prefix": [
          ":!"
        ],
        "suffix": "",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          ":a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "+zS,+zS,]a(\n}i6oZ^",
        "pump": [
          "+zS,"
        ]
      },
      {
        "prefix": [
          ":!"
        ],
        "suffix": "",
        "pump": [
          ";!"
        ]
      },
      {
        "prefix": [
          ":a"
        ],
        "suffix": ":",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ":\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ":"
        ],
        "suffix": "5EoF5EoF\nJQ1_)(}8V",
        "pump": [
          "5EoF"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:.+/)*(\\d{2,4}-\\d{1,2}-\\d{1,2})-([^/]*)(\\.[^.]+)$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/0a./00-0-0-",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          ":///"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "0/0a./0-0-0",
        "pump": [
          "a/"
        ]
      },
      {
        "prefix": [
          "\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "/\u0000\u0000"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( ?[\\-\\*_] ?){3,}$",
    "inputs": [
      {
        "prefix": [
          " _  _*"
        ],
        "suffix": "\\x00",
        "pump": [
          "* *"
        ]
      },
      {
        "prefix": [
          " *  * "
        ],
        "suffix": "   ",
        "pump": [
          " * *"
        ]
      },
      {
        "prefix": [
          "***_"
        ],
        "suffix": "\u0000",
        "pump": [
          " _"
        ]
      },
      {
        "prefix": [
          "* * *"
        ],
        "suffix": "* * _ * * * _ * ** * _ * * *_  ",
        "pump": [
          "* * _ * "
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\\x00",
        "pump": [
          "* *"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "   ",
        "pump": [
          " * *"
        ]
      },
      {
        "prefix": [
          "**"
        ],
        "suffix": "\u0000",
        "pump": [
          " *"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "* * * * * * ** * * * * * ** * * *  ",
        "pump": [
          "* * * "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "000-0{"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "$-",
        "pump": [
          "aaaaaa"
        ]
      },
      {
        "prefix": [
          "00"
        ],
        "suffix": "",
        "pump": [
          "0-00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "lSN7lSN7oaoihWT7wsKGjOG@",
        "pump": [
          "lSN7"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "<div><span class\\=\\\"gmail_quote\\\">(?:\\n|.)*<\\/div><br>$",
    "inputs": [
      {
        "prefix": [
          "<div><span class=\"gmail_quote\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<div><span class=\"gmail_quote\">"
        ],
        "suffix": "n ",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<div><span class=\"gmail_quote\">"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "<div><span class=\"gmail_quote\">"
        ],
        "suffix": "><br<d",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[0\\]drawtext=font=a((.|\\n)*)b:text=test\\[s0\\]",
    "inputs": [
      {
        "prefix": [
          "[0]drawtext=font=a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[0]drawtext=font=a"
        ],
        "suffix": "]dr\n",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "[0]drawtext=font=a"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "[0]drawtext=font=a"
        ],
        "suffix": "t",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "GlobalSection\\(NestedProjects\\) = preSolution((?:.|\\n)*?)EndGlobalSection",
    "inputs": [
      {
        "prefix": [
          "GlobalSection(NestedProjects) = preSolution"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "GlobalSection(NestedProjects) = preSolution"
        ],
        "suffix": "uti",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "GlobalSection(NestedProjects) = preSolution"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "GlobalSection(NestedProjects) = preSolution"
        ],
        "suffix": "So",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\S+::){1,}(\\S+)$",
    "inputs": [
      {
        "prefix": [
          "!::"
        ],
        "suffix": "\\x09",
        "pump": [
          ";:::::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "!::"
        ],
        "suffix": "\\x09",
        "pump": [
          ";:::::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a\ta",
        "pump": [
          "a::"
        ]
      },
      {
        "prefix": [
          "!::"
        ],
        "suffix": "\\x09",
        "pump": [
          ";:::::"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "a::"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\r\\n|\\r|\\n){3,}",
    "inputs": [
      {
        "prefix": [
          "\r\r"
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\r\r"
        ],
        "suffix": "\ra\n\r",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "* Unpack the data *",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " d$",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "kDm2kDm2(2]</^9!\\H",
        "pump": [
          "kDm2"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}",
    "inputs": [
      {
        "prefix": [
          ">\\x00"
        ],
        "suffix": "",
        "pump": [
          ">?\\x0a>?"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ">\n\na",
        "pump": [
          " >a "
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ">~>~>}:?~>>~>~>}:?~>>\b~<}?<<;}:|:>}:?~={}:>>\b~<}?>@\b={{:<|>\b|\b;=\b<;@<;}:|",
        "pump": [
          ">~>~>}:?~>"
        ]
      },
      {
        "prefix": [
          ">\\x00"
        ],
        "suffix": "",
        "pump": [
          ">?>?"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": ">\na>",
        "pump": [
          " >a "
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:[\\t\\n\\r ]+|[\\t\\n\\r ]*((\\/\\/.*|\\/\\*(.|\\n|\\r)*?\\*\\/)[\\t\\n\\r ]*))+",
    "inputs": [
      {
        "prefix": [
          "  /*"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "\t"
        ],
        "suffix": "a",
        "pump": [
          "\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "spree_(\\w+_?)+_(\\d+)",
    "inputs": [
      {
        "prefix": [
          "spree_0"
        ],
        "suffix": "",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "spree_a"
        ],
        "suffix": "p",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "spree_ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "sp"
        ],
        "suffix": "ree_ree_spspree_spree_",
        "pump": [
          "ree_"
        ]
      },
      {
        "prefix": [
          "spree_t"
        ],
        "suffix": "",
        "pump": [
          "a_"
        ]
      },
      {
        "prefix": [
          "spree_a"
        ],
        "suffix": "p",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "spree_ww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "sp"
        ],
        "suffix": "ree_ree_sppree___eere",
        "pump": [
          "ree_"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " (.+)*::(.+) $",
    "inputs": [
      {
        "prefix": [
          " "
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          " a"
        ],
        "suffix": " a:",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          " \u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " <Nq <Nq,D\tiNeN7F&\t",
        "pump": [
          " <Nq"
        ]
      },
      {
        "prefix": [
          " "
        ],
        "suffix": "",
        "pump": [
          ";;"
        ]
      },
      {
        "prefix": [
          " a"
        ],
        "suffix": " a",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          " \u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "\u0000\u0000"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": " d9c d9cR+nH%wdrxC/",
        "pump": [
          " d9c"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[/][*](\\s|.)+?[*][/]",
    "inputs": [
      {
        "prefix": [
          "/*!"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "/*\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "s\u0000"
        ]
      },
      {
        "prefix": [
          "/*0"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\t",
        "pump": [
          "\t\t"
        ]
      },
      {
        "prefix": [
          "/*\u0000s"
        ],
        "suffix": "",
        "pump": [
          "ss"
        ]
      },
      {
        "prefix": [
          "/*[/*"
        ],
        "suffix": "c\t\t\b\t\tc\t\t\b\t\t\t\r\t\n\t\t\b\t\r\r\n\n\t\t",
        "pump": [
          "c\t\t\b\t\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": ".*?<H3>(<a.*a>)*[\\d\\.\\s]*(.*?)</H3>",
    "inputs": [
      {
        "prefix": [
          "<H3>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H3>"
        ],
        "suffix": "<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H3><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      },
      {
        "prefix": [
          "<H3>"
        ],
        "suffix": "",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H3>"
        ],
        "suffix": "3\t<",
        "pump": [
          "<aa><aa>"
        ]
      },
      {
        "prefix": [
          "<H3><a"
        ],
        "suffix": "",
        "pump": [
          "a><aa><a"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-z][a-z\\d]*([A-Z]+[a-z\\d]*)+$",
    "inputs": [
      {
        "prefix": [
          "aA"
        ],
        "suffix": "!",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "aA"
        ],
        "suffix": "#",
        "pump": [
          "AA"
        ]
      },
      {
        "prefix": [
          "aAa"
        ],
        "suffix": "\u0000",
        "pump": [
          "da"
        ]
      },
      {
        "prefix": [
          "li"
        ],
        "suffix": "XMYBXMYBIHPFPEA7EFe3c<",
        "pump": [
          "XMYB"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\[\\^((?:[^\\]]|\\\\\\]|\\\\\\[)+?)\\]",
    "inputs": [
      {
        "prefix": [
          "[^!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "[^"
        ],
        "suffix": "[]^",
        "pump": [
          "a\\["
        ]
      },
      {
        "prefix": [
          "[^!"
        ],
        "suffix": "",
        "pump": [
          "\\["
        ]
      },
      {
        "prefix": [
          "[^"
        ],
        "suffix": "]\\",
        "pump": [
          "a\\["
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(iphone)(?:.*os\\s*([\\w]+)*\\slike\\smac|;\\sopera)",
    "inputs": [
      {
        "prefix": [
          "iphoneos"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "iphoneosa"
        ],
        "suffix": "i",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "iphoneosww"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "iphon"
        ],
        "suffix": "eyoseyososoyQ6SQ6SHXaM",
        "pump": [
          "eyos"
        ]
      },
      {
        "prefix": [
          "iphoneos"
        ],
        "suffix": "",
        "pump": [
          "pp"
        ]
      },
      {
        "prefix": [
          "iphoneosa"
        ],
        "suffix": "ma\tip",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "iphoneosw"
        ],
        "suffix": "",
        "pump": [
          "ww"
        ]
      },
      {
        "prefix": [
          "ipho"
        ],
        "suffix": "neosneoslneoslikekeiph",
        "pump": [
          "neos"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[uU][rR][lL]\\(\\s*\\\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\\\"\\r\\n])+)\\\"",
    "inputs": [
      {
        "prefix": [
          "url(\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "URL(\""
        ],
        "suffix": "$",
        "pump": [
          "\\$\\$"
        ]
      },
      {
        "prefix": [
          "URL\"\u0000(\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "a(\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "url(\"v"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "URL(\""
        ],
        "suffix": "a\tU\"aURL",
        "pump": [
          "\\$\\$"
        ]
      },
      {
        "prefix": [
          "URL\"\u00000A"
        ],
        "suffix": "",
        "pump": [
          "aA"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r\\n|\\r|\\n){2,}",
    "inputs": [
      {
        "prefix": [
          "\r"
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          "\r"
        ],
        "suffix": "\ra",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([achlmrqstvz])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?\\s*)+)",
    "inputs": [
      {
        "prefix": [
          "a-"
        ],
        "suffix": "-0.+",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "aed"
        ],
        "suffix": "",
        "pump": [
          "-ed"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "e+$",
        "pump": [
          "0--"
        ]
      },
      {
        "prefix": [
          "a-"
        ],
        "suffix": "",
        "pump": [
          "s-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:<script([^>]*)?>)((\\n|\\r|.)*?)(?:<\\/script>)",
    "inputs": [
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "scr<></script",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "",
        "pump": [
          "\\x0d"
        ]
      },
      {
        "prefix": [
          "<script>"
        ],
        "suffix": "s",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^[a-zA-Z_]+(\\s*[a-zA-Z0-9_]+)*$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "\\x00",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "aa"
        ],
        "suffix": "0\t",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "A0A"
        ],
        "suffix": "\u0000",
        "pump": [
          "0A"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "aRZNaRZNVMFRZNVMFv*$",
        "pump": [
          "aRZN"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^((gzip|deflate)\\s*,?\\s*)+|[X\\~\\-]{4,13}$",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "e\tde",
        "pump": [
          "gzip\t"
        ]
      },
      {
        "prefix": [
          "gzipgzips"
        ],
        "suffix": "\u0000",
        "pump": [
          "sgzips"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "efl",
        "pump": [
          "gzip\t"
        ]
      },
      {
        "prefix": [
          "gzipdeflate"
        ],
        "suffix": "\u0000",
        "pump": [
          "sdeflate"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:(.*[^\\\\])\\/(.*[^\\\\])*\\/){1,}",
    "inputs": [
      {
        "prefix": [
          "]/"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\a",
        "pump": [
          "aa//"
        ]
      },
      {
        "prefix": [
          "Vsd'`Vcp_{>rVpVL,\tm4[Ttlu)\bbu Eu\b/"
        ],
        "suffix": "XsdvXsdvq*\nzE",
        "pump": [
          "Xsdv"
        ]
      },
      {
        "prefix": [
          "]/"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "aa//"
        ]
      },
      {
        "prefix": [
          "[Z``+k}zNUP^|X7A5w.$S/"
        ],
        "suffix": "~+%7~+%7zYWOr",
        "pump": [
          "~+%7"
        ]
      },
      {
        "prefix": [
          "]/"
        ],
        "suffix": "",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\",
        "pump": [
          "aa//"
        ]
      },
      {
        "prefix": [
          ":\t. #u38HketQ@u(6oF\tl/"
        ],
        "suffix": "+V;I+V;I3 J]V",
        "pump": [
          "+V;I"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\*/\\*|[a-z\\-]+/[a-z\\-+*]+(?:\\s*;\\s*[^q]\\S*)*)(?:\\s*;\\s*q\\s*=\\s*(0(?:\\.\\d{0,3})|1(?:\\.0{0,3})))?",
    "inputs": [
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "\tq\t;",
        "pump": [
          "\t;\ta"
        ]
      },
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "10\t",
        "pump": [
          "\t;\ta"
        ]
      },
      {
        "prefix": [
          "a/a"
        ],
        "suffix": "\tq\t;",
        "pump": [
          "\t;\ta"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "([^\\s\\)\\(-]|-+[^\\s\\)\\(>])+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": ">->",
        "pump": [
          "a--a"
        ]
      },
      {
        "prefix": [
          "\u0000--"
        ],
        "suffix": "",
        "pump": [
          "---"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "->\t",
        "pump": [
          "a--a"
        ]
      },
      {
        "prefix": [
          "\u0000--"
        ],
        "suffix": "",
        "pump": [
          "---"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\"(?:\\\\.|\"\"|[^\"])+\"|(?:\\\\.|[^\\s\"])+)",
    "inputs": [
      {
        "prefix": [
          "\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\\\"a\t\"a",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\"\"."
        ],
        "suffix": "",
        "pump": [
          "\"\"."
        ]
      },
      {
        "prefix": [
          "\"]"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\\\"\"\t\"\"",
        "pump": [
          "\\a\\a"
        ]
      },
      {
        "prefix": [
          "\"\"\"\""
        ],
        "suffix": "",
        "pump": [
          "\"\"\"\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(\\r?\\n\\s*\\r?\\n)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "\r",
        "pump": [
          "\r\n\r\n"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "\t",
        "pump": [
          "\r\n\r\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(<\\?.*?\\?>\\s*)*",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "<??><??>"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:\\s*,\\s*)+",
    "inputs": [
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "a",
        "pump": [
          "\t,\t"
        ]
      },
      {
        "prefix": [
          ",,"
        ],
        "suffix": "\u0000",
        "pump": [
          "s,"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:＊\\(KC\\) )?((?:\\((?:[\\w\\-\\,\\:]*)*\\)\\s*)*)(.*)$",
    "inputs": [
      {
        "prefix": [
          "("
        ],
        "suffix": "",
        "pump": [
          ","
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "a",
        "pump": [
          ")(("
        ]
      },
      {
        "prefix": [
          "("
        ],
        "suffix": "EZtPEZtPFdCviliPpy",
        "pump": [
          "EZtP"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "/\\*(.|\\s)*?\\*/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "*"
        ],
        "suffix": "\t",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*\t\t\t\r\t\n"
        ],
        "suffix": "\t\t\t\t\t\t\t\t\t\t\n\r\b\b\r\r\r\t\b",
        "pump": [
          "\t\t\t\t"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x09"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "/*",
        "pump": [
          "\t"
        ]
      },
      {
        "prefix": [
          "/*/\t\b\b\b\n\n\t\n\r\b\r\r\n\n\b\b"
        ],
        "suffix": "\n\t\t\t\b\t\n\t\t\t\b\t\b\b\n\r\t\r\t\r\b\r\t\t\b\b\r\t\r\r",
        "pump": [
          "\n\t\t\t\b\t"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^-?(?:[_a-z]|\\\\[\\da-f]+ ?)(?:[\\w-]|\\\\\\\\[\\da-f]+ ?)*",
    "inputs": [
      {
        "prefix": [
          "-a"
        ],
        "suffix": "\\_",
        "pump": [
          "\\\\aaa"
        ]
      },
      {
        "prefix": [
          "_\\ad"
        ],
        "suffix": "\u0000",
        "pump": [
          "dd"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/(\\\\\\n)?\\*(.|\\n)*?\\*(\\\\\\n)?\\/",
    "inputs": [
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "a",
        "pump": [
          "\n"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "",
        "pump": [
          "\\x0a"
        ]
      },
      {
        "prefix": [
          "/*"
        ],
        "suffix": "\\\n*\\",
        "pump": [
          "\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\\/\\*[^*]*\\*+([^\\/][^*]*\\*+)*\\/",
    "inputs": [
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "",
        "pump": [
          "****"
        ]
      },
      {
        "prefix": [
          "/**"
        ],
        "suffix": "*a/",
        "pump": [
          "a**a*"
        ]
      },
      {
        "prefix": [
          "/*/"
        ],
        "suffix": "***.**2****.**2***.**2****}< \r\t \n\r\n \t\t\r\t  \r\n \r\r\r\r\r\r\r\r\t\t\r\r\n\r \n\n\r \r\t\n  \n\t\n \t  \n\n\n \r\r\t\n\r\n\n \r\t\n\r\n\t\n\t\r\r\n\n\r\t\t\n\r",
        "pump": [
          "***.**2*"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(<[a-zA-Z0-9]+)((\\s?[a-zA-Z0-9]+=[\\\"\\'][^\\\"\\']*[\\\"\\']\\s?)*)>",
    "inputs": [
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " a='\"\\x090=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "<a\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<00=\"'"
        ],
        "suffix": "",
        "pump": [
          "s0=\"'"
        ]
      },
      {
        "prefix": [
          "<0"
        ],
        "suffix": "",
        "pump": [
          " a='\"\\x090=\"\""
        ]
      },
      {
        "prefix": [
          "<a"
        ],
        "suffix": "=\"\t>\"\t",
        "pump": [
          "\ta=\"\"\ta=\"\""
        ]
      },
      {
        "prefix": [
          "<00=\""
        ],
        "suffix": "",
        "pump": [
          "\"0=\"\"0=\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "( *\\*\\n)( *\\*.*\\n)+( *\\* @ignore\\n)( *\\*.*\\n)*( )",
    "inputs": [
      {
        "prefix": [
          "*\\x0a*\\x0a"
        ],
        "suffix": "",
        "pump": [
          "*\\x0a*\\x0a"
        ]
      },
      {
        "prefix": [
          "*\n"
        ],
        "suffix": " *",
        "pump": [
          " *\n*\n"
        ]
      },
      {
        "prefix": [
          "*\\x0a*\\x0a"
        ],
        "suffix": "",
        "pump": [
          "*\\x0a*\\x0a"
        ]
      },
      {
        "prefix": [
          "*\n"
        ],
        "suffix": " a",
        "pump": [
          " *\n*\n"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\s([^\\/]+\\.)+.+\\s*$",
    "inputs": [
      {
        "prefix": [
          "\t"
        ],
        "suffix": "/",
        "pump": [
          "a."
        ]
      },
      {
        "prefix": [
          "s\u0000\u0000\u0000"
        ],
        "suffix": "",
        "pump": [
          "0\u0000\u0000\u0000"
        ]
      },
      {
        "prefix": [
          "\t+.\t+.+\\"
        ],
        "suffix": ".(.zz.z..(.zz.z.Q.sL.2mG# iF)PL0ekfh?O.sLV])@fh?O.s\r*",
        "pump": [
          ".(.zz.z."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\pL+([- _./]+|\\pN+|\\pL+)+$",
    "inputs": [
      {
        "prefix": [
          "a "
        ],
        "suffix": "#",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "pL /"
        ],
        "suffix": "\u0000",
        "pump": [
          "_/"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "HSPHHSPHYPUXNWYJGV$",
        "pump": [
          "HSPH"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(((https|http|ftp|file):\\/\\/)|www\\.|\\.\\/|(\\.\\.\\/)+|(\\/{1,2})|(\\d{1,3}\\.){3}\\d{1,3})(((\\w+|-)(\\.?)(\\/?))+)(\\:\\d{1,5}){0,1}(((\\w+|-)(\\.?)(\\/?)(#?))+)((\\?)(\\w+=(\\w?)+(&?))+)?(\\w+#\\w+)?$",
    "inputs": [
      {
        "prefix": [
          "https://-"
        ],
        "suffix": "!",
        "pump": [
          "A0"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "p://",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/-ww"
        ],
        "suffix": "",
        "pump": [
          "/ww"
        ]
      },
      {
        "prefix": [
          "./-"
        ],
        "suffix": "www.wwwww.ww-www.www:1",
        "pump": [
          "www.ww"
        ]
      },
      {
        "prefix": [
          "https://-"
        ],
        "suffix": "!",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "/a"
        ],
        "suffix": "//-",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "/--"
        ],
        "suffix": "",
        "pump": [
          "/-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "/w65/w65C3gOzRe\rz",
        "pump": [
          "/w65"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(?:https?:\\/\\/)(?:[\\da-z\\.-]+)\\.(?:[a-z\\.]{2,6})(?:[\\/\\w\\.\\-\\?#=]*)*\\/?",
    "inputs": [
      {
        "prefix": [
          "https://a.aa"
        ],
        "suffix": "t0..",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://-\u0000..."
        ],
        "suffix": "\u0000",
        "pump": [
          "/."
        ]
      },
      {
        "prefix": [
          "https://a.aa"
        ],
        "suffix": "s:http",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://-\u0000../"
        ],
        "suffix": "\u0000",
        "pump": [
          "//"
        ]
      },
      {
        "prefix": [
          "https://a.a"
        ],
        "suffix": "tp0",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "http://-a"
        ],
        "suffix": "",
        "pump": [
          "da"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[\\w\\s=+-/]+\\(({(.|\\n)*})\\);?",
    "inputs": [],
    "complexity": "exponential"
  },
  {
    "regex": "<meta name=\"generator\"([^>]*)*>\\n*",
    "inputs": [
      {
        "prefix": [
          "<meta name=\"generator\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"generator\""
        ],
        "suffix": "era",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "\b<meta name=\"genera"
        ],
        "suffix": "tor\"tor\"]NR.#\\WEQ+3?X}",
        "pump": [
          "tor\""
        ]
      },
      {
        "prefix": [
          "<meta name=\"generator\""
        ],
        "suffix": "",
        "pump": [
          "!"
        ]
      },
      {
        "prefix": [
          "<meta name=\"generator\""
        ],
        "suffix": "era",
        "pump": [
          "aa"
        ]
      },
      {
        "prefix": [
          "e<meta name=\"genera"
        ],
        "suffix": "tor\"tor\"\tN]0_|&A[=rm-L",
        "pump": [
          "tor\""
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "[A-Za-z](?:[A-Za-z0-9._-]|-)*",
    "inputs": [
      {
        "prefix": [
          "a"
        ],
        "suffix": "#",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          "AA"
        ],
        "suffix": "\u0000",
        "pump": [
          "-A"
        ]
      },
      {
        "prefix": [
          "a"
        ],
        "suffix": "a$",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          "A-"
        ],
        "suffix": "\u0000",
        "pump": [
          "--"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "--TEST--\\s*(.*?)\\s*(?:--CONDITION--\\s*(.*))?\\s*((?:--TEMPLATE(?:\\(.*?\\))?--(?:.*?))+)\\s*(?:--DATA--\\s*(.*))?\\s*--EXCEPTION--\\s*(.*)",
    "inputs": [
      {
        "prefix": [
          "--TEST--\\x00--CONDITION-- \\x00--TEMPLATE--"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE()--)--TEMPLATE()--DATA--)--)--"
        ]
      },
      {
        "prefix": [
          "--TEST--"
        ],
        "suffix": "--TEMPLATE()----DATA---DAT",
        "pump": [
          "--TEMPLATE()--)--"
        ]
      },
      {
        "prefix": [
          "--TEST----TEMPLATE----TEMPLATE--"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE--TEMPLATE--"
        ]
      },
      {
        "prefix": [
          "--TEST-- \\x00--CONDITION-- \\x00--TEMPLATE--"
        ],
        "suffix": "",
        "pump": [
          "--TEMPLATE()--)--TEMPLATE()--DATA--)--)--"
        ]
      },
      {
        "prefix": [
          "--TEST--"
        ],
        "suffix": "--TEMPLATE()----TEMP",
        "pump": [
          "--TEMPLATE()--)--"
        ]
      },
      {
        "prefix": [
          "--TEST----TEMPLATE----TEMPLATE"
        ],
        "suffix": "",
        "pump": [
          "-----TEMPLATE"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "\"(\\n*\\s*(#[^\\n]*|(from [a-zA-Z0-9_\\.]+\\s+)?import\\s+.*))+",
    "inputs": [
      {
        "prefix": [
          "\""
        ],
        "suffix": "\n\tfrom ",
        "pump": [
          "\n\n#"
        ]
      },
      {
        "prefix": [
          "\"#from ._"
        ],
        "suffix": "",
        "pump": [
          "ssimportsfrom ._"
        ]
      },
      {
        "prefix": [
          "\""
        ],
        "suffix": "\n\tfrom a\t",
        "pump": [
          "\n\n#"
        ]
      },
      {
        "prefix": [
          "\"#from _"
        ],
        "suffix": "",
        "pump": [
          "ssimportsfrom _"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^\\[(([\\-]*[0-9\\. ]+[,]{0,1})+[;]{0,1})*\\]$",
    "inputs": [
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "[ "
        ],
        "suffix": ",; [",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "[-"
        ],
        "suffix": "0,100,10,084706",
        "pump": [
          "0,10"
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "[ "
        ],
        "suffix": ",; [",
        "pump": [
          "  "
        ]
      },
      {
        "prefix": [
          "["
        ],
        "suffix": "0-900-90023671",
        "pump": [
          "0-90"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "'(\\\\.|.)*?'",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'\\R3J{9U|."
        ],
        "suffix": "||\\:\\\\(\\||\\:\\\\(\\.{=@?\\?\\;.(.g\baGVoP8hDUF|=r\\:\\\\()|\\.{=@?\\",
        "pump": [
          "||\\:\\\\(\\"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "\\a",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(?:\\s*,)*\\s*            # remaining or crap\n             ([\\w-]+)                 # key, eg: qop\n             =\n             (\"([^\\\\\"]+|\\\\.)*\"|[^,]+) # value, eg: auth-conf or \"NoNcE\"\n             \\s*(?:,\\s*)*             # remaining\n           ",
    "inputs": [
      {
        "prefix": [
          "             \"a"
        ],
        "suffix": "     ",
        "pump": [
          "aa"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": " *\\'((\\\\.|[^\\'])*)\\' *",
    "inputs": [
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": " 'a''",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'."
        ],
        "suffix": "",
        "pump": [
          ".."
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "",
        "pump": [
          "\\]"
        ]
      },
      {
        "prefix": [
          "'"
        ],
        "suffix": "'\\",
        "pump": [
          "\\a"
        ]
      },
      {
        "prefix": [
          "'\u0000"
        ],
        "suffix": "",
        "pump": [
          ".\u0000"
        ]
      },
      {
        "prefix": [
          " '*"
        ],
        "suffix": "\\ *\\24\\\\ooG6 0BCj6\\\\?o`*c^3nhk\b**\\2434\\\\ooG6 0BCj6Ef0fXBekx ",
        "pump": [
          "\\ *\\24\\\\"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "^(([a-z_\\-0-9\\.]|[A-Z_\\-0-9\\.])+)$",
    "inputs": [
      {
        "prefix": [
          "A"
        ],
        "suffix": "!",
        "pump": [
          "-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "#",
        "pump": [
          "a-"
        ]
      },
      {
        "prefix": [
          ""
        ],
        "suffix": "-69--69--a-z99-e5b46a?",
        "pump": [
          "-69-"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "(%[-_0^#:]*(\\d+)*[EO]?d|%[-_0^#:]*(\\d+)*[EO]?e)(.*)(%B)",
    "inputs": [
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "10"
        ]
      },
      {
        "prefix": [
          "%0"
        ],
        "suffix": "%#",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "0271027192369201",
        "pump": [
          "0271"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "",
        "pump": [
          "10"
        ]
      },
      {
        "prefix": [
          "%0"
        ],
        "suffix": "a%",
        "pump": [
          "00"
        ]
      },
      {
        "prefix": [
          "%"
        ],
        "suffix": "80828082279929165",
        "pump": [
          "8082"
        ]
      }
    ],
    "complexity": "exponential"
  },
  {
    "regex": "&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)",
    "inputs": [],
    "complexity": "exponential"
  }
]
